[{"C:\\Users\\exb\\bsupkit\\frontend\\src\\index.js":"1","C:\\Users\\exb\\bsupkit\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\frontauth\\login\\Login.tsx":"3","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\frontauth\\login\\Login-style.tsx":"4","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\frontauth\\login\\Login-copyright.tsx":"5","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\frontauth\\signup\\Signup.tsx":"6","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\frontauth\\signup\\Signup-style.tsx":"7","C:\\Users\\exb\\bsupkit\\frontend\\src\\RouterDecider.tsx":"8","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\form\\Form-style.tsx":"9","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\nav\\nav-top\\NavTop.tsx":"10","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\nav\\nav-side\\NavSide.tsx":"11","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\nav\\nav-top\\NavTop-style.tsx":"12","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\nav\\nav-side\\NavSide-style.tsx":"13","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\nav\\nav-side\\NavSideItem-style.tsx":"14","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\nav\\nav-side\\NavSideItem\\NavSideItemBottom.tsx":"15","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\nav\\nav-side\\NavSideItem\\NavSideItemMain.tsx":"16","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\nav\\nav-side\\NavSideItem\\NavSideItemComponentDrop.tsx":"17","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\nav\\nav-side\\NavSideItem\\NavSideItemComponentDropSub.tsx":"18","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\search-bar\\SearchBarCustom.tsx":"19","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\search-bar\\SearchBarCustom-style.tsx":"20","C:\\Users\\exb\\bsupkit\\frontend\\src\\reducer\\index.tsx":"21","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\frontauth\\signup\\redux\\SignupReducer.tsx":"22","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\frontauth\\signup\\redux\\SignupAction.tsx":"23","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\frontauth\\signup\\redux\\SignupEffect.tsx":"24","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\frontauth\\signup\\redux\\SignupConstant.tsx":"25","C:\\Users\\exb\\bsupkit\\frontend\\src\\config.js":"26","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\loading\\Loading.tsx":"27","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\loading\\Loading-style.tsx":"28","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\modal\\ModalCom.tsx":"29","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\modal\\ModalCom-style.tsx":"30","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\modal\\Loadingpage\\LoadingPage.tsx":"31","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\modal\\Loadingpage\\redux\\LoadingConstant.tsx":"32","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\modal\\Loadingpage\\redux\\LoadingReducer.tsx":"33","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\dialog\\DialogCom-style.tsx":"34","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\dialog\\DialogCom-interface.tsx":"35","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\modal\\Errorpage\\Errorpage.tsx":"36","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\modal\\Errorpage\\ErrorpageTitle.tsx":"37","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\modal\\Errorpage\\ErrorpageAction.tsx":"38","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\modal\\Errorpage\\ErrorpageContent.tsx":"39","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\dialog\\DialogCom.tsx":"40","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\modal\\Successpage\\Successpage.tsx":"41","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\modal\\Successpage\\SuccesspageContent.tsx":"42","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\modal\\Successpage\\SuccesspageTitle.tsx":"43","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\modal\\Successpage\\SuccesspageAction.tsx":"44","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\frontauth\\signup\\Signup-message.tsx":"45","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\frontauth\\signup\\Signup-decider.tsx":"46","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\frontauth\\login\\redux\\LoginAction.tsx":"47","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\frontauth\\login\\redux\\LoginEffect.tsx":"48","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\frontauth\\login\\redux\\LoginConstant.tsx":"49","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\frontauth\\login\\redux\\LoginReducer.tsx":"50","C:\\Users\\exb\\bsupkit\\frontend\\src\\context\\AuthContext.tsx":"51","C:\\Users\\exb\\bsupkit\\frontend\\src\\ProtectedRoute.tsx":"52","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\axios\\PublicFetch.tsx":"53","C:\\Users\\exb\\bsupkit\\frontend\\src\\context\\FetchContext.tsx":"54","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\context-menu\\ContextMenu.tsx":"55","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\user\\nav\\NavTopAccountContextMenu.tsx":"56","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\platform\\platformdisplay\\Platform.tsx":"57","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\platform\\platformdisplay\\Platform-style.tsx":"58","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\platform\\PlatformNavTop.tsx":"59","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\platform\\platformadd\\Platformadd.tsx":"60","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\platform\\platformadd\\Platformadd-style.tsx":"61","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\form\\auth\\login\\LoginForm.tsx":"62","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\form\\auth\\login\\LoginFormValidSchema.tsx":"63","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\form\\auth\\signup\\SignupForm.tsx":"64","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\form\\auth\\signup\\SignupFormValidSchema.tsx":"65","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\platform\\platformdisplay\\platformitem\\PlatformItemAdd.tsx":"66","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\platform\\platformdisplay\\platformitem\\PlatformItemOwn.tsx":"67","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\modal\\index.tsx":"68","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\logo\\Logo.tsx":"69","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\logo\\Logo-style.tsx":"70","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\user\\myaccount\\MyAccount.tsx":"71","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\user\\myaccount\\MyAccount-style.tsx":"72","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\form\\platform\\platform\\PlatformForm.tsx":"73","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\form\\platform\\platform\\PlatformFormValidSchema.tsx":"74","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\form\\platform\\platform\\redux\\PlatformAction.tsx":"75","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\form\\platform\\platform\\redux\\PlatformConstant.tsx":"76","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\form\\platform\\platform\\redux\\PlatformEffect.tsx":"77","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\nav\\nav-inner\\NavInner.tsx":"78","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\nav\\nav-inner\\NavInner-style.tsx":"79","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\nav\\nav-top\\NavTopPlatform.tsx":"80","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\feature\\Feature.tsx":"81","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\feature\\Feature-style.tsx":"82","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\feature\\redux\\FeatureReducer.tsx":"83","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\feature\\redux\\FeatureConstant.tsx":"84","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\feature\\redux\\FeatureAction.tsx":"85","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\feature\\redux\\FeatureEffect.tsx":"86","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\feature\\FeatureRoute.tsx":"87","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\dashboard\\Dashboard.tsx":"88","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\dashboard\\DashboardGrid.tsx":"89","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\dashboard\\Dashboard-style.tsx":"90","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\Connection-style.tsx":"91","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\ConnectionInterface.tsx":"92","C:\\Users\\exb\\bsupkit\\frontend\\src\\img\\brand\\index.tsx":"93","C:\\Users\\exb\\bsupkit\\frontend\\src\\img\\brand\\facebook.tsx":"94","C:\\Users\\exb\\bsupkit\\frontend\\src\\img\\brand\\linkedin.tsx":"95","C:\\Users\\exb\\bsupkit\\frontend\\src\\img\\brand\\zoho.tsx":"96","C:\\Users\\exb\\bsupkit\\frontend\\src\\windowpop\\windowpop.tsx":"97","C:\\Users\\exb\\bsupkit\\frontend\\src\\application\\zoho\\people\\zohoPeople.tsx":"98","C:\\Users\\exb\\bsupkit\\frontend\\src\\application\\zoho\\people\\zohoPeopleForm.tsx":"99","C:\\Users\\exb\\bsupkit\\frontend\\src\\application\\zoho\\people\\ZohoPeople.tsx":"100","C:\\Users\\exb\\bsupkit\\frontend\\src\\application\\zoho\\people\\ZohoPeopleForm.tsx":"101","C:\\Users\\exb\\bsupkit\\frontend\\src\\application\\WrapperApp.tsx":"102","C:\\Users\\exb\\bsupkit\\frontend\\src\\application\\zoho\\people\\ZohoPeopleStatus.tsx":"103","C:\\Users\\exb\\bsupkit\\frontend\\src\\application\\ApplicationStatus.tsx":"104","C:\\Users\\exb\\bsupkit\\frontend\\src\\application\\ApplicationStatusS.tsx":"105","C:\\Users\\exb\\bsupkit\\frontend\\src\\application\\AppilcationStatusF.tsx":"106","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\Connection\\Connection.tsx":"107","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\Connection\\ConnectionSection.tsx":"108","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\Connection\\ConnectionSectionItem.tsx":"109","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\Connection\\ConnectionSectionItemList.tsx":"110","C:\\Users\\exb\\bsupkit\\frontend\\src\\img\\brand\\quickbooks.tsx":"111","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\Connection\\ConnectionSectionContextMenu.tsx":"112","C:\\Users\\exb\\bsupkit\\frontend\\src\\img\\brand\\mailchimp.tsx":"113","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\form\\platform\\myaccount\\Changepassword\\Changepassword.tsx":"114","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\form\\platform\\myaccount\\Profile\\MyAccountForm.tsx":"115","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\form\\platform\\myaccount\\Changepassword\\ChangepasswordValidSchema.tsx":"116","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\form\\platform\\myaccount\\Profile\\MyAccountFormValidSchema.tsx":"117","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\frontauth\\forgetpassword\\ForgetPassword.tsx":"118","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\frontauth\\forgetpassword\\ForgetPassword-style.tsx":"119","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\form\\auth\\forgetpassword\\ForgetPasswordForm.tsx":"120","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\form\\auth\\forgetpassword\\ForgetPasswordFormValidSchema.tsx":"121","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\frontauth\\forgetpassword\\ForgetPasswordRecover.tsx":"122","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\connectionMetrics\\ConnectionMetrics.tsx":"123","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\connectionMetrics\\ConnectionMetricsSection.tsx":"124","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\connectionMetrics\\ConnectionMetricsSectionList.tsx":"125","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\connectionMetrics\\ConnectionMetricsDialogCam\\ConnectionMetricsDialogCam.tsx":"126","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\connectionMetrics\\ConnectionMetricsDialogCam\\ConnectionMetricsDialogCamAction.tsx":"127","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\connectionMetrics\\ConnectionMetricsDialogCam\\ConnectionMetricsDialogCamContent.tsx":"128","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\connectionMetrics\\ConnectionMetricsDialogCam\\ConnectionMetricsDialogCamTitle.tsx":"129","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\connectionMetrics\\ConnectionMetricsDialogCamConnection\\ConnectionMetricsDialogCamConnection.tsx":"130","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\connectionMetrics\\ConnectionMetricsDialogCamConnection\\ConnectionMetricsDialogCamConnectionTitle.tsx":"131","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\connectionMetrics\\ConnectionMetricsDialogCamConnection\\ConnectionMetricsDialogCamConnectionContent.tsx":"132","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\connectionMetrics\\redux\\ConnectionMetricsReducer.tsx":"133","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\connectionMetrics\\redux\\ConnectionMetricsConstant.tsx":"134","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\visualization\\template\\TemplateBox.tsx":"135","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\visualization\\template\\TemplateBox-style.tsx":"136","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\visualization\\template\\TemplateBoxChart.tsx":"137","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\visualization\\template\\TemplateDate.tsx":"138","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\visualization\\template\\TemplateMinMax.tsx":"139","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\visualization\\application\\Application.tsx":"140","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\visualization\\application\\ApplicationSection.tsx":"141","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\visualization\\application\\Application-style.tsx":"142","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\visualization\\scoreline\\Scoreline.tsx":"143","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\visualization\\line\\Line.tsx":"144","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\visualization\\line\\LineFlyout.tsx":"145","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\visualization\\score\\Score.tsx":"146","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\visualization\\score\\ScoreChart.tsx":"147","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\visualization\\line\\LineChart.tsx":"148"},{"size":1265,"mtime":1617857987233,"results":"149","hashOfConfig":"150"},{"size":362,"mtime":499162500000,"results":"151","hashOfConfig":"150"},{"size":3687,"mtime":1616258315372,"results":"152","hashOfConfig":"150"},{"size":1750,"mtime":1613880663978,"results":"153","hashOfConfig":"150"},{"size":468,"mtime":1612328423114,"results":"154","hashOfConfig":"150"},{"size":1493,"mtime":1614171560205,"results":"155","hashOfConfig":"150"},{"size":597,"mtime":1611755742027,"results":"156","hashOfConfig":"150"},{"size":2695,"mtime":1617418272434,"results":"157","hashOfConfig":"150"},{"size":1109,"mtime":1615513947917,"results":"158","hashOfConfig":"150"},{"size":2013,"mtime":1617886957405,"results":"159","hashOfConfig":"150"},{"size":2069,"mtime":1614783036014,"results":"160","hashOfConfig":"150"},{"size":1278,"mtime":1614577355092,"results":"161","hashOfConfig":"150"},{"size":1259,"mtime":1614238362907,"results":"162","hashOfConfig":"150"},{"size":503,"mtime":1612027515596,"results":"163","hashOfConfig":"150"},{"size":1333,"mtime":1612027268541,"results":"164","hashOfConfig":"150"},{"size":1130,"mtime":1615879660085,"results":"165","hashOfConfig":"150"},{"size":1604,"mtime":1612027940313,"results":"166","hashOfConfig":"150"},{"size":1013,"mtime":1612009076709,"results":"167","hashOfConfig":"150"},{"size":385,"mtime":1612082251940,"results":"168","hashOfConfig":"150"},{"size":685,"mtime":1612081561745,"results":"169","hashOfConfig":"150"},{"size":708,"mtime":1616759346120,"results":"170","hashOfConfig":"150"},{"size":534,"mtime":1612369500054,"results":"171","hashOfConfig":"150"},{"size":1245,"mtime":1613401341124,"results":"172","hashOfConfig":"150"},{"size":383,"mtime":1613547756064,"results":"173","hashOfConfig":"150"},{"size":44,"mtime":1612368570719,"results":"174","hashOfConfig":"150"},{"size":443,"mtime":1615566090078,"results":"175","hashOfConfig":"150"},{"size":690,"mtime":1612427914345,"results":"176","hashOfConfig":"150"},{"size":301,"mtime":1612416920588,"results":"177","hashOfConfig":"150"},{"size":1166,"mtime":1612454897557,"results":"178","hashOfConfig":"150"},{"size":670,"mtime":1612520757363,"results":"179","hashOfConfig":"150"},{"size":923,"mtime":1614231092491,"results":"180","hashOfConfig":"150"},{"size":290,"mtime":1614519657615,"results":"181","hashOfConfig":"150"},{"size":1408,"mtime":1613401386433,"results":"182","hashOfConfig":"150"},{"size":417,"mtime":1616643686909,"results":"183","hashOfConfig":"150"},{"size":544,"mtime":1612509769178,"results":"184","hashOfConfig":"150"},{"size":1120,"mtime":1613401402127,"results":"185","hashOfConfig":"150"},{"size":433,"mtime":1612512441764,"results":"186","hashOfConfig":"150"},{"size":862,"mtime":1612520688469,"results":"187","hashOfConfig":"150"},{"size":831,"mtime":1613401903241,"results":"188","hashOfConfig":"150"},{"size":2297,"mtime":1617418263003,"results":"189","hashOfConfig":"150"},{"size":1175,"mtime":1612540751416,"results":"190","hashOfConfig":"150"},{"size":616,"mtime":1612537383647,"results":"191","hashOfConfig":"150"},{"size":501,"mtime":1612536560261,"results":"192","hashOfConfig":"150"},{"size":1113,"mtime":1612541899701,"results":"193","hashOfConfig":"150"},{"size":309,"mtime":1612630656765,"results":"194","hashOfConfig":"150"},{"size":2107,"mtime":1613979032757,"results":"195","hashOfConfig":"150"},{"size":1617,"mtime":1614589959539,"results":"196","hashOfConfig":"150"},{"size":537,"mtime":1613650875418,"results":"197","hashOfConfig":"150"},{"size":38,"mtime":1613389791442,"results":"198","hashOfConfig":"150"},{"size":472,"mtime":1613391902050,"results":"199","hashOfConfig":"150"},{"size":3445,"mtime":1615391695691,"results":"200","hashOfConfig":"150"},{"size":430,"mtime":1613745099635,"results":"201","hashOfConfig":"150"},{"size":213,"mtime":1613614351537,"results":"202","hashOfConfig":"150"},{"size":924,"mtime":1614167792986,"results":"203","hashOfConfig":"150"},{"size":2320,"mtime":1614740177657,"results":"204","hashOfConfig":"150"},{"size":1657,"mtime":1616257863497,"results":"205","hashOfConfig":"150"},{"size":3444,"mtime":1616261793715,"results":"206","hashOfConfig":"150"},{"size":1622,"mtime":1613977669167,"results":"207","hashOfConfig":"150"},{"size":1356,"mtime":1614237302973,"results":"208","hashOfConfig":"150"},{"size":1596,"mtime":1614246312318,"results":"209","hashOfConfig":"150"},{"size":839,"mtime":1613980185198,"results":"210","hashOfConfig":"150"},{"size":2340,"mtime":1614231742896,"results":"211","hashOfConfig":"150"},{"size":323,"mtime":1613978986411,"results":"212","hashOfConfig":"150"},{"size":4090,"mtime":1613979036758,"results":"213","hashOfConfig":"150"},{"size":1325,"mtime":1613979038870,"results":"214","hashOfConfig":"150"},{"size":1179,"mtime":1614070293516,"results":"215","hashOfConfig":"150"},{"size":1801,"mtime":1614071394379,"results":"216","hashOfConfig":"150"},{"size":867,"mtime":1614171120850,"results":"217","hashOfConfig":"150"},{"size":576,"mtime":1614237512074,"results":"218","hashOfConfig":"150"},{"size":210,"mtime":1614238133699,"results":"219","hashOfConfig":"150"},{"size":2286,"mtime":1616257742040,"results":"220","hashOfConfig":"150"},{"size":840,"mtime":1614317205805,"results":"221","hashOfConfig":"150"},{"size":3418,"mtime":1614426924620,"results":"222","hashOfConfig":"150"},{"size":530,"mtime":1613989350417,"results":"223","hashOfConfig":"150"},{"size":1064,"mtime":1614246313535,"results":"224","hashOfConfig":"150"},{"size":42,"mtime":1614008283834,"results":"225","hashOfConfig":"150"},{"size":441,"mtime":1614055769885,"results":"226","hashOfConfig":"150"},{"size":4690,"mtime":1616257677139,"results":"227","hashOfConfig":"150"},{"size":1861,"mtime":1614316933159,"results":"228","hashOfConfig":"150"},{"size":1925,"mtime":1614758459154,"results":"229","hashOfConfig":"150"},{"size":2639,"mtime":1617887052001,"results":"230","hashOfConfig":"150"},{"size":2488,"mtime":1614779714231,"results":"231","hashOfConfig":"150"},{"size":581,"mtime":1614604731384,"results":"232","hashOfConfig":"150"},{"size":44,"mtime":1614581529525,"results":"233","hashOfConfig":"150"},{"size":821,"mtime":1614606453784,"results":"234","hashOfConfig":"150"},{"size":438,"mtime":1614606158952,"results":"235","hashOfConfig":"150"},{"size":847,"mtime":1617787283673,"results":"236","hashOfConfig":"150"},{"size":1050,"mtime":1617887680908,"results":"237","hashOfConfig":"150"},{"size":1080,"mtime":1614755320810,"results":"238","hashOfConfig":"150"},{"size":502,"mtime":1614691173402,"results":"239","hashOfConfig":"150"},{"size":3041,"mtime":1617093143886,"results":"240","hashOfConfig":"150"},{"size":351,"mtime":1615273975908,"results":"241","hashOfConfig":"150"},{"size":1025,"mtime":1616581067484,"results":"242","hashOfConfig":"150"},{"size":455,"mtime":1616580812485,"results":"243","hashOfConfig":"150"},{"size":447,"mtime":1616581113723,"results":"244","hashOfConfig":"150"},{"size":7083,"mtime":1616581141633,"results":"245","hashOfConfig":"150"},{"size":499,"mtime":1616829979047,"results":"246","hashOfConfig":"150"},{"size":616,"mtime":1615508433816,"results":"247","hashOfConfig":"150"},{"size":1507,"mtime":1615508442381,"results":"248","hashOfConfig":"150"},{"size":480,"mtime":1615511822728,"results":"249","hashOfConfig":"150"},{"size":3765,"mtime":1615725704677,"results":"250","hashOfConfig":"150"},{"size":712,"mtime":1615538492751,"results":"251","hashOfConfig":"150"},{"size":1635,"mtime":1615770530709,"results":"252","hashOfConfig":"150"},{"size":577,"mtime":1616834799273,"results":"253","hashOfConfig":"150"},{"size":1442,"mtime":1616863234967,"results":"254","hashOfConfig":"150"},{"size":1163,"mtime":1616826715393,"results":"255","hashOfConfig":"150"},{"size":589,"mtime":1615948600726,"results":"256","hashOfConfig":"150"},{"size":2059,"mtime":1617886599322,"results":"257","hashOfConfig":"150"},{"size":1084,"mtime":1615948606542,"results":"258","hashOfConfig":"150"},{"size":4004,"mtime":1617093108969,"results":"259","hashOfConfig":"150"},{"size":983,"mtime":1616581133245,"results":"260","hashOfConfig":"150"},{"size":3799,"mtime":1616982283179,"results":"261","hashOfConfig":"150"},{"size":4153,"mtime":1616580919210,"results":"262","hashOfConfig":"150"},{"size":5293,"mtime":1616236722632,"results":"263","hashOfConfig":"150"},{"size":13516,"mtime":1617037400297,"results":"264","hashOfConfig":"150"},{"size":715,"mtime":1616236329867,"results":"265","hashOfConfig":"150"},{"size":598,"mtime":1616210078700,"results":"266","hashOfConfig":"150"},{"size":1628,"mtime":1616258593523,"results":"267","hashOfConfig":"150"},{"size":452,"mtime":1616258181294,"results":"268","hashOfConfig":"150"},{"size":2029,"mtime":1616259057932,"results":"269","hashOfConfig":"150"},{"size":700,"mtime":1616258786335,"results":"270","hashOfConfig":"150"},{"size":1283,"mtime":1616259172897,"results":"271","hashOfConfig":"150"},{"size":539,"mtime":1616566387038,"results":"272","hashOfConfig":"150"},{"size":10636,"mtime":1617090063180,"results":"273","hashOfConfig":"150"},{"size":3428,"mtime":1617035135440,"results":"274","hashOfConfig":"150"},{"size":1331,"mtime":1616743114593,"results":"275","hashOfConfig":"150"},{"size":213,"mtime":1616600572370,"results":"276","hashOfConfig":"150"},{"size":1471,"mtime":1616657406202,"results":"277","hashOfConfig":"150"},{"size":503,"mtime":1616746492232,"results":"278","hashOfConfig":"150"},{"size":3567,"mtime":1616941164013,"results":"279","hashOfConfig":"150"},{"size":440,"mtime":1616746571168,"results":"280","hashOfConfig":"150"},{"size":2729,"mtime":1616937410486,"results":"281","hashOfConfig":"150"},{"size":1201,"mtime":1617006562224,"results":"282","hashOfConfig":"150"},{"size":404,"mtime":1616761250399,"results":"283","hashOfConfig":"150"},{"size":3793,"mtime":1617898481970,"results":"284","hashOfConfig":"150"},{"size":2454,"mtime":1617893586712,"results":"285","hashOfConfig":"150"},{"size":1620,"mtime":1617893800455,"results":"286","hashOfConfig":"150"},{"size":703,"mtime":1617768610399,"results":"287","hashOfConfig":"150"},{"size":659,"mtime":1617874733016,"results":"288","hashOfConfig":"150"},{"size":365,"mtime":1617888550680,"results":"289","hashOfConfig":"150"},{"size":4848,"mtime":1617897892354,"results":"290","hashOfConfig":"150"},{"size":2626,"mtime":1617794122542,"results":"291","hashOfConfig":"150"},{"size":566,"mtime":1617898287742,"results":"292","hashOfConfig":"150"},{"size":346,"mtime":1617898301490,"results":"293","hashOfConfig":"150"},{"size":907,"mtime":1617896174456,"results":"294","hashOfConfig":"150"},{"size":354,"mtime":1617896936219,"results":"295","hashOfConfig":"150"},{"size":721,"mtime":1617896873558,"results":"296","hashOfConfig":"150"},{"size":2530,"mtime":1617898287057,"results":"297","hashOfConfig":"150"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},"13vcvof",{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"306"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"311"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"306"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"306"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"306"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"306"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"306"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"306"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"306"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"306"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"306"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"306"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"306"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"306"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"306"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"306"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"306"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"306"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"306"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"306"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"306"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"306"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"306"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"306"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"306"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"306"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"306"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"306"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"306"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"306"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"306"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"306"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"306"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"306"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"306"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"306"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"306"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"306"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"306"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"500","usedDeprecatedRules":"306"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503","usedDeprecatedRules":"306"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"514","usedDeprecatedRules":"306"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"517","usedDeprecatedRules":"306"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"520","usedDeprecatedRules":"306"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"523","usedDeprecatedRules":"306"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"306"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"529","usedDeprecatedRules":"306"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"544","messages":"545","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"546","messages":"547","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"548","usedDeprecatedRules":"306"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"551","usedDeprecatedRules":"306"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"556","messages":"557","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558","usedDeprecatedRules":"306"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"561","usedDeprecatedRules":"306"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"564","usedDeprecatedRules":"306"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"567","usedDeprecatedRules":"306"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"570","usedDeprecatedRules":"306"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"573","usedDeprecatedRules":"306"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"576","usedDeprecatedRules":"306"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"581","usedDeprecatedRules":"306"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"586","usedDeprecatedRules":"306"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"589","usedDeprecatedRules":"306"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"592","usedDeprecatedRules":"306"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"595","usedDeprecatedRules":"306"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"598","usedDeprecatedRules":"306"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"603","usedDeprecatedRules":"306"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"606","usedDeprecatedRules":"306"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"609","usedDeprecatedRules":"306"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"612","usedDeprecatedRules":"306"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"615","usedDeprecatedRules":"306"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"618","usedDeprecatedRules":"306"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"621","usedDeprecatedRules":"306"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"624","usedDeprecatedRules":"306"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"627","usedDeprecatedRules":"306"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"630","usedDeprecatedRules":"306"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"633","usedDeprecatedRules":"306"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"636","usedDeprecatedRules":"306"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"639","usedDeprecatedRules":"306"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"642","messages":"643","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"646","usedDeprecatedRules":"306"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"651","messages":"652","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"657","usedDeprecatedRules":"306"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"660","usedDeprecatedRules":"306"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"663","usedDeprecatedRules":"306"},{"filePath":"664","messages":"665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"668","usedDeprecatedRules":"306"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"673","usedDeprecatedRules":"306"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"676","usedDeprecatedRules":"306"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"679","usedDeprecatedRules":"306"},"C:\\Users\\exb\\bsupkit\\frontend\\src\\index.js",[],["680","681"],"C:\\Users\\exb\\bsupkit\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\frontauth\\login\\Login.tsx",["682","683"],"import React, { ReactDOM, useEffect } from 'react';\r\nimport useStyles from './Login-style';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport LoginForm from '../../../utility/form/auth/login/LoginForm'\r\nimport config from './../../../config';\r\nimport Box from '@material-ui/core/Box';\r\nimport {ELS} from './../../modal';\r\nimport { FaFacebookSquare ,FaLinkedin,FaGoogle } from 'react-icons/fa';\r\n\r\nconst Login : React.FC = () => {\r\n    const classes = useStyles();\r\n    const handleClick = (type : string) => {\r\n      switch(type){\r\n        case 'Facebook':\r\n          window.location.replace(String(config.FACEBOOK_API));\r\n          break;\r\n        case 'Google':\r\n          break;\r\n      }\r\n    }\r\n\r\n    //Oauth Button Option\r\n    const oauthButton = [\r\n      {\r\n        tag: \"Facebook\",\r\n        actionTag:\"Facebook\",\r\n        icon: <FaFacebookSquare size={30}/>,\r\n        colorButton: \"#3B5998\"\r\n      },\r\n      { \r\n        tag: \"Google\",\r\n        actionTag:\"Google\",\r\n        icon: <FaGoogle size={30}/>,\r\n        colorButton: \"#EA4335\"\r\n      },\r\n      {\r\n        tag: \"Linkedin\",\r\n        actionTag:\"Linkedin\",\r\n        icon: <FaLinkedin size={30}/>,\r\n        colorButton: \"#0077B5\"\r\n      }\r\n    ]\r\n\r\n    const oauthButtonList = oauthButton.map((item)=>{\r\n      return(\r\n      <>\r\n      <Box mt={2}>\r\n        <Button variant=\"contained\" onClick= {() => handleClick(item.actionTag)} className={classes.oauthButton} style={item.tag==='Facebook'? {backgroundColor: item.colorButton} : {backgroundColor: 'grey'}} disabled={item.tag==='Facebook' ? false : true}>\r\n        <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"flex-start\"\r\n            alignItems=\"stretch\"\r\n            className={classes.oauthButtonGrid}\r\n          >\r\n            <span className={classes.oauthButtonIconGrid}> {item.icon}</span>\r\n            <Typography variant=\"button\" display=\"block\" className={classes.oauthButtonText} gutterBottom>  Sign in with {item.tag}  </Typography>\r\n            </Grid>\r\n        </Button>\r\n      </Box>\r\n      </>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <>\r\n      <ELS />\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n          <LoginForm />\r\n        <Grid container>\r\n          <Grid item xs>\r\n\r\n            <Link href=\"/auth/forgetpassword\" variant=\"body2\">\r\n              Forgot password?\r\n            </Link>\r\n          </Grid>\r\n          <Grid item>\r\n            <Link href=\"/auth/signup\" variant=\"body2\">\r\n              {\"Don't have an account? Sign Up\"}\r\n            </Link>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <div className={classes.lowerORpaper}>\r\n       <Typography>\r\n            OR \r\n       </Typography>\r\n      </div>\r\n      <div className={classes.lowerpaper}>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"space-evenly\"\r\n          alignItems=\"stretch\"\r\n          spacing={0}\r\n          className=\"altauth\"\r\n        >\r\n          {oauthButtonList}\r\n       </Grid>\r\n      </div>   \r\n    </Container>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default Login;",["684","685"],"C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\frontauth\\login\\Login-style.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\frontauth\\login\\Login-copyright.tsx",[],["686","687"],"C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\frontauth\\signup\\Signup.tsx",["688","689"],"import React, { useEffect} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useStyles from './Signup-style';\r\nimport Container from '@material-ui/core/Container';\r\nimport SignupForm from '../../../utility/form/auth/signup/SignupForm'\r\nimport { useSelector } from 'react-redux';\r\nimport {RootState} from './../../../reducer';\r\nimport {success} from './Signup-message';\r\nimport {ELS} from './../../modal';\r\n\r\nexport default function SignUp() {\r\n  const status = useSelector((state:RootState)=>state.loading);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <ELS success={success}/>\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <SignupForm/>\r\n        <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/auth/login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n      </div>\r\n    </Container>\r\n    </>\r\n  );\r\n}","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\frontauth\\signup\\Signup-style.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\RouterDecider.tsx",["690","691"],"import React, { ReactDOM, useContext } from 'react';\r\nimport {  Switch, Route} from \"react-router-dom\";\r\nimport ForgetPassword from './view/frontauth/forgetpassword/ForgetPassword';\r\nimport ForgetPasswordRecover from './view/frontauth/forgetpassword/ForgetPasswordRecover';\r\nimport Login from \"./view/frontauth/login/Login\";\r\nimport Signup from \"./view/frontauth/signup/Signup\";\r\nimport Feature from \"./view/feature/feature/Feature\";\r\nimport LoadingPage from \"./view/modal/Successpage/Successpage\";\r\nimport SignUpDecider from \"./view/frontauth/signup/Signup-decider\";\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport {AuthContext} from './context/AuthContext';\r\nimport Platform from './view/platform/platformdisplay/Platform';\r\nimport PlatformAdd from './view/platform/platformadd/Platformadd';\r\nimport MyAccount from './view/user/myaccount/MyAccount';\r\nimport ZohoPeople from './application/zoho/people/ZohoPeople';\r\nimport ApplicationStatus from './application/ApplicationStatus';\r\nimport TemplateBox from './utility/visualization/template/TemplateBox';\r\nimport {ELS} from './view/modal'\r\nconst RouterDecider : React.FC = () => {\r\n  const {authState} = useContext(AuthContext);\r\n\r\n      /*const isAuth = () => {\r\n        console.log(authState)\r\n        console.log('isAuth')\r\n        if(!authState.expiresAt || !authState.userInfo){\r\n            return false;\r\n        }\r\n        return new Date().getTime() / 1000 < authState.expiresAt\r\n       // return true;\r\n        //return true;\r\n    }*/\r\n  //console.log(isAuth())\r\n   return(\r\n    <>\r\n        <ELS />\r\n        <Switch>\r\n          <Route exact path=\"/auth/login\" component= {Login} />\r\n          <Route exact path=\"/auth/forgetpassword\" component= {ForgetPassword} />\r\n          <Route exact path=\"/auth/recover\" component= {ForgetPasswordRecover} />\r\n          <Route exact path=\"/auth/test\" component= {TemplateBox} />\r\n          <Route exact path=\"/auth/signup\" component = {Signup} />\r\n          <Route exact path=\"/auth/signup/:status\" component = {SignUpDecider}/>   \r\n          <Route exact path=\"/auth/app/zoho/people\" component = {ZohoPeople}/>   \r\n          <Route exact path=\"/auth/app/complete/:status\" component = {ApplicationStatus}/>  \r\n          <ProtectedRoute exact path=\"/platform/add\" component = {PlatformAdd} authState = {authState}/>\r\n          <ProtectedRoute path=\"/platform/:platformid\" component = {Feature} authState = {authState}/>\r\n          <ProtectedRoute exact path=\"/\" component = {Platform} authState = {authState}/>\r\n          <ProtectedRoute path=\"/myaccount\" component= {MyAccount} authState = {authState}/>          \r\n        </Switch>\r\n    </>    \r\n   ); \r\n}\r\n\r\nexport default RouterDecider","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\form\\Form-style.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\nav\\nav-top\\NavTop.tsx",["692","693","694","695","696","697","698","699","700"],"import React, { ReactDOM ,useEffect, useState ,useContext} from 'react';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useStyles from './NavTop-style'; \r\nimport {NavTopI} from './../../../../model/nav/Nav'\r\nimport NavTopPlatform from './NavTopPlatform';\r\nimport Button from '@material-ui/core/Button';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport {AuthContext} from './../../../../context/AuthContext';\r\nimport {FetchContext} from './../../../../context/FetchContext';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport NavTopRight from '../../../user/nav/NavTopAccountContextMenu';\r\n//<LinearProgress />\r\n\r\nconst NavTop : React.FC<NavTopI> = ({nav,type}) => {\r\n    let platform;\r\n    type === 'Platform' ? platform = true : platform = false; \r\n    const {open,setOpen} = nav;\r\n    const {authState} = useContext(AuthContext);\r\n    const {authAxios} = useContext(FetchContext);\r\n\r\n    //ContextMenu\r\n    const classes = useStyles();\r\n    //Need to use useContext/Redux\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n      };\r\n      const handleDrawerClose = () => {\r\n        setOpen(false);\r\n      };     \r\n\r\n   return(\r\n     <>\r\n    <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift , classes.backgroundColor)}>\r\n\r\n    <Toolbar className={classes.toolbar}>\r\n        <IconButton edge=\"start\"  color=\"inherit\" aria-label=\"open drawer\" onClick={handleDrawerOpen} className={clsx(classes.menuButton, open && classes.menuButtonHidden)} >\r\n          <MenuIcon />\r\n        </IconButton>\r\n      <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n        <NavTopPlatform />\r\n      </Typography>\r\n      <NavTopRight />\r\n    </Toolbar>\r\n  </AppBar>   \r\n  \r\n  </>\r\n   ); \r\n}\r\n\r\nexport default NavTop","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\nav\\nav-side\\NavSide.tsx",["701","702","703"],"import React, { ReactDOM , useState  } from 'react';\r\nimport clsx from 'clsx';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport List from '@material-ui/core/List';\r\nimport SearchBarCustom from \"./../../../../utility/search-bar/SearchBarCustom\";\r\nimport useStyles from './NavSide-style'; \r\nimport  NavSideItemBottom  from './NavSideItem/NavSideItemBottom';\r\nimport   NavSideItemMain  from './NavSideItem/NavSideItemMain';\r\nimport {DrawerSetting} from './../../../../model/nav/Nav'\r\nimport Logo from './/../../../logo/Logo';\r\nexport const NavOpenContext = React.createContext({} as boolean);\r\n\r\nconst NavSide : React.FC<DrawerSetting> = ({open, setOpen ,variant}) => {\r\n    const classes = useStyles();\r\n    const color = {color:'white'}\r\n    const background = {background:'#605865'}    \r\n    //Need to use useContext/Redux\r\n    const handleDrawerOpen = () => {\r\n      setOpen(true);\r\n    };\r\n    const handleDrawerClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n   return(\r\n\r\n      <NavOpenContext.Provider value={open}>\r\n      <Drawer\r\n        variant={variant}\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      > \r\n\r\n        <div className={classes.toolbarIcon}>\r\n        <span className={classes.toolbarLogo}>\r\n         <Logo />\r\n         </span>\r\n         <span>\r\n          <IconButton style={color} onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n          </span>\r\n        </div>\r\n        {open ? <SearchBarCustom /> : <> </> }\r\n        <List>\r\n          <NavSideItemMain/>\r\n        </List>\r\n        <span className={classes.navbottom}>\r\n        <Divider style={background}/>\r\n          <List>\r\n            <NavSideItemBottom/>\r\n          </List>\r\n        </span>\r\n      </Drawer>\r\n      </NavOpenContext.Provider>\r\n  \r\n   ); \r\n}\r\n\r\nexport default NavSide","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\nav\\nav-top\\NavTop-style.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\nav\\nav-side\\NavSide-style.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\nav\\nav-side\\NavSideItem-style.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\nav\\nav-side\\NavSideItem\\NavSideItemBottom.tsx",["704"],"import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport useStyles from './../NavSideItem-style';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\n\r\nconst NavSideItemBottom : React.FC = () =>{\r\n    const classes = useStyles();\r\n    const ListItemArray = [\r\n      {\r\n        tag : \"Setting\",\r\n        icon : <SettingsIcon /> \r\n      },\r\n      {\r\n        tag : \"Billing\",\r\n        icon : <CreditCardIcon />      \r\n      },\r\n      {\r\n        tag : \"Contact Us\",\r\n        icon :  <HelpIcon />   \r\n      }\r\n    ]\r\n\r\n    const NavBar = ListItemArray.map((item)=>{\r\n      return (   \r\n        <>  \r\n        <ListItem button className={classes.ListItemButton}>\r\n          <ListItemIcon className={classes.ListItemIcon}>\r\n            {item.icon}\r\n          </ListItemIcon>\r\n          <ListItemText className={classes.ListItemText} primary={item.tag} />\r\n        </ListItem>\r\n        </>\r\n      );\r\n    })\r\n\r\n    return(\r\n      <div>\r\n        {NavBar}\r\n      </div> \r\n    );\r\n}\r\n\r\nexport default NavSideItemBottom","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\nav\\nav-side\\NavSideItem\\NavSideItemMain.tsx",["705","706","707"],"import React , {useContext} from 'react';\r\n\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport CategoryIcon from '@material-ui/icons/Category';\r\nimport useStyles from './../NavSideItem-style';\r\nimport {NavSideItemComponentDrop} from './NavSideItemComponentDrop';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {NavOpenContext} from './../NavSide';\r\n\r\nconst NavSideItemMain : React.FC = () =>{\r\n  const classes = useStyles();\r\n  const background = {background:'#605865'}   \r\n  const openNav = useContext(NavOpenContext);\r\n  const ListItemArray = [\r\n/*    {\r\n      tag : \"Favourite\",\r\n      icon : <StarIcon /> \r\n    },\r\n    {\r\n      tag : \"Dashboard\",\r\n      icon : <DashboardIcon />      \r\n    },*/\r\n    {\r\n      tag : \"Category\",\r\n      icon :  <CategoryIcon />   \r\n    }\r\n  ]\r\n\r\nconst NavBar = ListItemArray.map((item)=>{\r\n  return (   \r\n    <>  \r\n    <NavSideItemComponentDrop item={item}/>\r\n    </>\r\n  );\r\n})\r\n\r\n  return(  \r\n  <div>    \r\n    {openNav?<Divider style={background}/>:<></>}\r\n    {NavBar}\r\n  </div>);\r\n}\r\n\r\nexport default NavSideItemMain","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\nav\\nav-side\\NavSideItem\\NavSideItemComponentDrop.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\nav\\nav-side\\NavSideItem\\NavSideItemComponentDropSub.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\search-bar\\SearchBarCustom.tsx",["708","709"],"import React, { ReactDOM  , useState} from 'react';\r\nimport useStyles from './SearchBarCustom-style';\r\nimport SearchBar from \"material-ui-search-bar\";\r\n\r\n\r\nconst SearchBarCustom : React.FC = () => {\r\n    const classes = useStyles();\r\n    return(\r\n        <>\r\n         <SearchBar className={classes.backgroundColor} />\r\n        \r\n        </>\r\n    );\r\n}\r\n\r\nexport default SearchBarCustom","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\search-bar\\SearchBarCustom-style.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\reducer\\index.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\frontauth\\signup\\redux\\SignupReducer.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\frontauth\\signup\\redux\\SignupAction.tsx",["710"],"import * as effect from './SignupEffect'\r\nimport {SIGNUP_CREATE} from './SignupConstant'\r\nimport {PAGE_STATUS_LOADING, PAGE_STATUS_SUCCESS, PAGE_STATUS_ERROR} from '../../../modal/Loadingpage/redux/LoadingConstant'\r\nimport {FormInputRegister} from './../../../../model/forminput/FormInputAuth' \r\n\r\n//Action Creators\r\nexport const CSignup = (information : FormInputRegister ) => async(dispatch : any) => {\r\n    let emailtobesent = false;\r\n    dispatch({type:PAGE_STATUS_LOADING});\r\n    try {\r\n        const Inputdata = information;\r\n        delete Inputdata.repassword;\r\n        //console.log(Inputdata);\r\n        const {data} = await effect.Signup(Inputdata);\r\n        emailtobesent = true;\r\n        dispatch({type: SIGNUP_CREATE , payload: information}); \r\n        dispatch({type:PAGE_STATUS_SUCCESS,payload: data});\r\n\r\n    }catch(error){\r\n        const payload = {message: 'There is an error occured while signing up.',\r\n                         explaination: error.message}\r\n        dispatch({type:PAGE_STATUS_ERROR, payload: payload});\r\n    }finally{\r\n        if(emailtobesent){\r\n            const emailobject = {\"email\": information.email}\r\n            const email = await effect.EmailVerification(emailobject);\r\n        }\r\n    }\r\n    \r\n\r\n}","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\frontauth\\signup\\redux\\SignupEffect.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\frontauth\\signup\\redux\\SignupConstant.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\config.js",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\loading\\Loading.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\loading\\Loading-style.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\modal\\ModalCom.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\modal\\ModalCom-style.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\modal\\Loadingpage\\LoadingPage.tsx",["711","712"],"import React ,{useEffect,useState}from 'react';\r\nimport Loading from '../../../utility/loading/Loading';\r\nimport ModalCom from  '../../../utility/modal/ModalCom';\r\nimport {useDispatch  } from 'react-redux';\r\nimport {PAGE_STATUS_ERROR} from '../../modal/Loadingpage/redux/LoadingConstant'\r\nconst LoadingPage: React.FC= () => {\r\n    const dispatch = useDispatch();\r\n    const message = \"Processing...\";\r\n    useEffect(()=>{\r\n        //this is used to ensure if the thing process too long, it will mark as error.\r\n        const timer = setTimeout(() => {\r\n            dispatch({type:PAGE_STATUS_ERROR, payload: \r\n                {message: 'Run Time Error',\r\n                explaination: ''}});\r\n          }, 60000);\r\n          return () => clearTimeout(timer);\r\n    },[])\r\n\r\n    return (\r\n        <div> \r\n        <ModalCom component={<Loading message={message}/>}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default  LoadingPage\r\n","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\modal\\Loadingpage\\redux\\LoadingConstant.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\modal\\Loadingpage\\redux\\LoadingReducer.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\dialog\\DialogCom-style.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\dialog\\DialogCom-interface.tsx",["713"],"C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\modal\\Errorpage\\Errorpage.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\modal\\Errorpage\\ErrorpageTitle.tsx",["714"],"import React from 'react'\r\nimport WarningIcon from '@material-ui/icons/Warning'; \r\nimport { Typography, Grid } from '@material-ui/core';\r\n\r\nexport const ErrorpageTitle : React.FC = () => {\r\n    return (\r\n    <>\r\n        <Grid container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"center\">\r\n            <WarningIcon color='error' style={{fontSize: '60px'}}/>\r\n        </Grid>\r\n    </>);\r\n}\r\n","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\modal\\Errorpage\\ErrorpageAction.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\modal\\Errorpage\\ErrorpageContent.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\dialog\\DialogCom.tsx",["715","716","717","718","719"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\n//import DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useStyles ,{styles} from './DialogCom-style';\r\nimport { Grid } from '@material-ui/core';\r\nimport  { DialogComInterface } from './DialogCom-interface';\r\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\ninterface DialogTitleProps extends WithStyles<typeof styles> {\r\n    id: string;\r\n    children: React.ReactNode;\r\n    onClose: (() => void) | null;\r\n}\r\n\r\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogCom: React.FC<DialogComInterface>= ({size,data,dialogStatus,dialogSetting,type}) => {\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={dialogStatus.open}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        fullWidth={size?.width? true: false}\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\" onClose={dialogSetting.onCloseSet ? dialogStatus.onClose : null}>\r\n          {data.title}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {data.content}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {data.action}\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default  DialogCom\r\n","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\modal\\Successpage\\Successpage.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\modal\\Successpage\\SuccesspageContent.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\modal\\Successpage\\SuccesspageTitle.tsx",["720"],"import React from 'react'\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport green from '@material-ui/core/colors/green';\r\n\r\nexport const SuccesspageTitle : React.FC = () => {\r\n    return (\r\n    <>\r\n        <Grid container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"center\">\r\n            <CheckCircleIcon style={{fill:green[800],fontSize: '60px'}}/>\r\n        </Grid>\r\n    </>);\r\n}\r\n","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\modal\\Successpage\\SuccesspageAction.tsx",["721"],"import React from 'react'\r\nimport { Grid , Typography } from '@material-ui/core';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport Button from '@material-ui/core/Button';\r\nimport green from '@material-ui/core/colors/green';\r\nimport {useDispatch  } from 'react-redux';\r\nimport {PAGE_STATUS_RECOVER} from './../Loadingpage/redux/LoadingConstant'\r\nimport {SuccessAction} from './Successpage-interface';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const SuccesspageAction : React.FC<SuccessAction> = (props) => {\r\n   const dispatch = useDispatch();\r\n   let history = useHistory();\r\n    const toCancel = () => {\r\n      dispatch({type:PAGE_STATUS_RECOVER})\r\n      history.push(props.url);      \r\n    }\r\n\r\n    return (\r\n    <>\r\n    <Grid\r\n    container\r\n    direction=\"column\"\r\n    justify=\"center\"\r\n    alignItems=\"center\"\r\n    > \r\n        <Button variant=\"contained\" style={{backgroundColor:green[800], width:'100%'}} onClick={toCancel} disableElevation >\r\n            <Typography style={{color:'white'}}> {props.buttontitle} </Typography>\r\n        </Button> \r\n    </Grid>\r\n    </>\r\n    );\r\n}\r\n","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\frontauth\\signup\\Signup-message.tsx",[],["722","723"],"C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\frontauth\\signup\\Signup-decider.tsx",["724","725","726","727","728","729","730","731"],"import React, { useEffect} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useStyles from './Signup-style';\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\nimport SignupForm from '../../../utility/form/auth/signup/SignupForm'\r\nimport { useSelector } from 'react-redux';\r\nimport {RootState} from '../../../reducer';\r\nimport LoadingPage from '../../modal/Loadingpage/LoadingPage';\r\nimport Errorpage from '../../modal/Errorpage/Errorpage';\r\nimport Successpage from '../../modal/Successpage/Successpage';\r\nimport {success} from './Signup-message';\r\nimport {useParams} from 'react-router-dom';\r\n\r\ninterface status {\r\n  status:string\r\n}\r\n\r\nexport default function SignUpDecider() {\r\n  const {status} = useParams<status>();\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <>\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n            {status === 'success' ? 'Email Address Verified' : \"Invalid Address\"}\r\n        </Typography>\r\n        <Typography variant=\"h6\">\r\n            {status === 'success' ? 'Please login to access your access.' : \"\"}\r\n        </Typography>\r\n        <Grid container justify=\"center\">\r\n            <Grid item>\r\n            <Link href=\"/auth/login\" variant=\"body2\">\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              >\r\n              Back to Login\r\n            </Button>\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n      </div>\r\n    </Container>\r\n    </>\r\n  );\r\n}","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\frontauth\\login\\redux\\LoginAction.tsx",["732"],"import * as effect from './LoginEffect'\r\nimport {LOGIN_READ} from './LoginConstant'\r\nimport {PAGE_STATUS_LOADING, PAGE_STATUS_SUCCESS, PAGE_STATUS_ERROR} from '../../../modal/Loadingpage/redux/LoadingConstant'\r\nimport {FormInputLogin} from '../../../../model/forminput/FormInputAuth' \r\nimport config from './../../../../config'\r\n//Action Creators\r\nexport const RLogin = (information : FormInputLogin ) => async(dispatch : any) => {\r\n    dispatch({type:PAGE_STATUS_LOADING});\r\n    try {\r\n        const Inputdata = information;\r\n        delete Inputdata[\"remember\"];\r\n        const {data} = await effect.Login(Inputdata); \r\n        if (!data.passwordsMatch){\r\n            throw Object.assign(\r\n                new Error(\"Wrong Email or Password\"),\r\n                { code: 402 }\r\n             );\r\n        }\r\n        dispatch({type: LOGIN_READ})\r\n        dispatch({type: PAGE_STATUS_SUCCESS,payload: data});\r\n        window.location.replace(String(config.API_CLIENT));\r\n\r\n    }catch(error){\r\n        const payload = {message: error.message || error,\r\n                         explaination: ''}\r\n        dispatch({type:PAGE_STATUS_ERROR, payload: payload});\r\n    }\r\n}\r\n\r\nexport const RLoginFB = (authContext: any) => async (dispatch : any)=> {\r\n    dispatch({type:PAGE_STATUS_LOADING});\r\n    try {\r\n        const data = await effect.LoginFB();\r\n        dispatch({type: LOGIN_READ })\r\n        dispatch({type: PAGE_STATUS_SUCCESS});\r\n    }catch(error){\r\n        const payload = {message: error.message || error,\r\n            explaination: ''}\r\n        dispatch({type:PAGE_STATUS_ERROR, payload: payload});        \r\n    }\r\n}","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\frontauth\\login\\redux\\LoginEffect.tsx",["733","734"],"import axios from 'axios';\r\nimport config from '../../../../config'\r\nimport {publicFetch} from '../../../../utility/axios/PublicFetch'\r\n//converting URL[unknown] to String to meet the axios type\r\n//const API_BACKEND = String(config.API_BACKEND)\r\n\r\n//export const Login = (LoginInfo : any) => (publicFetch.post('auth/login/read', LoginInfo, {withCredentials: true}));\r\nexport const Login = (LoginInfo : any) => (publicFetch.post('auth/login/read', LoginInfo));\r\nexport const LoginFB = () => (publicFetch.get('oauth/signup/facebook'));\r\n\r\n","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\frontauth\\login\\redux\\LoginConstant.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\frontauth\\login\\redux\\LoginReducer.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\context\\AuthContext.tsx",["735","736"],"import React, {useState, createContext ,useEffect , useContext} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {FetchContext} from './FetchContext';\r\nimport {useDispatch  } from 'react-redux';\r\nimport {PAGE_STATUS_RECOVER} from '../view/modal/Loadingpage/redux/LoadingConstant'\r\ninterface AuthContextI {\r\n    userInfo: any,\r\n    expiresAt : any\r\n}\r\n\r\n interface ProviderContext {\r\n     loading: boolean,\r\n    authData: any,\r\n    authState :boolean\r\n    logout: () => void\r\n}\r\n\r\nconst AuthContextInitial = {\r\n    loading:false,\r\n    authData:{},\r\n    authState: false,\r\n    logout: () => {}\r\n}\r\n\r\nconst AuthContext = createContext<ProviderContext>(AuthContextInitial);\r\nconst {Provider} = AuthContext;\r\n\r\nconst AuthProvider = ({children} :any) => {\r\n    const dispatch = useDispatch();\r\n    const {authAxios} = useContext(FetchContext);\r\n    const history = useHistory();\r\n\r\n    const userInfo = localStorage.getItem('userInfo');\r\n    const expiresAt = localStorage.getItem('expiresAt');\r\n\r\n    const [loading,setLoading] = useState(true);\r\n    const [authState,setAuthState] = useState(true);\r\n    const [authData, setAuthData] = useState<AuthContextI>({\r\n        expiresAt,\r\n        userInfo: userInfo ? JSON.parse(userInfo) : {}\r\n    })\r\n\r\n    const setAuthInfo = ({ userInfo, expiresAt} : AuthContextI)=>{  \r\n        localStorage.setItem(\r\n            'userInfo',\r\n            JSON.stringify(userInfo)\r\n          );\r\n        localStorage.setItem('expiresAt', expiresAt);\r\n                    \r\n        setAuthData({\r\n            userInfo,\r\n            expiresAt\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        \r\n        const auth = async () => {\r\n            try{\r\n                setLoading(true);\r\n                const {data} = await authAxios.post('verify/profile');\r\n                setAuthInfo(data)\r\n                setAuthState(true);\r\n                }catch{\r\n                    dispatch({type:PAGE_STATUS_RECOVER});\r\n                    setAuthState(false);\r\n                    console.error('Unauthorized')\r\n                }finally{\r\n                    setLoading(false);\r\n                }\r\n             }\r\n             console.log(auth);\r\n             auth();\r\n    },[authAxios])\r\n\r\n    const logout = () => {\r\n        const logoutCall = async () => {\r\n            try{\r\n                await authAxios.post('logout');\r\n                localStorage.removeItem('userInfo');\r\n                localStorage.removeItem('expiresAt');\r\n                setAuthState(false);\r\n                setAuthData({\r\n                    userInfo : {},\r\n                    expiresAt : null\r\n                })\r\n                console.log('Done Logout')\r\n                }catch{\r\n                    console.log(\"Something Wrong\")\r\n                }\r\n             }\r\n        logoutCall();\r\n       // history.push('/auth/login');\r\n    }\r\n\r\n    /*const isAuth = () => {\r\n        console.log(authState)\r\n        console.log('isAuth')\r\n        if(!authState.expiresAt || !authState.userInfo){\r\n            return false;\r\n        }\r\n        return new Date().getTime() / 1000 < authState.expiresAt\r\n       // return true;\r\n        //return true;\r\n    }*/\r\n    \r\n    return(\r\n        <Provider\r\n          value={{\r\n              loading,\r\n              authData,\r\n              authState,\r\n              logout\r\n          }} >\r\n              {children}\r\n          </Provider>\r\n    );\r\n};\r\n\r\nexport {AuthContext, AuthProvider}","C:\\Users\\exb\\bsupkit\\frontend\\src\\ProtectedRoute.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\axios\\PublicFetch.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\context\\FetchContext.tsx",["737"],"import React, {createContext, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport axiosRetry from 'axios-retry';\r\n\r\nconst config = require('./../config')\r\n\r\ninterface ProviderContext {\r\n    authAxios :any\r\n\r\n}\r\n\r\nconst FetchContext = createContext<ProviderContext>({authAxios:()=>{}});\r\nconst {Provider} = FetchContext;\r\n\r\nconst FetchProvider = ({children} : any)=>{\r\n\r\n    const authAxios= axios.create({\r\n        baseURL: config.API_BACKEND,\r\n    })\r\n    axiosRetry(authAxios,{retries:5})\r\n    \r\n    useEffect(()=>{\r\n        const getCsrfToken = async()=>{\r\n            const {data} = await authAxios.get('csrf-token');\r\n            authAxios.defaults.headers['X-CSRF-Token']= data.csrfToken;\r\n        }\r\n        getCsrfToken();\r\n    },[])\r\n    \r\n    return (\r\n        <Provider\r\n        value={{authAxios}}\r\n        >\r\n            {children}\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport {FetchContext, FetchProvider}","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\context-menu\\ContextMenu.tsx",["738","739"],"import React , {useState} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu, { MenuProps } from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\ninterface ContextMenuI{\r\n    switchFunction : (check:string)=>void,\r\n    MenuItemListOption: Array<{tag: string, actionTag:string}>,\r\n    IconButtonShown : React.ReactNode,\r\n    MenuFontSize ?: string,\r\n    backgroundColor ?: string\r\n}\r\nconst StyledMenu = withStyles({\r\n    paper: {\r\n      border: '1px solid #d3d4d5',\r\n    },\r\n  })((props: MenuProps) => (\r\n    <Menu\r\n      elevation={0}\r\n      getContentAnchorEl={null}\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'center',\r\n      }}\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n      }}\r\n      {...props}\r\n    />\r\n  ));\r\n\r\nconst ContextMenu: React.FC<ContextMenuI> = ({switchFunction, MenuItemListOption, IconButtonShown , MenuFontSize, backgroundColor}) => {\r\nconst [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = (actionTag: string) => {\r\n    setAnchorEl(null);\r\n    switchFunction(actionTag);\r\n  };\r\n\r\n  //adjustable fontsize\r\n  let fontSize={};\r\n  MenuFontSize ? fontSize = {fontSize:MenuFontSize} : fontSize = {fontSize:'15px'}\r\n  \r\n  const MenuItemList = MenuItemListOption.map((item)=>{\r\n    \r\n      return (\r\n           <MenuItem key={item.tag} style={fontSize} onClick={()=>handleClose(item.actionTag)}>{item.tag}</MenuItem>\r\n      )\r\n  })\r\n    return (\r\n       <div>\r\n      <IconButton size='small'\r\n        aria-controls=\"customized-menu\"\r\n        aria-haspopup=\"true\"\r\n        style={{padding: 7 ,backgroundColor: backgroundColor? backgroundColor: '' }}\r\n        onClick={handleClick}\r\n      >\r\n        {IconButtonShown}\r\n      </IconButton>\r\n      <StyledMenu\r\n        id=\"customized-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n          {MenuItemList }\r\n      </StyledMenu>\r\n    </div>\r\n    );\r\n}\r\nexport default ContextMenu;","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\user\\nav\\NavTopAccountContextMenu.tsx",["740"],"import React  , {useContext}from 'react'\r\nimport {useHistory} from 'react-router-dom';\r\nimport ContextMenu from '../../../utility/context-menu/ContextMenu';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport {AuthContext} from '../../../context/AuthContext';\r\nimport {useDispatch  } from 'react-redux';\r\nimport {PAGE_STATUS_LOADING, PAGE_STATUS_SUCCESS} from '../../../view/modal/Loadingpage/redux/LoadingConstant'\r\nimport config from './../../../config'\r\nconst NavTopAccountContextMenu:React.FC = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const {logout} = useContext(AuthContext);\r\n    \r\n    //switchFunction\r\n    const switchFunction = (check: string) => {\r\n        switch(check){\r\n            case 'myaccount':\r\n                window.location.href= config.API_CLIENT+'/myaccount/profile'\r\n                break;\r\n            case 'logout':\r\n                dispatch({type:PAGE_STATUS_LOADING});\r\n                logout();\r\n                dispatch({type:PAGE_STATUS_SUCCESS});\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    //MenuItemListOption\r\n    const MenuItemListOption = [\r\n        {\r\n            tag: \"My Account\",\r\n            actionTag: \"myaccount\"\r\n        },\r\n        {\r\n            tag: \"Logout\",\r\n            actionTag: \"logout\"\r\n        },    \r\n    ]\r\n\r\n\r\n    return (\r\n        <>\r\n        <ContextMenu switchFunction={switchFunction} MenuItemListOption={MenuItemListOption} IconButtonShown={ <AccountCircleIcon style={{fill: \"green\", fontSize:'35px'}}/>} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NavTopAccountContextMenu","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\platform\\platformdisplay\\Platform.tsx",["741","742","743","744","745"],"import React, { ReactDOM, useState , useContext, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport useStyles from './Platform-style'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PlatformNavTop from './../PlatformNavTop';\r\nimport { Divider } from '@material-ui/core';\r\nimport {PlatformItemAccess} from './platformitem/PlatformItemAccess';\r\nimport {PlatformItemAdd} from './platformitem/PlatformItemAdd';\r\nimport {PlatformItemOwn} from './platformitem/PlatformItemOwn';\r\nimport {AuthContext} from './../../../context/AuthContext';\r\nimport {FetchContext} from './../../../context/FetchContext';\r\nimport config from './../../../config';\r\nimport {useDispatch  } from 'react-redux';\r\nimport {PAGE_STATUS_LOADING, PAGE_STATUS_SUCCESS, PAGE_STATUS_ERROR} from '../../../view/modal/Loadingpage/redux/LoadingConstant'\r\nimport {ELS} from './../../modal'\r\n\r\nconst Platform : React.FC = () => {\r\n  const [platformOwnDetail, setPlatformOwnDetail] = useState([])\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const {authData , loading} = useContext(AuthContext);\r\n  const {authAxios} = useContext(FetchContext);\r\n  \r\n  const handleClick = (platform_id : string) => {\r\n    window.location.replace(String(config.API_CLIENT+'/platform/'+platform_id));\r\n  }\r\n  useEffect(()=>{\r\n    dispatch({type:PAGE_STATUS_LOADING});\r\n    const platform = async () => {\r\n      try{\r\n        if(!loading){\r\n          const {data} = await authAxios.post('platform/',{\"email\":authData.userInfo.email})\r\n          setPlatformOwnDetail(data.platformDetail)\r\n          dispatch({type:PAGE_STATUS_SUCCESS});\r\n        }\r\n      }catch(err){\r\n        dispatch({type:PAGE_STATUS_ERROR,payload:err});\r\n        console.log(err);\r\n      }\r\n    } \r\n    platform();\r\n  },[loading])\r\n  //Own\r\n  console.log('RETURN STAGE')\r\n  const platformOwn = platformOwnDetail.map((item : any)=>{\r\n    return(<PlatformItemOwn key={item.platform_id} platform_id={item.platform_id} platformname={item.platform_name} onClick={handleClick} />)\r\n  })\r\n  //Access\r\n   return(\r\n    <div className={classes.root}>\r\n        <ELS />\r\n\r\n        <CssBaseline />\r\n        <Grid container className={classes.background}>\r\n          <Grid item xs={12} >    \r\n          <PlatformNavTop />   \r\n            <Container maxWidth=\"md\" className={classes.platformContainer}>\r\n                <Typography className={clsx(classes.platformTitle,classes.textWhite)}>\r\n                    Your's Platform\r\n                </Typography>\r\n                <Grid container direction=\"row\"  alignItems=\"flex-start\" spacing={3} className={classes.platformGrid} >\r\n                  {platformOwnDetail.length !== 0 ? platformOwn : <PlatformItemAdd/> }\r\n                </Grid>\r\n                <Divider />\r\n                <Typography className={clsx(classes.platformTitle,classes.textBlack)}>\r\n                    Your Access\r\n                </Typography>\r\n                <Grid container direction=\"row\"  alignItems=\"flex-start\" spacing={3} className={clsx(classes.platformGrid,classes.textWhite)}>\r\n\r\n                </Grid>\r\n            </Container>\r\n          </Grid>\r\n        </Grid>\r\n    </div>    \r\n   ); \r\n}\r\n\r\nexport default Platform","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\platform\\platformdisplay\\Platform-style.tsx",["746"],"import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexGrow: 1,\r\n    },\r\n    paper:{\r\n        height:'180px',\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        backgroundColor:'white',\r\n        width:'100%',\r\n        borderRadius:'10px',\r\n        boxShadow: '0.5px grey',\r\n        textTransform: \"none\"\r\n    },\r\n    background: {\r\n        backgroundColor: '#1d1124',\r\n        height:'280px',\r\n       \r\n    },\r\n    platformContainer:{\r\n        padding: '0px 20px',\r\n        [theme.breakpoints.up('sm')]: {\r\n            padding: '50px 60px',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            padding: '50px 100px',\r\n        },\r\n    },\r\n    textBlack:{\r\n        color: 'black',\r\n    },\r\n    textWhite:{\r\n        color: 'white',\r\n    },\r\n    textGrey:{\r\n        color:'grey',\r\n    },\r\n    platformTitle: {\r\n        padding:'10px 0 0 0',\r\n    },\r\n    platformGrid:{\r\n        padding: '20px 0px',\r\n    },\r\n    platformAddPlatform:{\r\n        color:'#0859C6',\r\n        width:'100px',\r\n    },\r\n    platformButtonWidth:{\r\n        width:'100px',\r\n    },\r\n    platformPlatformDetailWord:{\r\n        wordWrap: \"break-word\",\r\n        width:'100%',\r\n    },\r\n    platformPlatformDetailTitle:{\r\n        fontSize:'15px',\r\n    },\r\n    platformPlatformDetailDesc:{\r\n        color:'grey',\r\n        fontSize:'10px'\r\n    },\r\n    platformPlatformDetail:{\r\n        padding: '10px 0',\r\n        display:'flex',\r\n        height:'170px',\r\n    },\r\n  }));\r\n\r\nexport default useStyles","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\platform\\PlatformNavTop.tsx",["747","748","749","750","751","752","753","754","755"],"import React, { ReactDOM ,useEffect, useState ,useContext} from 'react';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useStyles from '../feature/nav/nav-top/NavTop-style'; \r\nimport {NavTopI} from '../../model/nav/Nav'\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport {AuthContext} from '../../context/AuthContext';\r\nimport {FetchContext} from '../../context/FetchContext';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport NavTopRight from '../user/nav/NavTopAccountContextMenu';\r\nimport Logo from '../logo/Logo';\r\n//<LinearProgress />\r\nconst NavTop : React.FC = () => {\r\n\r\n    const {authState} = useContext(AuthContext);\r\n    const {authAxios} = useContext(FetchContext);\r\n\r\n    //ContextMenu\r\n    const classes = useStyles();\r\n   return(\r\n     <>\r\n    <AppBar position=\"static\" elevation={0} className={clsx(classes.appBar)}>\r\n    <Toolbar className={classes.toolbar}>\r\n      <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.platformtitle}>\r\n            <Logo />\r\n      </Typography>\r\n      <NavTopRight />\r\n    </Toolbar>\r\n    \r\n  </AppBar>   \r\n  \r\n  </>\r\n   ); \r\n}\r\n\r\nexport default NavTop","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\platform\\platformadd\\Platformadd.tsx",["756","757","758","759","760","761","762","763","764","765","766","767","768","769"],"import React, { ReactDOM, useState , useContext } from 'react';\r\nimport clsx from 'clsx';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport useStyles from './Platformadd-style'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { SetStateAction } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PlatformNavTop from '../PlatformNavTop';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Divider } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport PlatformForm from '../../../utility/form/platform/platform/PlatformForm';\r\nimport { useSelector } from 'react-redux';\r\nimport LoadingPage from './../../../view/modal/Loadingpage/LoadingPage';\r\nimport Errorpage from './../../modal/Errorpage/Errorpage';\r\nimport {RootState} from './../../../reducer';\r\nimport {ELS} from './../../modal';\r\nconst PlatformAdd : React.FC = () => {\r\n  const status = useSelector((state:RootState)=>state.loading);\r\n   const classes = useStyles();\r\n//\r\n   return(\r\n    <div className={classes.root}>\r\n        <ELS />\r\n\r\n        <CssBaseline />\r\n        <Grid container className={classes.background}>\r\n          <Grid item xs={12} >    \r\n          <PlatformNavTop />   \r\n            <Container maxWidth=\"sm\" className={classes.platformContainer}>\r\n              <PlatformForm />\r\n            </Container>\r\n          </Grid>\r\n        </Grid>\r\n    </div>    \r\n   ); \r\n}\r\n\r\nexport default PlatformAdd","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\platform\\platformadd\\Platformadd-style.tsx",["770"],"import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexGrow: 1,\r\n    },\r\n    paper:{\r\n        height:'180px',\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        backgroundColor:'white',\r\n        width:'100%',\r\n        borderRadius:'10px',\r\n        boxShadow: '0.5px grey',\r\n        textTransform: \"none\"\r\n    },\r\n    background: {\r\n        backgroundColor: '#1d1124',\r\n        height:'70px',\r\n       \r\n    },\r\n    platformContainer:{\r\n        padding: '10px 20px',\r\n        [theme.breakpoints.up('sm')]: {\r\n            padding: '10px 60px',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            padding: '10px 100px',\r\n        },\r\n    },\r\n  }));\r\n\r\nexport default useStyles","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\form\\auth\\login\\LoginForm.tsx",["771","772","773","774"],"import React, { ReactDOM ,useContext} from 'react';\r\nimport {FormInputLogin} from '../../../../model/forminput/FormInputAuth'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport {LoginFormValidSchema} from './LoginFormValidSchema';\r\nimport {useDispatch  } from 'react-redux';\r\nimport {RLogin} from '../../../../view/frontauth/login/redux/LoginAction';\r\nimport useStylesForm from '../../Form-style';\r\nimport {AuthContext} from '../../../../context/AuthContext';\r\n\r\nconst LoginForm : React.FC = () => {\r\n    const authContext = useContext(AuthContext);\r\n    const classes = useStylesForm();\r\n    const dispatch = useDispatch();\r\n    const {register, handleSubmit , errors } = useForm<FormInputLogin>({\r\n        resolver: yupResolver(LoginFormValidSchema)\r\n    });\r\n    \r\n    const onSubmitForm = (data: FormInputLogin) => {\r\n      dispatch(RLogin(data))\r\n    };\r\n\r\n   return(\r\n    <form className={classes.form} onSubmit={handleSubmit(onSubmitForm)} noValidate>\r\n    <TextField\r\n      inputRef={register}\r\n      variant=\"outlined\"\r\n      margin=\"normal\"\r\n      required\r\n      fullWidth\r\n      id=\"email\"\r\n      label=\"Email Address\"\r\n      name=\"email\"\r\n      autoComplete=\"email\"\r\n      autoFocus\r\n      className={errors.email? classes.error_outline: undefined}\r\n    />\r\n    {errors.email? <span className={classes.error_message}> {errors.email?.message}  </span> : undefined}\r\n    \r\n    <TextField\r\n      inputRef={register}\r\n      variant=\"outlined\"\r\n      margin=\"normal\"\r\n      required\r\n      fullWidth\r\n      name=\"password\"\r\n      label=\"Password\"\r\n      type=\"password\"\r\n      id=\"password\"\r\n      autoComplete=\"current-password\"\r\n      className={errors.password? classes.error_outline: undefined}\r\n    />\r\n     {errors.password? <span className={classes.error_message}> {errors.password?.message}  </span> : undefined}\r\n    \r\n    <Button\r\n      type=\"submit\"\r\n      fullWidth\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      className={classes.submit}\r\n    >\r\n      Sign In\r\n    </Button>\r\n  </form>   \r\n   ); \r\n\r\n}\r\n\r\nexport default LoginForm","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\form\\auth\\login\\LoginFormValidSchema.tsx",["775"],"import { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\n\r\n//<p className={errors.email? classes.error_message:undefined}> {errors.email?.message} </p>\r\n\r\nexport const LoginFormValidSchema = yup.object().shape({\r\n    email: yup.string().required(),\r\n    password: yup.string().required(),\r\n  });","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\form\\auth\\signup\\SignupForm.tsx",["776","777","778"],"import React, {useState , useEffect}from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {FormInputRegister, RegisterStatus} from '../../../../model/forminput/FormInputAuth' \r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport {SignupFormValidSchema} from './SignupFormValidSchema';\r\nimport useStylesForm from '../../Form-style';\r\nimport {useDispatch  } from 'react-redux';\r\nimport {CSignup} from '../../../../view/frontauth/signup/redux/SignupAction';\r\n\r\nconst SignupForm : React.FC = () => {\r\n\r\n    const classes = useStylesForm();\r\n    const dispatch = useDispatch();\r\n    const {register , handleSubmit , errors  } = useForm<FormInputRegister>({\r\n        mode:'onChange',\r\n        resolver: yupResolver(SignupFormValidSchema)\r\n    });\r\n\r\n    const onSubmitForm = async (data: FormInputRegister) => {\r\n\r\n           dispatch(CSignup(data))\r\n    };\r\n\r\n    return( \r\n        <form className={classes.form} onSubmit={handleSubmit(onSubmitForm)} noValidate>\r\n        <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n        <TextField\r\n            inputRef={register}\r\n            autoComplete=\"fname\"\r\n            name=\"firstname\"\r\n            variant=\"outlined\"\r\n            required\r\n            fullWidth\r\n            id=\"firstname\"\r\n            label=\"First Name\"\r\n            autoFocus\r\n            className={errors.firstname? classes.error_outline: undefined}\r\n        />\r\n        {errors.firstname? <span className={classes.error_message}> {errors.firstname?.message}  </span> : undefined}\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n        <TextField\r\n            inputRef={register}\r\n            variant=\"outlined\"\r\n            required\r\n            fullWidth\r\n            id=\"lastname\"\r\n            label=\"Last Name\"\r\n            name=\"lastname\"\r\n            autoComplete=\"lname\"\r\n            className={errors.lastname? classes.error_outline: undefined}\r\n            />\r\n        {errors.lastname? <span className={classes.error_message}> {errors.lastname?.message}  </span> : undefined}\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            <TextField\r\n            inputRef={register}\r\n            variant=\"outlined\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            className={errors.email? classes.error_outline: undefined}\r\n            />\r\n        {errors.email? <span className={classes.error_message}> {errors.email?.message}  </span> : undefined}    \r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            <TextField\r\n            inputRef={register}\r\n            variant=\"outlined\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            className={errors.password? classes.error_outline: undefined}\r\n            />\r\n        {errors.password? <span className={classes.error_message}> {errors.password?.message}  </span> : undefined}\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            <TextField\r\n            inputRef={register}\r\n            variant=\"outlined\"\r\n            required\r\n            fullWidth\r\n            name=\"repassword\"\r\n            label=\"Re-Password\"\r\n            type=\"password\"\r\n            id=\"repassword\"\r\n            autoComplete=\"re-password\"\r\n            className={errors.repassword? classes.error_outline: undefined}\r\n            />\r\n        {errors.repassword? <span className={classes.error_message}> {errors.repassword?.message}  </span> : undefined}\r\n        </Grid>\r\n        </Grid>\r\n        <Button\r\n        type=\"submit\"\r\n        fullWidth\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.submit}\r\n        >\r\n        Sign Up\r\n        </Button>\r\n        </form>   );\r\n\r\n}\r\n\r\nexport default SignupForm\r\n","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\form\\auth\\signup\\SignupFormValidSchema.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\platform\\platformdisplay\\platformitem\\PlatformItemAdd.tsx",["779","780"],"import React from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport clsx from 'clsx';\r\nimport useStyles from './../Platform-style'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport config from './../../../../config';\r\nimport {useHistory} from 'react-router-dom';\r\nexport const PlatformItemAdd:React.FC = () => {\r\n    const history = useHistory();\r\n    const platformOnclick = () => {\r\n        history.push('/platform/add');\r\n        //window.location.replace(String(config.API_CLIENT+'/platform/add'));\r\n       }\r\n\r\n    const classes = useStyles();\r\n    return(\r\n      <Grid item xs={12} sm={6} md={4}>\r\n        <Button variant=\"contained\"  className={classes.paper} onClick={platformOnclick}> \r\n          <Grid container direction=\"column\" justify=\"space-between\" alignItems=\"center\" className={classes.platformAddPlatform}>\r\n            <AddIcon />\r\n          <Typography className={classes.platformAddPlatform} variant=\"body2\" gutterBottom>\r\n            Add Platform\r\n          </Typography> \r\n          </Grid>\r\n          </Button>\r\n      </Grid>\r\n    )\r\n}","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\platform\\platformdisplay\\platformitem\\PlatformItemOwn.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\modal\\index.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\logo\\Logo.tsx",["781","782","783","784","785"],"import React, { ReactDOM ,useEffect, useState ,useContext} from 'react';\r\nimport clsx from 'clsx';\r\nimport useStyles from './Logo-style'; \r\nimport { IconButton } from '@material-ui/core';\r\nimport config from './../../config';\r\n//<LinearProgress />\r\nconst Logo : React.FC = () => {\r\n    const classes = useStyles();\r\n    const handleClick = () =>{\r\n        window.location.replace(String(config.API_CLIENT));\r\n    }\r\n   return(\r\n     <>\r\n    <IconButton className={classes.logo} onClick={handleClick}>\r\n        Logo\r\n    </IconButton>\r\n    </>\r\n   ); \r\n}\r\n\r\nexport default Logo","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\logo\\Logo-style.tsx",["786"],"import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    logo:{\r\n        color:'white',\r\n    }\r\n\r\n}));\r\n\r\n  export default useStyles;","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\user\\myaccount\\MyAccount.tsx",["787","788","789","790"],"import React, { ReactDOM, useState , useContext } from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport useStyles from './MyAccount-style'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport PlatformNavTop from '../../platform/PlatformNavTop';\r\nimport { useSelector } from 'react-redux';\r\nimport {RootState} from '../../../reducer';\r\nimport {ELS} from './../../modal';\r\nimport {AccountNav} from '../../feature/nav/nav-inner/NavInner'\r\nimport MyAccountForm from '../../../utility/form/platform/myaccount/Profile/MyAccountForm';\r\nimport ChangepasswordForm from '../../../utility/form/platform/myaccount/Changepassword/Changepassword';\r\nconst PlatformAdd : React.FC = () => {\r\n  const status = useSelector((state:RootState)=>state.loading);\r\n   const classes = useStyles();\r\n\r\n   const tabcomponent=[\r\n     { \r\n      path: '/profile',\r\n      name: 'profile',  \r\n      label: \"Profile\",\r\n      component: <MyAccountForm />,\r\n      exact:false \r\n    },\r\n    {  \r\n      path: '/password',\r\n      name: 'password',\r\n      label: \"Change Password\",\r\n      component: <ChangepasswordForm />,\r\n      exact:false\r\n    },\r\n    {  \r\n      path: '/platform',\r\n      name: 'platform',\r\n      label: \"Platform Setting\",\r\n      component: <CssBaseline />,\r\n      exact:false\r\n    },\r\n    {  \r\n      path: '/data',\r\n      name: 'data',\r\n      label: \"Data Management\",\r\n      component: <CssBaseline />,\r\n      exact:false\r\n    },\r\n    {  \r\n      path: '/bill',\r\n      name: 'bill',\r\n      label: \"Billing and Usage\",\r\n      component: <CssBaseline />,\r\n      exact:false\r\n    },\r\n    {  \r\n      path: '/advanced',\r\n      name: 'advanced',\r\n      label: \"Advanced\",\r\n      component: <CssBaseline />,\r\n      exact:false\r\n    }\r\n   ]\r\n   return(\r\n    <div className={classes.root}>\r\n        <ELS />\r\n        <CssBaseline />\r\n        <Grid container className={classes.background}>\r\n          <Grid item xs={12} >    \r\n          <PlatformNavTop />   \r\n            <Container maxWidth=\"xl\" className={classes.platformContainer}>\r\n              <AccountNav tabcomponent={tabcomponent} orientation=\"vertical\"/>\r\n            </Container>\r\n          </Grid>\r\n        </Grid>\r\n    </div>    \r\n   ); \r\n}\r\n\r\nexport default PlatformAdd","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\user\\myaccount\\MyAccount-style.tsx",["791"],"import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexGrow: 1,\r\n    },\r\n    paper:{\r\n        height:'180px',\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        backgroundColor:'white',\r\n        width:'100%',\r\n        borderRadius:'10px',\r\n        boxShadow: '0.5px grey',\r\n        textTransform: \"none\"\r\n    },\r\n    background: {\r\n        backgroundColor: '#1d1124',\r\n        height:'70px',\r\n       \r\n    },\r\n    platformContainer:{\r\n        padding: '10px 0px',\r\n        [theme.breakpoints.up('sm')]: {\r\n            padding: '10px 60px',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            padding: '10px 100px',\r\n        },\r\n    },\r\n\r\n  }));\r\n\r\nexport default useStyles","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\form\\platform\\platform\\PlatformForm.tsx",["792","793","794","795","796","797","798","799","800"],"import React, {useState , useEffect , useContext}from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {PlatformAdd} from '../../../../model/forminput/FormInputAuth' \r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport {PlatformFormValidSchema} from './PlatformFormValidSchema';\r\nimport useStylesForm from '../../Form-style';\r\nimport {useDispatch  } from 'react-redux';\r\nimport {AuthContext} from '../../../../context/AuthContext';\r\nimport {CPlatform} from './redux/PlatformAction';\r\nimport { Typography } from '@material-ui/core';\r\nimport {FetchContext} from '../../../../context/FetchContext';\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Popover from '@material-ui/core/Popover';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\n\r\nconst SignupForm : React.FC = () => {\r\n    const {authData} = useContext(AuthContext);\r\n    const {authAxios} = useContext(FetchContext);\r\n\r\n    const email = authData.userInfo.email;\r\n    const classes = useStylesForm();\r\n    const dispatch = useDispatch();\r\n\r\n    const {register , handleSubmit , errors  } = useForm<PlatformAdd>({\r\n        resolver: yupResolver(PlatformFormValidSchema)\r\n    });\r\n\r\n    const onSubmitForm = async (data: PlatformAdd) => {\r\n        data.email = email;    \r\n        dispatch(CPlatform(data,authAxios));\r\n    };\r\n\r\n    return( \r\n        <form className={classes.form} onSubmit={handleSubmit(onSubmitForm)} noValidate>\r\n        <Grid container spacing={2} >\r\n        <Grid item xs={12}>\r\n            <Typography variant='h5' style={{textAlign:'center'}}>\r\n                Add Platform\r\n            </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            Give your platform a name.\r\n        <TextField\r\n            inputRef={register}\r\n            autoComplete=\"platformname\"\r\n            name=\"platformname\"\r\n            variant=\"outlined\"\r\n            required\r\n            fullWidth\r\n            id=\"platformname\"\r\n            label=\"Platform Name\"\r\n            autoFocus\r\n            className={errors.platformname? classes.error_outline: undefined}\r\n        />\r\n        {errors.platformname? <span className={classes.error_message}> {errors.platformname?.message}  </span> : undefined}\r\n        </Grid>\r\n        <Grid item xs={12} >\r\n            Your instituition / company you currently working with.\r\n        <TextField\r\n            inputRef={register}\r\n            variant=\"outlined\"\r\n            required\r\n            fullWidth\r\n            id=\"companyname\"\r\n            label=\"Company Name\"\r\n            name=\"companyname\"\r\n            autoComplete=\"companyname\"       \r\n            className={errors.companyname? classes.error_outline: undefined}\r\n            />\r\n        {errors.companyname? <span className={classes.error_message}> {errors.companyname?.message}  </span> : undefined}\r\n        </Grid>\r\n        </Grid>\r\n        <Button\r\n        type=\"submit\"\r\n        fullWidth\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.submit}\r\n        >\r\n        Add Platform\r\n        </Button>\r\n        </form>   );\r\n\r\n}\r\n\r\nexport default SignupForm\r\n","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\form\\platform\\platform\\PlatformFormValidSchema.tsx",["801","802","803"],"import * as yup from \"yup\";\r\nimport axios from 'axios';\r\nimport config from '../../../../config'\r\n\r\n\r\nconst API_URL = String(config.API_BACKEND)\r\nconst API_CLIENT = String(config.API_CLIENT);\r\n\r\nexport const PlatformFormValidSchema = yup.object().shape({\r\n  platformname: yup.string().required(\"Platform Name is a required field\").min(4,\"The platform name should not less than 4 characters\").max(30,\"The platform name has a max characters of 30\"),\r\n  companyname : yup.string().required(\"Company Name is a required field\"),\r\n  });","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\form\\platform\\platform\\redux\\PlatformAction.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\form\\platform\\platform\\redux\\PlatformConstant.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\form\\platform\\platform\\redux\\PlatformEffect.tsx",["804","805","806","807","808"],"import React, {useState , useEffect , useContext}from 'react';\r\n\r\nimport axios from 'axios'\r\n//converting URL[unknown] to String to meet the axios type\r\n//const API_BACKEND = String(config.API_BACKEND)\r\n\r\n//export const Login = (LoginInfo : any) => (publicFetch.post('auth/login/read', LoginInfo, {withCredentials: true}));\r\nexport const PlatformAdd = (PlatformInfo :any, authAxios:any) => (authAxios.post('platform/add', PlatformInfo));\r\n\r\n","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\nav\\nav-inner\\NavInner.tsx",["809","810","811"],"import React ,{useState} from 'react';\r\nimport useStyles from './NavInner-style';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport { Paper } from '@material-ui/core';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport clsx from 'clsx';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport {\r\n  Link,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n  useRouteMatch\r\n} from 'react-router-dom'\r\n\r\ninterface TabPanelProps {\r\n    children?: React.ReactNode;\r\n    index: any;\r\n    value: any;\r\n  }\r\n\r\ntype Orientation = \"vertical\" | \"horizontal\"\r\n\r\ninterface TabInfor {\r\n  path: string,\r\n  name: string,\r\n  label: string,\r\n  component: React.ReactNode,\r\n  exact ?: boolean,\r\n}\r\n\r\ninterface TabComponent {\r\n  tabcomponent : Array<TabInfor>\r\n  orientation: Orientation\r\n}\r\n//\r\n  function TabPanel(props: TabPanelProps) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box px={3}>\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function a11yProps(index: any) {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n  }\r\n    \r\nexport const AccountNav: React.FC<TabComponent> = ({tabcomponent,orientation}) =>{\r\n    let {path} = useRouteMatch();\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState(0);\r\n    const [open, setOpen] = useState(false);\r\n    const handleDrawerOpen = () => {\r\n      setOpen(true);\r\n    };\r\n    const handleDrawerClose = () => {\r\n      setOpen(false);\r\n    };\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setValue(newValue);\r\n    handleDrawerClose();\r\n  };\r\n\r\n  //tab component\r\n  let index = -1;\r\n  const tab = tabcomponent.map((item)=>{\r\n    index++;\r\n    return(\r\n        <Tab className={classes.tab} label={item.label} {...a11yProps(0)} component={Link} to={`${path}${item.path}`} />\r\n    )\r\n  })\r\n\r\n  //tab content\r\n  let indexp = -1;\r\n  const tabpanel = tabcomponent.map((item)=>{\r\n    indexp++;\r\n\r\n    return(\r\n    <Route path={`${path}${item.path}`} \r\n                      exact={item.exact} name={item.name} >\r\n        <TabPanel value={value} index={indexp} >\r\n            <Paper className={classes.paper}>\r\n                {item.component}\r\n            </Paper>\r\n        </TabPanel>\r\n    </Route>\r\n    )\r\n  })\r\n\r\n  //nav detect if it is horizontal or vertical\r\n  const tabItem = (orientation :Orientation) => {\r\n    return(\r\n    <Tabs orientation={orientation}\r\n      classes={{ indicator: classes.indicator }} value={value} onChange={handleChange}  \r\n      variant=\"scrollable\" scrollButtons=\"auto\" className={orientation==='horizontal' ? '' : classes.tabs}>\r\n        {tab}\r\n    </Tabs>  )\r\n  }\r\n  \r\n  //display the nav result\r\n  let tabOrientation;\r\n  let tabOrientationDisplay;\r\n  if(orientation === 'horizontal'){\r\n    tabOrientation =  <AppBar position=\"static\" className={clsx(classes.appbar,classes.tabResSize)} elevation={0} color=\"default\">\r\n                        {tabItem(orientation)}\r\n                      </AppBar>\r\n    tabOrientationDisplay=''\r\n  }else{\r\n    tabOrientation =  <div className={classes.tabResSize}>\r\n                        {tabItem(orientation)}\r\n                      </div>\r\n    tabOrientationDisplay='flex'\r\n  }\r\n\r\n    return(\r\n      <>\r\n        <React.Fragment key='left'>\r\n          <Drawer anchor='left' open={open} onClose={handleDrawerClose}  classes={{\r\n              paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n          }}>\r\n            {tabItem('vertical')}\r\n          </Drawer>\r\n        </React.Fragment>\r\n        <div className={classes.grid}>\r\n        <IconButton edge=\"start\"  color=\"inherit\" aria-label=\"open drawer\" onClick={handleDrawerOpen} className={clsx(classes.menuButton)} >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography className={classes.Title}>\r\n          My Account\r\n        </Typography>\r\n\r\n        </div>\r\n        <div className={classes.root} style={{display:tabOrientationDisplay}}>\r\n          \r\n        {tabOrientation}\r\n        <Switch>\r\n        {tabpanel}\r\n        </Switch>\r\n        </div>\r\n        </>\r\n    )\r\n}","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\nav\\nav-inner\\NavInner-style.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\nav\\nav-top\\NavTopPlatform.tsx",["812","813","814","815","816","817","818"],"import React, { ReactDOM ,useEffect, useState ,useContext} from 'react';\r\nimport clsx from 'clsx';\r\nimport useStyles from './NavTop-style'; \r\nimport {NavTopI} from './../../../../model/nav/Nav'\r\nimport Button from '@material-ui/core/Button';\r\nimport ContextMenu from './../../../../utility/context-menu/ContextMenu';\r\nimport { useSelector } from 'react-redux';\r\nimport {RootState} from './../../../../reducer';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport {useHistory , useParams} from 'react-router-dom'\r\nimport config from './../../../../config'\r\ninterface Params {\r\n    platformid: string\r\n}\r\n\r\nconst NavTopPlatform : React.FC= () => {\r\n    const PlatformDetail = useSelector((state:RootState)=>state.feature);\r\n        //switchFunction\r\n        const history = useHistory();\r\n        const {platformid}  = useParams<Params>();\r\n        const switchFunction = (check: string) => {\r\n            switch(check){\r\n                case 'connection':\r\n                    history.push('/platform/'+platformid+'/myconnection')\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    \r\n        //MenuItemListOption\r\n        const MenuItemListOption = [\r\n            {\r\n                tag: \"My Connection\",\r\n                actionTag: \"connection\"\r\n            },  \r\n        ]\r\n\r\n        //IconnButtonShown\r\n        const IconButton:React.FC = () => {\r\n            return (    \r\n            <Button className={classes.platformbar}>\r\n                {PlatformDetail.platform_name} <ArrowDropDownIcon />\r\n            </Button>)\r\n        }\r\n    //ContextMenu\r\n    const classes = useStyles();\r\n\r\n   return(\r\n    <>\r\n    <ContextMenu MenuFontSize={\"11px\"} switchFunction={switchFunction} MenuItemListOption={MenuItemListOption} IconButtonShown={ <IconButton /> } backgroundColor='transparent'/>\r\n    </>\r\n   ); \r\n}\r\n\r\nexport default NavTopPlatform","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\feature\\Feature.tsx",["819","820","821","822","823","824","825","826","827","828","829","830","831","832","833","834","835","836","837","838","839"],"import React, { ReactDOM, useState , useContext , useEffect } from 'react';\r\nimport {RPlatformS} from './redux/FeatureAction';\r\nimport { useParams } from \"react-router\";\r\nimport { useSelector } from 'react-redux';\r\nimport {RootState} from './../../../reducer';\r\nimport clsx from 'clsx';\r\nimport Container from '@material-ui/core/Container';\r\nimport {AuthContext} from '../../../context/AuthContext';\r\nimport {FetchContext} from '../../../context/FetchContext';\r\nimport {useDispatch  } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport NavSide from '../nav/nav-side/NavSide'\r\nimport NavTop from '../nav/nav-top/NavTop'\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport useStyles from './Feature-style'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { SetStateAction } from 'react';\r\nimport {FeatureRoute} from './FeatureRoute';\r\nimport Dashboard from './../dashboard/Dashboard';\r\nimport config from '../../../config';\r\nimport {\r\n  Link,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n  useRouteMatch\r\n} from 'react-router-dom'\r\n\r\ninterface Params {\r\n  platformid: string\r\n}\r\ninterface variantI{\r\n  variant: \"permanent\" | \"temporary\" | undefined\r\n}\r\nconst Feature : React.FC = () => {\r\n  const [width,setWidth] = useState(false);\r\n  const [open,setOpen] = useState(true);\r\n  const [nav,setNav] = useState<variantI>({variant:undefined});\r\n  const dispatch = useDispatch();\r\n  const {authData} = useContext(AuthContext);\r\n  const {authAxios} = useContext(FetchContext);\r\n   const {platformid}  = useParams<Params>();\r\n\r\n   const classes = useStyles();\r\n  //redux value \r\n  const PlatformDetail = useSelector((state:RootState)=>state.feature);\r\n   useEffect(()=>{\r\n      const PlatformFetch = () => {\r\n        dispatch(RPlatformS(authAxios,platformid))\r\n      }\r\n      PlatformFetch();\r\n   },[])\r\n\r\n   useEffect(()=>{\r\n\r\n    if(window.innerWidth <= 760){\r\n      setNav({variant:\"temporary\"});\r\n      setOpen(false);\r\n    } else{\r\n      setNav({variant:\"permanent\"})\r\n    }\r\n },[window.innerWidth])  \r\n\r\n   return(\r\n    <div className={classes.root}>\r\n      <React.Fragment key='left'>\r\n      <NavTop nav={{open : open,setOpen:setOpen}} type={'Feature'}/>\r\n      <NavSide variant={nav.variant} setOpen={setOpen} open={open}/>\r\n      </React.Fragment>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"xl\" className={classes.container}>\r\n          <Dashboard />\r\n        </Container>\r\n      </main>\r\n    </div>    \r\n   ); \r\n}\r\n\r\nexport default Feature","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\feature\\Feature-style.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\feature\\redux\\FeatureReducer.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\feature\\redux\\FeatureConstant.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\feature\\redux\\FeatureAction.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\feature\\redux\\FeatureEffect.tsx",["840","841","842","843","844"],"import React, {useState , useEffect , useContext}from 'react';\r\n\r\nimport axios from 'axios'\r\n//converting URL[unknown] to String to meet the axios type\r\n//const API_BACKEND = String(config.API_BACKEND)\r\n\r\n//export const Login = (LoginInfo : any) => (publicFetch.post('auth/login/read', LoginInfo, {withCredentials: true}));\r\nexport const FeatureFetch = (authAxios:any , platformid : string) => (authAxios.get('platform/'+platformid));\r\n\r\n","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\feature\\FeatureRoute.tsx",["845"],"import React from 'react';\r\n//import {DashboardGrid} from './../dashboard/DashboardGrid';\r\nimport {Connection} from '../connection/Connection/Connection';\r\nimport {ConnectionMetrics} from '../connection/connectionMetrics/ConnectionMetrics';\r\nimport {Application} from'../visualization/application/Application';\r\n//const FeatureTest1 = React.lazy(() => import('./FeatureTest1'));\r\n//const FeatureTest2 = React.lazy(() => import('./FeatureTest2'));\r\n//const FeatureTest3 = React.lazy(() => import('./FeatureTest3'));\r\n\r\nexport const FeatureRoute = [\r\n    { path: '/myconnection', name: 'MyConnection', component: Connection , exact:false },\r\n    { path: '/service/:serviceId', name: 'ConnectionMetrics', component: ConnectionMetrics , exact:false},\r\n    { path: '/application/:application',name:'Application',component: Application , exact:false}\r\n]","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\dashboard\\Dashboard.tsx",["846","847"],"import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {FeatureRoute} from './../feature/FeatureRoute';\r\nimport {\r\n    Link,\r\n    Redirect,\r\n    Route,\r\n    Switch,\r\n    useRouteMatch\r\n  } from 'react-router-dom'\r\n\r\n  //const FeatureTest1 = React.lazy(() => import('./../feature/FeatureTest1'));\r\n  interface DashboardI {\r\n    path: string,\r\n    name: string,\r\n    exact ?: boolean,\r\n    component : React.ElementType\r\n}\r\n\r\nconst Dashboard : React.FC = () => {\r\n    let { path } = useRouteMatch();\r\n    console.log('take 1')\r\n   return(\r\n    <div >\r\n        \r\n        <Grid container spacing={1}>\r\n          <Switch>      \r\n                {FeatureRoute.map((item : DashboardI)=>{\r\n                   return( \r\n                   <Route path={`${path}${item.path}`} \r\n                    exact={item.exact} name={item.name} >\r\n                        <item.component />\r\n                    </Route>)\r\n                })}\r\n          </Switch>\r\n        </Grid>\r\n    </div>    \r\n   ); \r\n}\r\n\r\nexport default React.memo(Dashboard)","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\dashboard\\DashboardGrid.tsx",["848"],"import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport makeStyle from './Dashboard-style';\r\ninterface DashboardGridI {\r\n    title: string,\r\n    prop : React.ReactNode,\r\n}\r\n\r\n/*            <Grid item xs={12}>\r\n                <Paper className={classes.paper} style={{height:'250px'}}>\r\n                    <span className={classes.papertitle}>\r\n                        Dashboard\r\n                    </span>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            Pikachu\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>*/\r\n\r\nexport const DashboardGrid :React.FC<DashboardGridI> = ({title,prop}) => {\r\n    const classes = makeStyle();\r\n    return(\r\n        <>  \r\n            <Grid item xs={12} >\r\n                <span className={classes.topictitle}>\r\n                 {title}\r\n                </span>\r\n                {prop}\r\n            </Grid>\r\n            \r\n        </>\r\n    )\r\n}","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\dashboard\\Dashboard-style.tsx",["849"],"import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n  topictitle:{\r\n    color:'black',\r\n    fontWeight:'bold',\r\n    fontSize:'28px'\r\n  },  \r\n  paper:{\r\n        paddingTop: theme.spacing(1),\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n        borderRadius:'10px'\r\n  },\r\n  papertitle:{\r\n    fontSize:'20px',\r\n  }\r\n  }));\r\n\r\nexport default useStyles","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\Connection-style.tsx",["850"],"import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n  grid:{\r\n    margin:'5px',\r\n  },\r\n  position:{\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems:\"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  sectionitem:{\r\n    marginTop:'10px',\r\n    marginBottom:'10px'\r\n  },\r\n  topictitle:{\r\n    color:'black',\r\n    fontWeight:'bold',\r\n    fontSize:'28px'\r\n  },\r\n  subtopictitle:{\r\n    color:'black',\r\n    fontWeight:'bold',\r\n    fontSize:'18px'  \r\n  },\r\n  paper:{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n  },\r\n  paperPadding:{\r\n    paddingTop: theme.spacing(1),\r\n    paddingLeft: theme.spacing(1),\r\n  },\r\n  paperMargin:{\r\n    margin: theme.spacing(1),\r\n  },\r\n  paperRelative:{\r\n    position:'relative',\r\n  },\r\n  paperAbsolute:{\r\n    position:'absolute'\r\n  },\r\n  papertitle:{\r\n    fontSize:'20px',\r\n  },\r\n  paperBorder:{\r\n    borderColor:'green'\r\n  },\r\n  item:{\r\n      margin: 'auto',\r\n      height:\"70px\",\r\n  },\r\n  icon:{\r\n    margin:'auto',\r\n  },\r\n  appdetail:{\r\n      height: '100%'\r\n  },\r\n  appn:{\r\n      fontWeight:'bold',\r\n      fontSize:'17px'\r\n  },\r\n  appd:{\r\n    fontSize:'12px',\r\n    color:'grey'   \r\n  },\r\n  appstatus:{\r\n      paddingTop:'12px'\r\n  },\r\n  appstatustext:{\r\n      fontSize:'10px',\r\n      fontWeight:'bold'\r\n  },\r\n  buttonWidth:{\r\n    backgroundColor: 'transparent',\r\n    width:'100%'\r\n  },\r\n  buttonMargin:{\r\n    marginTop:'10px',\r\n    marginBottom:'30px'\r\n  },\r\n  buttonDetail: {\r\n    fontSize:'10px',\r\n    margin: theme.spacing(0.2)\r\n  },\r\n  buttonHeight:{\r\n    height:'100px'\r\n  },\r\n  buttonPadding: {\r\n    position:'relative',\r\n    padding: theme.spacing(0.5)\r\n  },\r\n  buttonGrid:{\r\n    textAlign:'left',\r\n  },\r\n  buttonIcon:{\r\n    margin:theme.spacing(0.5),\r\n    position:'absolute',\r\n  },\r\n  buttonApp:{\r\n    top:'0',\r\n    left:'0',    \r\n  },\r\n  buttonMetrics:{\r\n    '&:hover $buttonMark':{\r\n      display: 'inline',\r\n    }\r\n  },\r\n  buttonMetricsActive:{\r\n    borderWidth:'medium',\r\n    borderColor:'green'\r\n  },\r\n  buttonMark:{\r\n    backgroundColor:'transparent',\r\n    display:'none',\r\n    color:'grey',\r\n    top:'0',\r\n    right:'0',\r\n    '&:hover':{\r\n      color:'orange',\r\n    }\r\n  },\r\n  buttonMarkDetail:{\r\n    padding: 0 ,\r\n    backgroundColor: 'transparent' \r\n  },\r\n  buttonCorrect:{\r\n    color:'green',\r\n    bottom:'0',\r\n    right:'0',\r\n  },\r\n  serviceList:{\r\n    lineHeight: 'normal',\r\n    fontSize:'12px',\r\n    fontWeight:'bold',\r\n    letterSpacing:'0px',\r\n    textTransform:'none',\r\n  },\r\n  dialogTitle:{\r\n    marginBottom: theme.spacing(1)\r\n  },\r\n  dialogContent:{\r\n    color:'black',\r\n    fontWeight:'bold',\r\n  },\r\n  chartIcon:{\r\n    color:'white',\r\n    backgroundColor:'purple',\r\n    borderRadius:'4px'\r\n  },\r\n  connectionStatus:{\r\n    fontSize:'10px',\r\n    paddingLeft: theme.spacing(1.5),\r\n    paddingRight: theme.spacing(1.5),\r\n    borderTopRightRadius:'2px',\r\n    borderBottomRightRadius:'2px',\r\n    backgroundColor:'green',\r\n    color:'white'\r\n  }\r\n\r\n\r\n\r\n  }));\r\n\r\nexport default useStyles","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\ConnectionInterface.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\img\\brand\\index.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\img\\brand\\facebook.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\img\\brand\\linkedin.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\img\\brand\\zoho.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\windowpop\\windowpop.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\application\\zoho\\people\\zohoPeople.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\application\\zoho\\people\\zohoPeopleForm.tsx",["851"],"C:\\Users\\exb\\bsupkit\\frontend\\src\\application\\zoho\\people\\ZohoPeople.tsx",["852","853","854"],"import React from 'react';\r\nimport ZohoPeopleForm from './ZohoPeopleForm';\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport useStylesForm from '../../../utility/form/Form-style';\r\nimport WrapperApp from './../../WrapperApp';\r\n\r\nconst ZohoPeople :React.FC = () => {\r\n    const classes = useStylesForm();\r\n    return(      \r\n        <WrapperApp app={<ZohoPeopleForm />} />\r\n    )\r\n}\r\n\r\nexport default ZohoPeople","C:\\Users\\exb\\bsupkit\\frontend\\src\\application\\zoho\\people\\ZohoPeopleForm.tsx",["855","856"],"import React ,{useContext} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport useStylesForm from '../../../utility/form/Form-style';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport config from '../../../config';\r\nimport {AuthContext} from '../../../context/AuthContext';\r\nimport {FetchContext} from '../../../context/FetchContext';\r\nimport {useDispatch  } from 'react-redux';\r\nimport {PAGE_STATUS_LOADING, PAGE_STATUS_ERROR} from '../../../view/modal/Loadingpage/redux/LoadingConstant'\r\ninterface ZohoPeopeFormI {\r\n    domain: string\r\n}\r\n\r\nconst ZohoPeopleForm :React.FC = () => {\r\n    const domainName = [{\"name\":\".com\"},{\"name\":\".eu\"},{\"name\":\".in\"}]\r\n    const {authData} = useContext(AuthContext);\r\n    const {authAxios} = useContext(FetchContext);\r\n    const classes = useStylesForm();\r\n    const dispatch = useDispatch();\r\n\r\n    const ZohoPeopleFormValidSchema = yup.object().shape({\r\n        domain: yup.string().required(),\r\n    });\r\n\r\n    const {control, handleSubmit , errors } = useForm<ZohoPeopeFormI>({\r\n        resolver: yupResolver(ZohoPeopleFormValidSchema)\r\n    });\r\n    const CLIENT_ID = config.ZOHO.CLIENT_ID\r\n    const REDIRECT_URL = config.ZOHO.REDIRECT_URL\r\n    const onSubmitForm = async (domain: ZohoPeopeFormI) => { \r\n        dispatch({type:PAGE_STATUS_LOADING});\r\n        try{\r\n            const {data} = await authAxios.post(`${config.API_BACKEND}oauth/app/zoho/people/domain`, domain );\r\n            if(data.success && data.id) {\r\n                window.location.replace(`https://accounts.zoho.com/oauth/v2/auth?scope=ZOHOPEOPLE.employee.ALL&client_id=${CLIENT_ID}&response_type=code&access_type=online&redirect_uri=${REDIRECT_URL}`) \r\n            }else {\r\n                throw \"No Input Found\";\r\n            }\r\n        }catch(error){\r\n            const payload = {message: error.message || error,\r\n                explaination: ''}\r\n            dispatch({type:PAGE_STATUS_ERROR, payload: payload});\r\n        }\r\n    }\r\n\r\n    return(\r\n    <form className={classes.form} onSubmit={handleSubmit(onSubmitForm)} noValidate>\r\n        <Grid item xs={12}>\r\n        Domain\r\n        <Controller\r\n            render={(props)=>(      \r\n                <TextField\r\n                id=\"domain\"\r\n                name=\"domain\"\r\n                select\r\n                placeholder=\"Domain\"\r\n                SelectProps={{\r\n                native: true,\r\n                }}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n                inputRef={props.ref}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                className={errors.domain ? classes.error_outline: undefined}\r\n                > \r\n                {<option style={{display:\"none\"}}></option>}  \r\n                {\r\n                    domainName.map((dn : any)=>(\r\n                        <option key={dn.name} value={dn.name} >\r\n                            {dn.name}\r\n                        </option>\r\n                    ))\r\n                }\r\n                </TextField>\r\n            )}\r\n            control={control}\r\n            name=\"domain\"\r\n            defaultValue=\"\"\r\n        />\r\n        {errors.domain? <span className={classes.error_message}> {errors.domain?.message}  </span> : undefined}\r\n        </Grid>  \r\n    \r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}>\r\n          Submit\r\n        </Button>\r\n    </form>   \r\n    )\r\n}\r\n\r\nexport default ZohoPeopleForm","C:\\Users\\exb\\bsupkit\\frontend\\src\\application\\WrapperApp.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\application\\zoho\\people\\ZohoPeopleStatus.tsx",["857","858","859","860","861","862","863","864"],"C:\\Users\\exb\\bsupkit\\frontend\\src\\application\\ApplicationStatus.tsx",["865"],"import React ,{useEffect} from 'react';\r\nimport WrapperApp from './WrapperApp';\r\nimport { useParams } from \"react-router\";\r\nimport ApplicationStatusF from './AppilcationStatusF';\r\nimport ApplicationStatusS from './ApplicationStatusS';\r\ninterface Params {\r\n    status: string,\r\n}\r\n\r\nconst ApplicationStatus :React.FC = () => {\r\n    const {status }  = useParams<Params>();\r\n    let div;\r\n    status === 'success'  ? div = <ApplicationStatusS /> : div = <ApplicationStatusF />\r\n\r\n    return(      \r\n    <WrapperApp app={<>{div}</>} />\r\n    )\r\n}\r\n\r\nexport default ApplicationStatus","C:\\Users\\exb\\bsupkit\\frontend\\src\\application\\ApplicationStatusS.tsx",["866","867","868","869","870"],"import React ,{useEffect} from 'react';\r\n//import {windowpopClose} from '../windowpop/windowpop';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport green from '@material-ui/core/colors/green';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport useStylesForm from '../utility/form/Form-style';\r\nimport WrapperApp from './WrapperApp';\r\nimport { useParams } from \"react-router\";\r\nimport {useLocation} from \"react-router-dom\";\r\n\r\nconst windowpopClose = () => {\r\n    if(window){\r\n        window.close();\r\n    }  \r\n}\r\n\r\nconst ApplicationStatusS :React.FC = () => {\r\n    const location = useLocation();\r\n    const params = new URLSearchParams(location.search)\r\n\r\n    const call = () => {\r\n        if(window.opener && !window.opener.closed) {\r\n            window.opener.DispatchService(params.get('aid'),params.get('uid'));\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        call();\r\n    },[])\r\n    \r\n    return(   \r\n    <Grid container spacing={3} direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <Grid item xs>\r\n            Connect Successfully\r\n        </Grid>\r\n        <Grid item xs>\r\n            Exiting...\r\n        </Grid>       \r\n        <Grid item xs>\r\n            <Button variant=\"contained\" style={{backgroundColor:green[800], width:'100%'}} onClick={windowpopClose}> Ok </Button>\r\n        </Grid>    \r\n    </Grid>\r\n    )\r\n}\r\n\r\nexport default ApplicationStatusS","C:\\Users\\exb\\bsupkit\\frontend\\src\\application\\AppilcationStatusF.tsx",["871","872","873","874","875"],"import React ,{useEffect} from 'react';\r\n//import {windowpopClose} from '../windowpop/windowpop';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport red from '@material-ui/core/colors/red';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport useStylesForm from '../utility/form/Form-style';\r\nimport WrapperApp from './WrapperApp';\r\nimport { useParams } from \"react-router\";\r\nconst windowpopClose = () => {\r\n    if(window){\r\n        window.close();\r\n    }  \r\n}\r\nconst ApplicationStatusF :React.FC = () => {\r\n    return(   \r\n    <Grid container spacing={3} direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <Grid item xs>\r\n            Unable To Connect\r\n        </Grid>\r\n        <Grid item xs>\r\n            Please Try Again Later.\r\n        </Grid>\r\n        <Grid item xs>\r\n            If it is still unsolved, please contact us.\r\n        </Grid>\r\n        <Grid item xs>\r\n            <Button variant=\"contained\" style={{backgroundColor:red[800], width:'100%'}} onClick={windowpopClose}> Close </Button>\r\n        </Grid>        \r\n    </Grid>\r\n    )\r\n}\r\n\r\nexport default ApplicationStatusF","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\Connection\\Connection.tsx",["876","877","878","879","880","881"],"import React,{useEffect} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport makeStyle from '../Connection-style';\r\nimport clsx from 'clsx';\r\nimport {DashboardGrid} from '../../dashboard/DashboardGrid';\r\nimport {ConnectionSection} from './ConnectionSection';\r\nimport {windowpopStatus} from '../../../../windowpop/windowpop';\r\nexport const Connection  :React.FC = () => {\r\n    const title=\"My Connection\"\r\n\r\n    return(\r\n        <>\r\n            <DashboardGrid title={title} prop={<ConnectionSection /> }/>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\Connection\\ConnectionSection.tsx",["882","883","884","885"],"import React, {useEffect , useState ,useContext} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport makeStyle from '../Connection-style';\r\nimport clsx from 'clsx';\r\nimport {DashboardGrid} from '../../dashboard/DashboardGrid';\r\nimport {ConnectionSectionItem} from './ConnectionSectionItem';\r\nimport {FetchContext} from '../../../../context/FetchContext';\r\nimport {useHistory , useParams} from 'react-router-dom'\r\nimport {categoryI} from '../ConnectionInterface';\r\nimport {useDispatch  } from 'react-redux';\r\nimport {PAGE_STATUS_LOADING, PAGE_STATUS_SUCCESS, PAGE_STATUS_ERROR} from '../../../modal/Loadingpage/redux/LoadingConstant'\r\n\r\ninterface Params {\r\n    platformid: string\r\n}\r\n\r\nexport const ConnectionSection:React.FC = () => {\r\n    const {platformid}  = useParams<Params>();\r\n    const classes = makeStyle();\r\n    const {authAxios} = useContext(FetchContext);\r\n    const [category,setCategory] = useState<Array<categoryI>>([]);\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(()=>{\r\n        dispatch({type:PAGE_STATUS_LOADING});\r\n        const category = async() => {\r\n            try{\r\n                const {data} = await authAxios.get(\"platform/\"+platformid+\"/myconnection\")\r\n                setCategory(data.data)\r\n                dispatch({type: PAGE_STATUS_SUCCESS});\r\n            }\r\n            catch(error){\r\n                const payload = {message: error.message || error,\r\n                    explaination: ''}\r\n                dispatch({type:PAGE_STATUS_ERROR, payload: payload});\r\n            } \r\n        }\r\n        category()\r\n    },[authAxios])\r\n    console.log(category)\r\n    const cat = category.map((item)=>{\r\n        return(\r\n            <ConnectionSectionItem id={item.id} name={item.name} services={item.services}/>\r\n        )\r\n    })\r\n//  <ConnectionSectionItem />\r\n    return(  \r\n        <Grid item xs={12} >               \r\n            <Paper className={classes.paper} elevation={0}>\r\n                {cat}\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\Connection\\ConnectionSectionItem.tsx",["886","887","888"],"import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport makeStyle from '../Connection-style';\r\nimport clsx from 'clsx';\r\nimport {ConnectionSectionItemList} from './ConnectionSectionItemList';\r\nimport {DashboardGrid} from '../../dashboard/DashboardGrid';\r\nimport {categoryI} from '../ConnectionInterface';\r\n\r\n\r\nexport const ConnectionSectionItem  :React.FC<categoryI> = ({name, services}) => {\r\n    const classes = makeStyle();\r\n    const title=\"My Connection\"\r\n    const service = services.map((item)=>{\r\n        return(\r\n            <ConnectionSectionItemList id={item.id} description={item.description} service_name={item.service_name} application={item.application} />\r\n        )\r\n    })\r\n\r\n    return(\r\n        <span className={classes.sectionitem}>\r\n        <span className={clsx(classes.subtopictitle,classes.paperPadding)}>\r\n         {name}\r\n        </span>\r\n        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" >\r\n            {service}\r\n        </Grid>\r\n        </span>\r\n    )\r\n}","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\Connection\\ConnectionSectionItemList.tsx",["889","890","891","892","893"],"import React , {useEffect, useState ,useContext} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport makeStyle from '../Connection-style';\r\nimport clsx from 'clsx';\r\nimport {ConnectionSectionItemListStatus} from './ConnectionSectionItemListStatus';\r\nimport {serviceI} from '../ConnectionInterface';\r\nimport Icon from '../../../../img/brand';\r\nimport {useParams} from 'react-router-dom'\r\nimport {FetchContext} from '../../../../context/FetchContext';\r\nimport {apI} from '../ConnectionInterface';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {ConnectionSectionContextMenuMetrics} from './ConnectionSectionContextMenu';\r\nimport { Typography } from '@material-ui/core';\r\ninterface Params {\r\n    platformid: string\r\n}\r\n\r\n// <SiXero size={50}/>\r\nexport const ConnectionSectionItemList :React.FC<serviceI> = ({id,description,service_name,application}) => {\r\n    const classes = makeStyle();\r\n    const {platformid}  = useParams<Params>();\r\n    const {authAxios} = useContext(FetchContext);\r\n    const [loading, setLoading] = useState(true);\r\n    const [authApp, setAuthApp] = useState<apI>({    \r\n        authenticationservice_id: 0,\r\n        authenticationservice_ap_id:null,\r\n        authentication_authentication_id: null});\r\n\r\n    // Will move this into Connection Scope\r\n    useEffect(()=>{\r\n        const AuthApp = async() => {\r\n            const {data} = await authAxios.post(\"platform/\"+platformid+\"/myconnection/app\",{serviceid:id})\r\n            if(data.data){setAuthApp(data.data);}   \r\n            setLoading(false);  \r\n        }\r\n        AuthApp();        \r\n    },[])\r\n\r\n    const connectStatus= <span className={clsx(classes.buttonApp,classes.paperAbsolute,classes.connectionStatus)}>\r\n                            Connected\r\n                        </span>\r\n\r\n    return(\r\n        <>\r\n          <Grid item xs={12} md={6} lg={4} >\r\n          <Paper className={clsx(classes.paper,classes.grid,classes.paperRelative)} >\r\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" className={clsx(classes.paperMargin)}>\r\n                    {authApp.authenticationservice_ap_id && connectStatus}\r\n                    <Grid item xs={12} >\r\n                        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\"  className={classes.item}>\r\n                            <Grid item xs={3} sm={2} className={classes.icon}>\r\n                               <Icon name={application.imglocation} />\r\n                            </Grid>\r\n                            <Grid item xs={8} sm={9} className={classes.appdetail}>\r\n                                <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"flex-start\" >\r\n                                    <Grid item xs={12} className={classes.appn}>\r\n                                        {service_name}\r\n                                    </Grid>     \r\n                                    <Grid item xs={12} className={classes.appd}>\r\n                                        {description} \r\n                                    </Grid>                               \r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={1} sm={1} className={classes.appdetail}>\r\n                                <Grid container direction=\"column\" justify=\"flex-end\" alignItems=\"flex-end\" >    \r\n                                    <Grid item xs={12} className={classes.appd}>\r\n                                        <ConnectionSectionContextMenuMetrics serviceId={id} authenticationServiceId={authApp.authenticationservice_ap_id}/>\r\n                                    </Grid>                               \r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Paper>\r\n            </Grid>\r\n            \r\n    </>\r\n    )\r\n}","C:\\Users\\exb\\bsupkit\\frontend\\src\\img\\brand\\quickbooks.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\Connection\\ConnectionSectionContextMenu.tsx",["894","895","896","897","898","899","900","901"],"import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport makeStyle from '../Connection-style';\r\nimport ContextMenu from '../../../../utility/context-menu/ContextMenu';\r\nimport {IoEllipsisVerticalSharp} from 'react-icons/io5'\r\nimport {windowpopOpen} from '../../../../windowpop/windowpop';\r\nimport {useHistory , useParams} from 'react-router-dom'\r\nimport {contextI} from '../ConnectionInterface';\r\ninterface Params {\r\n    platformid: string\r\n}\r\n\r\nexport const ConnectionSectionContextMenuConnected  :React.FC = () => {\r\n    const classes = makeStyle();\r\n    //switchFunction\r\n    const switchFunction = (check: string) => {\r\n        switch(check){\r\n            case 'd':\r\n                break;\r\n            default:\r\n                break;\r\n            }\r\n    }\r\n    //MenuItemListOption\r\n        const MenuItemListOption = [\r\n            {\r\n                tag: \"Disconnect\",\r\n                actionTag: \"d\"\r\n            },  \r\n        ]\r\n    return(\r\n        <>\r\n        <ContextMenu MenuFontSize={\"11px\"} switchFunction={switchFunction} MenuItemListOption={MenuItemListOption} IconButtonShown={ <IoEllipsisVerticalSharp size={17}/> } />\r\n        </>\r\n    )\r\n}\r\ninterface CMDI {\r\n    url : string\r\n}\r\nexport const ConnectionSectionContextMenuDisconnected  :React.FC = () => {\r\n    const classes = makeStyle();\r\n    //switchFunction\r\n    const switchFunction = (check: string) => {\r\n        switch(check){\r\n            case 'c':\r\n                break;\r\n            default:\r\n                break;\r\n            }\r\n    }\r\n    //MenuItemListOption\r\n        const MenuItemListOption = [\r\n            {\r\n                tag: \"Connect\",\r\n                actionTag: \"c\"\r\n            },  \r\n        ]\r\n    return(\r\n        <>\r\n        <ContextMenu MenuFontSize={\"11px\"} switchFunction={switchFunction} MenuItemListOption={MenuItemListOption} IconButtonShown={ <IoEllipsisVerticalSharp size={17}/> } />\r\n        </>\r\n    )\r\n}\r\nexport const ConnectionSectionContextMenuNoConnection  :React.FC = () => {\r\n    const classes = makeStyle();\r\n    //switchFunction\r\n    const switchFunction = (check: string) => {\r\n        switch(check){\r\n            case 'c':\r\n                break;\r\n            default:\r\n                break;\r\n            }\r\n    }\r\n    //MenuItemListOption\r\n        const MenuItemListOption = [\r\n            {\r\n                tag: \"Connect\",\r\n                actionTag: \"c\"\r\n            },  \r\n        ]\r\n    return(\r\n        <>\r\n        <ContextMenu MenuFontSize={\"11px\"} switchFunction={switchFunction} MenuItemListOption={MenuItemListOption} IconButtonShown={ <IoEllipsisVerticalSharp size={17}/> } />\r\n        </>\r\n    )\r\n}\r\n\r\n/* Check Scope */\r\n\r\nexport const ConnectionSectionContextMenuMetrics :React.FC<contextI> = ({serviceId,authenticationServiceId}) => {\r\n    const {platformid}  = useParams<Params>();\r\n    const history = useHistory();\r\n    const classes = makeStyle();\r\n\r\n    //switchFunction\r\n    const switchFunction = (check: string) => {\r\n        console.log('Context Menu' + authenticationServiceId)\r\n        switch(check){\r\n            case 's':\r\n                history.push({\r\n                    pathname:`/platform/${platformid}/service/${serviceId}`,\r\n                    state: authenticationServiceId})\r\n                break;\r\n            default:\r\n                break;\r\n            }\r\n    }\r\n    //MenuItemListOption\r\n        const MenuItemListOption = [\r\n            {\r\n                tag: \"Check Metrics\",\r\n                actionTag: \"s\"\r\n            },  \r\n        ]\r\n    return(\r\n        <>\r\n        <ContextMenu MenuFontSize={\"11px\"} switchFunction={switchFunction} MenuItemListOption={MenuItemListOption} IconButtonShown={ <IoEllipsisVerticalSharp size={17}/> } />\r\n        </>\r\n    )\r\n}","C:\\Users\\exb\\bsupkit\\frontend\\src\\img\\brand\\mailchimp.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\form\\platform\\myaccount\\Changepassword\\Changepassword.tsx",["902","903","904","905","906"],"import React, {useState , useEffect , useContext}from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport {ChangepasswordValidSchema} from './ChangepasswordValidSchema';\r\nimport useStylesForm from '../../../Form-style';\r\nimport {useDispatch  } from 'react-redux';\r\nimport {AuthContext} from '../../../../../context/AuthContext';\r\nimport {PAGE_STATUS_LOADING, PAGE_STATUS_SUCCESS, PAGE_STATUS_ERROR} from '../../../../../view/modal/Loadingpage/redux/LoadingConstant'\r\nimport { Typography, FormControl } from '@material-ui/core';\r\nimport {FetchContext} from '../../../../../context/FetchContext';\r\nimport { useSnackbar } from 'notistack';\r\nimport {ChangePasswordI} from './../../../../../model/myaccount/myaccount';\r\n\r\nconst ChangepasswordForm : React.FC = () => {\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const {authData} = useContext(AuthContext);\r\n    const {authAxios} = useContext(FetchContext);\r\n    const email = authData.userInfo.email;\r\n    const classes = useStylesForm();\r\n    const dispatch = useDispatch();\r\n\r\n    const [userDetail, setUserDetail] = useState<ChangePasswordI>({\r\n        oldpassword : '',\r\n        password: '',\r\n        repassword : ''\r\n    });\r\n\r\n    const {control, register , handleSubmit , errors,  reset ,watch } = useForm<ChangePasswordI>({\r\n         resolver: yupResolver(ChangepasswordValidSchema)\r\n    });\r\n    \r\n\r\n    const onSubmitForm = async (data: ChangePasswordI) => {    \r\n        dispatch({type:PAGE_STATUS_LOADING});\r\n        try{\r\n            await authAxios.post('myaccount/changepassword', data);\r\n            enqueueSnackbar('This is a success message!',{variant: 'success'});\r\n            setUserDetail({...userDetail,...data})\r\n            reset(data);\r\n            dispatch({type: PAGE_STATUS_SUCCESS,payload: data});\r\n            \r\n            console.log('Done Fecthing')\r\n        }catch(error){\r\n            const payload = {message: error.message || error,\r\n                explaination: ''}\r\n             dispatch({type:PAGE_STATUS_ERROR, payload: payload});\r\n        }\r\n    };\r\n\r\n    //onSubmit={handleSubmit(onSubmitForm)}\r\n    return( \r\n       <form className={classes.form} onSubmit={handleSubmit(onSubmitForm)}  noValidate>\r\n        <Grid container spacing={2} >\r\n            <Grid item xs={12}>\r\n                <Typography variant='h5' style={{textAlign:'left',fontWeight:'bold'}}>\r\n                    Change Password   \r\n                </Typography>\r\n            </Grid>\r\n        <Grid item xs={12}>\r\n            Old Password\r\n        <Controller\r\n            render={(props)=>(     \r\n            <TextField\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n                inputRef={props.ref}\r\n                autoComplete=\"oldpassword\"\r\n                name=\"oldpassword\"\r\n                variant=\"outlined\"\r\n                type=\"password\"\r\n                required\r\n                fullWidth\r\n                id=\"oldpassword\"\r\n                size=\"small\"\r\n            />)}\r\n            control={control}\r\n            name=\"oldpassword\"\r\n            defaultValue=\"\"\r\n        />\r\n        {errors.oldpassword? <span className={classes.error_message}> {errors.oldpassword?.message}  </span> : undefined}\r\n\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n           New Password\r\n        <Controller\r\n            render={(props)=>(     \r\n            <TextField\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n                inputRef={props.ref}\r\n                autoComplete=\"password\"\r\n                name=\"password\"\r\n                variant=\"outlined\"\r\n                type=\"password\"\r\n                required\r\n                fullWidth\r\n                id=\"password\"\r\n                size=\"small\"\r\n            />)}\r\n            control={control}\r\n            name=\"password\"\r\n            defaultValue=\"\"\r\n        />\r\n\r\n        {errors.password? <span className={classes.error_message}> {errors.password?.message}  </span> : undefined}\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            Re-New Password\r\n        <Controller\r\n            render={(props)=>(     \r\n            <TextField\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n                inputRef={props.ref}\r\n                autoComplete=\"repassword\"\r\n                name=\"repassword\"\r\n                variant=\"outlined\"\r\n                type=\"password\"\r\n                required\r\n                fullWidth\r\n                id=\"repassword\"\r\n                size=\"small\"\r\n            />)}\r\n            control={control}\r\n            name=\"repassword\"\r\n            defaultValue=\"\"\r\n        />\r\n        {errors.repassword? <span className={classes.error_message}> {errors.repassword?.message}  </span> : undefined}\r\n        </Grid>\r\n        </Grid>\r\n        <Button\r\n        type=\"submit\"\r\n        fullWidth\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.submit}\r\n        >\r\n        Save\r\n        </Button>\r\n        </form>      \r\n        );\r\n\r\n}\r\n\r\nexport default ChangepasswordForm\r\n","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\form\\platform\\myaccount\\Profile\\MyAccountForm.tsx",["907","908","909","910","911","912","913"],"import React, {useState , useEffect , useContext}from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport {MyAccountFormValidSchema} from './MyAccountFormValidSchema';\r\nimport useStylesForm from '../../../Form-style';\r\nimport {useDispatch  } from 'react-redux';\r\nimport {AuthContext} from '../../../../../context/AuthContext';\r\nimport {PAGE_STATUS_LOADING, PAGE_STATUS_SUCCESS, PAGE_STATUS_ERROR} from '../../../../../view/modal/Loadingpage/redux/LoadingConstant'\r\nimport { Typography, FormControl } from '@material-ui/core';\r\nimport {FetchContext} from '../../../../../context/FetchContext';\r\nimport countries from './Countries.json';\r\nimport countriescommon from './CountriesCommon.json';\r\nimport { useSnackbar } from 'notistack';\r\nimport {UserDetailI} from '../../../../../model/myaccount/myaccount';\r\n\r\nconst MyAccountForm : React.FC = () => {\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const {authData} = useContext(AuthContext);\r\n    const {authAxios} = useContext(FetchContext);\r\n    const email = authData.userInfo.email;\r\n    const classes = useStylesForm();\r\n    const dispatch = useDispatch();\r\n\r\n    const [country ,setCountry] = useState(\"\");\r\n    const [userDetail, setUserDetail] = useState<UserDetailI>({\r\n        email: authData.userInfo.email,\r\n        firstname: '',\r\n        lastname: '',\r\n        address1: '',\r\n        address2: '',\r\n        city: '',\r\n        postal_code: '',\r\n        country: '',\r\n        state: ''\r\n    });\r\n\r\n    const {control, register , handleSubmit , errors,  reset ,watch } = useForm<UserDetailI>({\r\n        defaultValues : userDetail,\r\n        resolver: yupResolver(MyAccountFormValidSchema)\r\n    });\r\n    \r\n\r\n    const onSubmitForm = async (data: UserDetailI) => {    \r\n        dispatch({type:PAGE_STATUS_LOADING});\r\n        try{\r\n            await authAxios.post('myaccount/update', data);\r\n            enqueueSnackbar('Your profile is saved.',{variant: 'success'});\r\n            setUserDetail({...userDetail,...data})\r\n            reset(data);\r\n            dispatch({type: PAGE_STATUS_SUCCESS,payload: data});\r\n            \r\n            console.log('Done Fecthing')\r\n        }catch(error){\r\n            const payload = {message: error.message || error,\r\n                explaination: ''}\r\n             dispatch({type:PAGE_STATUS_ERROR, payload: payload});\r\n        }\r\n    };\r\n    const countryChange = watch(\"country\")\r\n\r\n   // const [country,setCountry] = useState(\"\");\r\n    const handleChange = (event : any) => {\r\n        const {name , value} = event.target\r\n        setUserDetail({...userDetail,[name]:value})\r\n\r\n        //setCountry(event.target.value);\r\n      };\r\n\r\n    const handleChangeCountry = (event:any)=>{\r\n        setCountry(event.target.value);\r\n        }\r\n    useEffect(()=>{\r\n        const userFetch = async () => {\r\n            dispatch({type:PAGE_STATUS_LOADING});\r\n            try{\r\n                const {data} = await authAxios.post('myaccount/edit', {email:authData.userInfo.email});\r\n                const userData = data.user[0];\r\n                // remove the attribute with null value. So it wont attach to defaultvalue\r\n                Object.keys(userData).forEach(key => userData[key]===null && delete userData[key])\r\n                setUserDetail({...userDetail,...userData})\r\n                reset(userData);\r\n                dispatch({type: PAGE_STATUS_SUCCESS,payload: data});\r\n                console.log('Done Fecthing')\r\n            }catch(error){\r\n                const payload = {message: error.message || error,\r\n                    explaination: ''}\r\n                 dispatch({type:PAGE_STATUS_ERROR, payload: payload});\r\n            }\r\n\r\n        }\r\n        userFetch();\r\n\r\n    },[authAxios])\r\n\r\n    const selectedcountry = countries.find(({ countryName }) => countryName === countryChange)\r\n    let region : React.ReactNode;\r\n    if(selectedcountry){\r\n\r\n        region = (selectedcountry.regions as any[]).map((region)=>{\r\n            return(\r\n            <option key={region.shortCode} value={region.name} >\r\n                {region.name}\r\n            </option>      \r\n            )\r\n        })\r\n    }\r\n\r\n    //onSubmit={handleSubmit(onSubmitForm)}\r\n    return( \r\n        <form className={classes.form} onSubmit={handleSubmit(onSubmitForm)}  noValidate>\r\n        <Grid container spacing={2} >\r\n        <Grid item xs={12}>\r\n            <Typography variant='h5' style={{textAlign:'left',fontWeight:'bold'}}>\r\n                Profile    \r\n            </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            Email\r\n        <Controller\r\n            render={(props)=>(     \r\n            <TextField\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n                inputRef={props.ref}\r\n                autoComplete=\"email\"\r\n                name=\"email\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                size=\"small\"\r\n                disabled\r\n            />)}\r\n            control={control}\r\n            name=\"email\"\r\n            defaultValue=\"\"\r\n        />\r\n\r\n        {errors.email? <span className={classes.error_message}> {errors.email?.message}  </span> : undefined}\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            First Name\r\n        <Controller\r\n            render={(props)=>(      \r\n            <TextField\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n                inputRef={props.ref}\r\n                autoComplete=\"firstname\"\r\n                name=\"firstname\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstname\"\r\n                label=\"First Name\"\r\n                size=\"small\"\r\n                className={errors.firstname ? classes.error_outline: undefined}\r\n            />)}\r\n            control={control}\r\n            name=\"firstname\"\r\n            defaultValue=\"\"\r\n        />\r\n\r\n        {errors.firstname? <span className={classes.error_message}> {errors.firstname?.message}  </span> : undefined}\r\n        </Grid>    \r\n        <Grid item xs={12}>\r\n        Last Name\r\n        <Controller\r\n            render={(props)=>(     \r\n                <TextField\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n                inputRef={props.ref}\r\n                autoComplete=\"lastname\"\r\n                name=\"lastname\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastname\"\r\n                label=\"Last Name\"\r\n                size=\"small\"\r\n                className={errors.lastname ? classes.error_outline: undefined}\r\n                />)}\r\n            control={control}\r\n            name=\"lastname\"\r\n            defaultValue=\"\"\r\n        />\r\n\r\n        {errors.lastname? <span className={classes.error_message}> {errors.lastname?.message}  </span> : undefined}\r\n        </Grid>   \r\n        <Grid item xs={12}>\r\n        Address 1\r\n        <Controller\r\n            render={(props)=>(      \r\n                <TextField\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n                inputRef={props.ref}\r\n                autoComplete=\"address1\"\r\n                name=\"address1\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"address1\"\r\n                label=\"Address 1\"\r\n                size=\"small\"\r\n                className={errors.address1? classes.error_outline: undefined}\r\n                />)}\r\n            control={control}\r\n            name=\"address1\"\r\n            defaultValue=\"\"\r\n        />\r\n        {errors.address1? <span className={classes.error_message}> {errors.address1?.message}  </span> : undefined}\r\n        </Grid> \r\n        <Grid item xs={12}>\r\n        Address 2\r\n        <Controller\r\n            render={(props)=>(      \r\n                <TextField\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n                inputRef={props.ref}\r\n                autoComplete=\"address2\"\r\n                name=\"address2\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"address2\"\r\n                label=\"Address 2\"\r\n                size=\"small\"\r\n                className={errors.address2? classes.error_outline: undefined}\r\n                />\r\n                )}\r\n            control={control}\r\n            name=\"address2\"\r\n            defaultValue=\"\"\r\n        />\r\n        {errors.address2? <span className={classes.error_message}> {errors.address2?.message}  </span> : undefined}\r\n        </Grid> \r\n        <Grid item xs={12} md={6}>\r\n        City\r\n        <Controller\r\n            render={(props)=>(    \r\n                <TextField\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n                inputRef={props.ref}\r\n                autoComplete=\"city\"\r\n                name=\"city\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"city\"\r\n                label=\"City\"\r\n                size=\"small\"\r\n                className={errors.city? classes.error_outline: undefined}\r\n                />\r\n                )}\r\n            control={control}\r\n            name=\"city\"\r\n            defaultValue=\"\"\r\n        />\r\n        {errors.city? <span className={classes.error_message}> {errors.city?.message}  </span> : undefined}\r\n        </Grid>   \r\n        <Grid item xs={12} md={6}>\r\n        Postal Code\r\n        <Controller\r\n            render={(props)=>(      \r\n            <TextField\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n            inputRef={props.ref}\r\n            autoComplete=\"postal_code\"\r\n            name=\"postal_code\"\r\n            variant=\"outlined\"\r\n            required\r\n            fullWidth\r\n            id=\"postal_code\"\r\n            label=\"Postal Code\"\r\n\r\n            size=\"small\"\r\n            className={errors.postal_code? classes.error_outline: undefined}\r\n            />\r\n            )}\r\n            control={control}\r\n            name=\"postal_code\"\r\n            defaultValue=\"\"\r\n        />\r\n        {errors.postal_code? <span className={classes.error_message}> {errors.postal_code?.message}  </span> : undefined}\r\n        </Grid>  \r\n        <Grid item xs={12} md={6}>\r\n        Country\r\n        <Controller\r\n            render={(props)=>(      \r\n                <TextField\r\n                id=\"country\"\r\n                name=\"country\"\r\n                select\r\n                placeholder=\"Country\"\r\n                SelectProps={{\r\n                native: true,\r\n                }}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n                inputRef={props.ref}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                className={errors.country? classes.error_outline: undefined}\r\n                >   \r\n                {<option style={{display:\"none\"}}></option>}\r\n                {   \r\n                    countriescommon.map((country)=>(\r\n                        <option key={country.countryShortCode} value={country.countryName} >\r\n                            {country.countryName}\r\n                        </option>                    \r\n                    ))\r\n                }\r\n                <option disabled>--------------------</option>\r\n                {\r\n                    countries.map((country : any)=>(\r\n                        <option key={country.countryShortCode} value={country.countryName} >\r\n                            {country.countryName}\r\n                        </option>\r\n                    ))\r\n                }\r\n                </TextField>\r\n            )}\r\n            control={control}\r\n            name=\"country\"\r\n            defaultValue=\"\"\r\n        />\r\n        {errors.country? <span className={classes.error_message}> {errors.country?.message}  </span> : undefined}\r\n        </Grid>  \r\n        <Grid item xs={12} md={6}>\r\n        State\r\n        <Controller\r\n            render={(props)=>(      \r\n                <TextField\r\n                id=\"state\"\r\n                placeholder=\"State\"\r\n                select\r\n                SelectProps={{\r\n                native: true,\r\n                }}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n                inputRef={props.ref}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                helperText={!countryChange ? \"Select Country First\" : \"\"}\r\n                disabled={!countryChange}\r\n                className={errors.state? classes.error_outline: undefined}\r\n                >   \r\n                    {region}\r\n                </TextField>\r\n            )}\r\n            control={control}\r\n            name=\"state\"\r\n            defaultValue=\"\"\r\n        />\r\n        {errors.state? <span className={classes.error_message}> {errors.state?.message}  </span> : undefined}\r\n        </Grid>  \r\n        </Grid>\r\n        <Button\r\n        type=\"submit\"\r\n        fullWidth\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.submit}\r\n        >\r\n        Save\r\n        </Button>\r\n        </form>   );\r\n\r\n}\r\n\r\nexport default MyAccountForm\r\n","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\form\\platform\\myaccount\\Changepassword\\ChangepasswordValidSchema.tsx",["914","915","916"],"import * as yup from \"yup\";\r\nimport axios from 'axios';\r\nimport config from '../../../../../config'\r\n\r\n\r\nconst API_URL = String(config.API_BACKEND)\r\nconst API_CLIENT = String(config.API_CLIENT);\r\n\r\nexport const ChangepasswordValidSchema = yup.object().shape({\r\n  oldpassword:yup.string().required(\"Old Password is required\"),\r\n  password: yup.string().required(\"New Password is required\").matches(\r\n    /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\r\n    \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\r\n  ),\r\n  repassword : yup.string().required(\"Re-New Password is required\").oneOf([yup.ref('password'), null], 'Passwords must match')\r\n  });","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\form\\platform\\myaccount\\Profile\\MyAccountFormValidSchema.tsx",["917","918","919"],"import * as yup from \"yup\";\r\nimport axios from 'axios';\r\nimport config from '../../../../../config'\r\n\r\n\r\nconst API_URL = String(config.API_BACKEND)\r\nconst API_CLIENT = String(config.API_CLIENT);\r\n\r\nexport const MyAccountFormValidSchema = yup.object().shape({\r\n  email:yup.string().required(),\r\n  firstname: yup.string().required(),\r\n  lastname: yup.string().required(),\r\n  address1: yup.string().required(),\r\n  address2: yup.string().required(),\r\n  city: yup.string().required(),\r\n  postal_code: yup.string().required(),\r\n  country: yup.string().required(),\r\n  state: yup.string().required()\r\n  });","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\frontauth\\forgetpassword\\ForgetPassword.tsx",["920","921","922","923","924","925","926","927","928","929"],"import React, { ReactDOM, useEffect } from 'react';\r\nimport useStyles from './ForgetPassword-style'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport ForgetPasswordForm from '../../../utility/form/auth/forgetpassword/ForgetPasswordForm'\r\nimport config from './../../../config';\r\nimport Box from '@material-ui/core/Box';\r\nimport {ELS} from './../../modal';\r\nimport { FaFacebookSquare ,FaLinkedin,FaGoogle } from 'react-icons/fa';\r\n\r\nconst ForgetPassword : React.FC = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n      <>\r\n        <ELS />\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n            Forget your password?\r\n            </Typography>\r\n            <br/>\r\n            <Typography component=\"h6\" variant=\"subtitle2\" align=\"center\">\r\n            Don't worry! Just fill in your registered email and we'll send you a link to reset your password.\r\n            </Typography>\r\n            <ForgetPasswordForm />\r\n        </div>\r\n        </Container>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default ForgetPassword;","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\frontauth\\forgetpassword\\ForgetPassword-style.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\form\\auth\\forgetpassword\\ForgetPasswordForm.tsx",["930","931","932","933","934","935","936"],"import React, { ReactDOM ,useContext} from 'react';\r\nimport {FormInputLogin} from '../../../../model/forminput/FormInputAuth'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport {ForgetPasswordFormValidSchema} from './ForgetPasswordFormValidSchema';\r\nimport {useDispatch  } from 'react-redux';\r\nimport {RLogin} from '../../../../view/frontauth/login/redux/LoginAction';\r\nimport useStylesForm from '../../Form-style';\r\nimport {AuthContext} from '../../../../context/AuthContext';\r\n\r\ninterface ForgetPasswordI {\r\n  email: string\r\n}\r\n\r\nconst ForgetPasswordForm : React.FC = () => {\r\n    const authContext = useContext(AuthContext);\r\n    const classes = useStylesForm();\r\n    const dispatch = useDispatch();\r\n    const {register, handleSubmit , errors } = useForm<ForgetPasswordI>({\r\n        resolver: yupResolver(ForgetPasswordFormValidSchema)\r\n    });\r\n    \r\n    const onSubmitForm = (data: ForgetPasswordI) => {\r\n      /*API TO SET UP THE FORGET PASSWORD CODE AND SEND EMAIL */\r\n    };\r\n\r\n   return(\r\n    <form className={classes.form} onSubmit={handleSubmit(onSubmitForm)} noValidate>\r\n    <TextField\r\n      inputRef={register}\r\n      variant=\"outlined\"\r\n      margin=\"normal\"\r\n      required\r\n      fullWidth\r\n      id=\"email\"\r\n      label=\"Email Address\"\r\n      name=\"email\"\r\n      autoComplete=\"email\"\r\n      autoFocus\r\n      className={errors.email? classes.error_outline: undefined}\r\n    />\r\n    {errors.email? <span className={classes.error_message}> {errors.email?.message}  </span> : undefined}\r\n    \r\n    <Button\r\n      type=\"submit\"\r\n      fullWidth\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      className={classes.submit}\r\n    >\r\n      Reset password\r\n    </Button>\r\n  </form>   \r\n   ); \r\n\r\n}\r\n\r\nexport default ForgetPasswordForm","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\form\\auth\\forgetpassword\\ForgetPasswordFormValidSchema.tsx",["937"],"import { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\n\r\n//<p className={errors.email? classes.error_message:undefined}> {errors.email?.message} </p>\r\n\r\nexport const ForgetPasswordFormValidSchema = yup.object().shape({\r\n    email: yup.string().required()\r\n  });\r\n\r\nexport const ForgetPasswordRecoverFormValidSchema = yup.object().shape({\r\n  password: yup.string().required().matches(\r\n    /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\r\n    \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\r\n  ),\r\n  repassword : yup.string().required().oneOf([yup.ref('password'), null], 'Passwords must match')\r\n});","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\frontauth\\forgetpassword\\ForgetPasswordRecover.tsx",["938","939"],"import React, { ReactDOM, useEffect } from 'react';\r\nimport useStyles from './ForgetPassword-style'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport ForgetPasswordRecoverForm from '../../../utility/form/auth/forgetpassword/ForgetPasswordForm'\r\nimport {ELS} from './../../modal';\r\n\r\n\r\nconst ForgetPassword : React.FC = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n      <>\r\n        <ELS />\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n                Recover Password\r\n            </Typography>\r\n            <br/>\r\n            <Typography component=\"h6\" variant=\"subtitle2\" align=\"center\">\r\n                Key in your new password.\r\n            </Typography>\r\n            <ForgetPasswordRecoverForm />\r\n        </div>\r\n        </Container>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default ForgetPassword;","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\connectionMetrics\\ConnectionMetrics.tsx",["940","941","942","943","944"],"import React,{useEffect} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport makeStyle from '../Connection-style';\r\nimport clsx from 'clsx';\r\nimport {DashboardGrid} from '../../dashboard/DashboardGrid';\r\nimport {ConnectionMetricsSection} from './ConnectionMetricsSection';\r\nexport const ConnectionMetrics  :React.FC = () => {\r\n    const title=\"\"\r\n\r\n    return(\r\n        <>\r\n            <DashboardGrid title={title} prop={ <ConnectionMetricsSection /> }/>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\connectionMetrics\\ConnectionMetricsSection.tsx",["945","946","947","948","949","950","951","952","953","954"],"import React, {useEffect , useState ,useContext, MouseEvent} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport makeStyle from '../Connection-style';\r\nimport clsx from 'clsx';\r\nimport {ConnectionMetricsSectionList} from './ConnectionMetricsSectionList';\r\nimport {DashboardGrid} from '../../dashboard/DashboardGrid';\r\nimport {FetchContext} from '../../../../context/FetchContext';\r\nimport {useHistory , useParams, useLocation} from 'react-router-dom'\r\nimport {RootState} from './../../../../reducer';\r\nimport {useDispatch,useSelector  } from 'react-redux';\r\nimport {PAGE_STATUS_LOADING, PAGE_STATUS_SUCCESS, PAGE_STATUS_ERROR} from '../../../modal/Loadingpage/redux/LoadingConstant'\r\nimport {CONNECTION_CONNECTING,CONNECTION_RECOVER, CONNECTION_SERVICE_SUCCESSFUL, CONNECTION_SERVICE_FAIL, CONNECTION_METRICS_SUCCESSFUL,CONNECTION_METRICS_FAIL} from './redux/ConnectionMetricsConstant';\r\nimport {metricsDisplayI ,metricsI} from '../ConnectionInterface';\r\nimport ConnectionMetricsDialogCam from './ConnectionMetricsDialogCam/ConnectionMetricsDialogCam';\r\nimport ConnectionMetricsDialogCamConnection from './ConnectionMetricsDialogCamConnection/ConnectionMetricsDialogCamConnection';\r\nimport Icon from '../../../../img/brand';\r\nimport { Location } from \"history\";\r\nimport { useSnackbar } from 'notistack';\r\nimport Box from '@material-ui/core/Box';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\ninterface Params {\r\n    platformid: string,\r\n    serviceId: string\r\n}\r\ninterface Locations {\r\n    authenticationId: string\r\n}\r\n\r\nvar myWindow: any;\r\n\r\nfunction arraysEqual(a : Array<number>, b:Array<number>) {\r\n    if (a === b) return true;\r\n    if (a == null || b == null) return false;\r\n    if (a.length !== b.length) return false;\r\n  \r\n    // If you don't care about the order of the elements inside\r\n    // the array, you should sort both arrays here.\r\n    // Please note that calling sort on an array will modify that array.\r\n    // you might want to clone your array first.\r\n  \r\n    for (var i = 0; i < a.length; ++i) {\r\n      if (a[i] !== b[i]) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\nexport const ConnectionMetricsSection:React.FC = () => {\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const {state} = useLocation<Location>();\r\n    //const state = null\r\n    const {platformid,serviceId}  = useParams<Params>();\r\n    const classes = makeStyle();\r\n    const {authAxios} = useContext(FetchContext);\r\n    const dispatch = useDispatch();\r\n    const MetricsDetail = useSelector((state:RootState)=>state.metrics);\r\n    //recall the onsubmit once they connect to the service\r\n    const [recall, setRecall]= useState(false);\r\n    const onhandleRecall = () => {\r\n        setRecall(true);\r\n    }\r\n    //obtaing all metrics information\r\n    const [metrics, setMetrics] = useState<metricsDisplayI>({\r\n        service_name:'',\r\n        metrics:[],\r\n        application: {\r\n            name: '',\r\n            auth_method: '',\r\n            direct_url_component: '',\r\n            imglocation: ''\r\n        }\r\n    });\r\n    //for user to check the detail of the metrics\r\n    const [dialog, setDialog] = useState(false);\r\n    //setting dialog content\r\n    const [dialogMetrics, setDialogMetrics] = useState({\r\n        metrics: '',\r\n        detail: ''\r\n    });\r\n    //selected metrics\r\n    const [selectedMetrics,setSelectedMetrics] = useState<Array<number>>([])\r\n    //connection\r\n    const [connection,setConnection] = useState(false);\r\n\r\n    const onhandleSetConnectionOpen = () => {\r\n        setConnection(true);\r\n    }\r\n\r\n    const onhandleSetConnectionClose = () => {\r\n        setConnection(false);\r\n    }\r\n\r\n    const onhandleDialogMetrics = (e:MouseEvent,metrics : string,detail : string) => {\r\n        e.stopPropagation();\r\n        setDialog(true);\r\n        setDialogMetrics({\r\n            metrics: metrics,\r\n            detail: detail            \r\n        })\r\n    }\r\n\r\n    const onhandleSelectedMetrics = (selected: boolean, metricsId : number) => {\r\n            if(selected){\r\n                setSelectedMetrics([...selectedMetrics,metricsId])\r\n            }else{\r\n                setSelectedMetrics(selectedMetrics.filter(item => item !== metricsId));\r\n            }\r\n    }\r\n\r\n    const onhandleDialogClose = () => {\r\n        setDialog(false);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        alert('Let Start Again :D');\r\n        dispatch({type:PAGE_STATUS_LOADING});\r\n        dispatch({type:CONNECTION_RECOVER});\r\n        const category = async() => {\r\n            try{\r\n                //state\r\n                const {data} = await authAxios.post(`platform/${platformid}/myconnection/service/${serviceId}`,{\r\n                    \"ap_id\": state\r\n                })\r\n                setMetrics(data.data);\r\n                dispatch({type:CONNECTION_CONNECTING,payload:{app:data.data.service_name}});\r\n                if(state){\r\n                    data.data.metrics.map((item:any)=>{\r\n                        item.authenticationMetrics.length>0 && selectedMetrics.push(item.id)\r\n                     })\r\n                     setSelectedMetrics([ ...new Set(selectedMetrics)])\r\n                     selectedMetrics.sort((a,b)=>a-b)\r\n                     dispatch({type:CONNECTION_SERVICE_SUCCESSFUL,payload:{service:state}});\r\n                     dispatch({type:CONNECTION_METRICS_SUCCESSFUL,payload:selectedMetrics})\r\n                }\r\n                ;\r\n                dispatch({type: PAGE_STATUS_SUCCESS});;\r\n            }  \r\n            catch(error){\r\n                const payload = {message: error.message || error,\r\n                    explaination: ''}\r\n                dispatch({type:PAGE_STATUS_ERROR, payload: payload});\r\n            }\r\n        }\r\n        category()\r\n    },[authAxios])\r\n\r\n    useEffect(()=>{\r\n        console.log('Check this out!!!!!')\r\n        console.log(selectedMetrics)\r\n    },[selectedMetrics])\r\n\r\n    const onSubmit = () => {\r\n        alert(selectedMetrics)\r\n        dispatch({type:PAGE_STATUS_LOADING});\r\n        const submit = async() => {\r\n            try{\r\n                if(selectedMetrics.length === 0){\r\n                    throw \"Select at least one metrics\";\r\n                }\r\n                selectedMetrics.sort((a,b)=>a-b)\r\n                if(!MetricsDetail.service){\r\n                    //open the dialog for app connection\r\n                    onhandleSetConnectionOpen();\r\n                }else if(!arraysEqual(selectedMetrics,MetricsDetail.metrics)){\r\n                    //remove duplicaiton in the list to avoid mistake\r\n                    //const RemovedDuplicationMetrics = [ ...new Set(selectedMetrics) ]\r\n                    //RemovedDuplicationMetrics.sort((a,b)=>a-b)\r\n                    alert(selectedMetrics)\r\n                    await dispatch({type:CONNECTION_METRICS_SUCCESSFUL,payload:selectedMetrics});\r\n                    \r\n                    //have to use selectedMetrics instead of MetricsDetail.selectedMetrics as dispatch is not finished.\r\n                    console.log('These are the servsicess '+MetricsDetail.metrics);\r\n                        await authAxios.post(`platform/${platformid}/myconnection/metrics`,{\r\n                            \"metrics\": selectedMetrics,\r\n                            \"service\": MetricsDetail.service\r\n                        })\r\n                }\r\n                enqueueSnackbar('Your metrics is saved.',{variant: 'success'});\r\n                dispatch({type: PAGE_STATUS_SUCCESS});\r\n            }\r\n            catch(error){\r\n                const payload = {message: error.message || error,\r\n                    explaination: ''}\r\n                dispatch({type:PAGE_STATUS_ERROR, payload: payload});\r\n            }\r\n        }\r\n        submit()\r\n    }\r\n\r\n    //used for those who havent conenct to the applicaiton. Once settle down \r\n    useEffect(()=>{\r\n        if(recall){\r\n            onSubmit();\r\n        }\r\n    },[recall])\r\n\r\n//<Button variant=\"outlined\"  className={classes.grid} style={{color:'purple',borderColor:'purple'}}> Reset </Button>\r\n    const scopeOption = metrics.metrics.map((item : metricsI)=>{\r\n       return(\r\n        <ConnectionMetricsSectionList metricsData={item} servicename={metrics.service_name} imglocation={metrics.application.imglocation} onhandleSelectedMetrics={onhandleSelectedMetrics} onhandleDialogMetrics={onhandleDialogMetrics}/>\r\n       )\r\n    })\r\n//  <ConnectionSectionItem />\r\n    return(  \r\n        <Grid item xs={12} > \r\n            {!state && connection && <ConnectionMetricsDialogCamConnection platformid={platformid} sid={serviceId} onhandleRecall={onhandleRecall} myWindow={myWindow} servicename={metrics.service_name} imglocation={metrics.application.imglocation} open={connection} onClose={onhandleSetConnectionClose} direct_url_component={metrics.application.direct_url_component}/>}\r\n            <ConnectionMetricsDialogCam open={dialog} onClose={onhandleDialogClose} detail={dialogMetrics} servicename={metrics.service_name}/>              \r\n            <Paper className={classes.paper} elevation={0}>\r\n\r\n                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" >\r\n                    <span className={clsx(classes.subtopictitle,classes.paperPadding,classes.position)}>\r\n                        <Icon name={metrics.application.imglocation} />\r\n                        <span className={classes.grid}>\r\n                         {metrics.service_name} \r\n                        </span>\r\n                        <Chip label=\"Beta\" variant=\"outlined\" className={classes.buttonDetail} size=\"small\" style={{backgroundColor:'#AAAAAA'}}/>\r\n                        <Chip label={state? \"Connected\" : \"Not Connected\"} className={classes.buttonDetail} variant=\"outlined\" size=\"small\" style={{backgroundColor:state?'green':'red', color:'white'}}/> \r\n                    </span>\r\n                </Grid>\r\n                <Grid container direction=\"row\" justify=\"flex-start\" className={clsx(classes.subtopictitle,classes.paperPadding)}>\r\n                   Metrics :\r\n                </Grid>\r\n                <Grid container direction=\"row\" justify=\"flex-start\" className={classes.buttonMargin}>\r\n                    {scopeOption}\r\n                </Grid>\r\n                <Grid container direction=\"row\" justify=\"center\" className={classes.buttonMargin}>\r\n                    <Button onClick={onSubmit} variant=\"contained\" className={classes.grid} style={{backgroundColor:'#03AC13',borderColor:'green'}}> Select [{selectedMetrics.length}] </Button> \r\n                </Grid>                \r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\connectionMetrics\\ConnectionMetricsSectionList.tsx",["955","956","957"],"import React, {useEffect , useState ,useContext ,MouseEvent} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport makeStyle from '../Connection-style';\r\nimport {FetchContext} from '../../../../context/FetchContext';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Icon from '../../../../img/brand';\r\nimport clsx from 'clsx';\r\nimport { IconButton } from '@material-ui/core';\r\nimport {metricsI} from '../ConnectionInterface';\r\n\r\ninterface MSL {\r\n    servicename: string,\r\n    imglocation: string,\r\n    metricsData: metricsI,\r\n    onhandleDialogMetrics : (e:MouseEvent, metrics:string, detail: string)=>void,\r\n    onhandleSelectedMetrics : (selected: boolean, metricsId : number)=>void,\r\n}\r\n\r\nexport const ConnectionMetricsSectionList:React.FC<MSL> = ({servicename,imglocation,metricsData, onhandleDialogMetrics,onhandleSelectedMetrics}) => {\r\n    const classes = makeStyle();\r\n    const {authAxios} = useContext(FetchContext);\r\n    //let state;\r\n    //metricsData.authenticationMetrics[0] ? state = false : state = false;\r\n    let selectBoolean;\r\n    metricsData.authenticationMetrics.length>0 ? selectBoolean = true : selectBoolean = false\r\n    const [select, setSelect] = useState(selectBoolean);\r\n\r\n    const onSubmit = () => {\r\n        setSelect(!select)\r\n        onhandleSelectedMetrics(!select,metricsData.id)\r\n\r\n    }\r\n\r\n    \r\n    const metrics = metricsData.name;\r\n    const detail = metricsData.detail;\r\n    const onhandleDialog = (e: MouseEvent) => {\r\n        onhandleDialogMetrics(e,metrics,detail);\r\n    }\r\n    \r\n\r\n//   <Icon name='mailchimp' size='small' />\r\n    return(  \r\n    <Grid item xs={4} md={2} lg={1} > \r\n        <Paper className={clsx(classes.paper,classes.paperMargin)} elevation={0}>\r\n            <Button onClick={onSubmit} variant=\"outlined\" className={clsx(classes.buttonWidth,classes.buttonHeight,classes.buttonPadding,classes.buttonMetrics, select && classes.buttonMetricsActive)}>\r\n                <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"flex-start\" className={classes.buttonGrid} >\r\n                    <Grid item xs className={clsx(classes.buttonApp,classes.buttonIcon)}>\r\n                        <Tooltip title={servicename}>\r\n                            <div>\r\n                                <Icon name={imglocation} size='small' />\r\n                            </div>\r\n                        </Tooltip>\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                        <IconButton onClick={onhandleDialog} className={clsx(classes.buttonMark,classes.buttonIcon,classes.buttonMarkDetail)} >\r\n                            <HelpIcon fontSize='small' />\r\n                        </IconButton>\r\n                    </Grid>\r\n                    <Grid item xs className={classes.serviceList}>\r\n                        {metricsData.name }\r\n                    </Grid>\r\n                    <Grid item xs >\r\n                        {select && <CheckCircleIcon fontSize='small' className={clsx(classes.buttonCorrect,classes.buttonIcon)}/> }\r\n                    </Grid>\r\n                </Grid>\r\n            </Button > \r\n        </Paper>\r\n    </Grid>\r\n    )\r\n}\r\n","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\connectionMetrics\\ConnectionMetricsDialogCam\\ConnectionMetricsDialogCam.tsx",["958","959"],"import React , {useState,MouseEvent} from 'react';\r\nimport DialogCom from '../../../../../utility/dialog/DialogCom';\r\nimport ConnectionMetricsDialogCamTitle from './ConnectionMetricsDialogCamTitle';\r\nimport ConnectionMetricsDialogCamContent from './ConnectionMetricsDialogCamContent';\r\nimport ConnectionMetricsDialogCamAction from './ConnectionMetricsDialogCamAction';\r\n\r\ninterface metricsDetail {\r\n    metrics: string,\r\n    detail: string\r\n}\r\n\r\ninterface Cam {\r\n    servicename:string,\r\n    detail: metricsDetail,\r\n    open: boolean,\r\n    onClose : ()=>void\r\n}\r\n\r\nconst ConnectionMetricsDialogCam: React.FC<Cam>= ({servicename,open,onClose, detail}) => {\r\n\r\n    const size = {\r\n        width: true,\r\n    }\r\n\r\n    const data = {\r\n        title: <ConnectionMetricsDialogCamTitle name={servicename} />,\r\n        content: <ConnectionMetricsDialogCamContent metrics={detail.metrics} detail={detail.detail}/>,\r\n        action: <ConnectionMetricsDialogCamAction/>\r\n    }\r\n\r\n    const dialogStatus = {\r\n        open : open ,\r\n        onClose : onClose\r\n    }\r\n\r\n    const dialogSetting = {\r\n        onCloseSet : true\r\n    }\r\n    return (\r\n        <div> \r\n            <DialogCom data={data} dialogStatus={dialogStatus} dialogSetting = {dialogSetting} size={size}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default  ConnectionMetricsDialogCam\r\n","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\connectionMetrics\\ConnectionMetricsDialogCam\\ConnectionMetricsDialogCamAction.tsx",["960"],"import React , {useState} from 'react';\r\n\r\nconst ConnectionMetricsDialogCamAction: React.FC= () => {\r\n\r\n    return (\r\n        <div> \r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default  ConnectionMetricsDialogCamAction","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\connectionMetrics\\ConnectionMetricsDialogCam\\ConnectionMetricsDialogCamContent.tsx",["961","962","963","964","965"],"import React , {useState} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Typography, Divider } from '@material-ui/core';\r\nimport makeStyle from '../../Connection-style';\r\nimport {AiOutlineBarChart} from 'react-icons/ai';\r\nimport {GiPieChart} from 'react-icons/gi';\r\nimport {BiPieChartAlt} from 'react-icons/bi';\r\nimport {FaRegChartBar} from 'react-icons/fa';\r\nimport Box from '@material-ui/core/Box';\r\n\r\ninterface Content{\r\n   metrics: string,\r\n   detail: string \r\n}\r\n\r\nconst ConnectionMetricsDialogCamContent: React.FC<Content>= ({metrics,detail}) => {\r\n    const classes = makeStyle();\r\n    return (\r\n        <div> \r\n            \r\n            <Grid container spacing={0} direction=\"column\"   justify=\"flex-start\" alignItems=\"flex-start\">\r\n                <Grid item xs >\r\n                <Typography variant=\"h6\" className={classes.dialogContent}> \r\n                    <b>{metrics}</b>\r\n                </Typography>\r\n                </Grid>\r\n                <Grid item xs >\r\n                    <Box component=\"span\" m={0.5}>\r\n                        <AiOutlineBarChart className={classes.chartIcon}/>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs >\r\n                <Typography variant=\"body1\" style={{height:'300px'}} >\r\n                    {detail}\r\n                </Typography>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default  ConnectionMetricsDialogCamContent","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\connectionMetrics\\ConnectionMetricsDialogCam\\ConnectionMetricsDialogCamTitle.tsx",["966"],"import React , {useState} from 'react';\r\nimport { Typography,Divider} from '@material-ui/core';\r\nimport makeStyle from '../../Connection-style';\r\n\r\ninterface title {\r\n    name: string\r\n}\r\n\r\nconst ConnectionMetricsDialogCamTitle: React.FC<title>= ({name}) => {\r\n    const classes = makeStyle();\r\n    return (\r\n        <div> \r\n           <Typography className={classes.dialogTitle}> {name} </Typography>\r\n           <Divider />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default  ConnectionMetricsDialogCamTitle","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\connectionMetrics\\ConnectionMetricsDialogCamConnection\\ConnectionMetricsDialogCamConnection.tsx",["967","968","969"],"import React , {useEffect,useContext} from 'react';\r\nimport DialogCom from '../../../../../utility/dialog/DialogCom';\r\nimport ConnectionMetricsDialogCamConnectionTitle from './ConnectionMetricsDialogCamConnectionTitle';\r\nimport ConnectionMetricsDialogCamConnectionContent from './ConnectionMetricsDialogCamConnectionContent';\r\nimport {windowpopClose,windowpopStatus,windowpopOpen} from '../../../../../windowpop/windowpop'\r\nimport {CONNECTION_SERVICE_SUCCESSFUL} from '../redux/ConnectionMetricsConstant';\r\nimport {useDispatch,useSelector  } from 'react-redux';\r\nimport {RootState} from './../../../../../reducer';\r\nimport {PAGE_STATUS_ERROR} from '../../../../modal/Loadingpage/redux/LoadingConstant'\r\nimport {FetchContext} from '../../../../../context/FetchContext';\r\n\r\ndeclare const window: any;\r\ninterface Cam {\r\n    platformid:string,\r\n    sid: string,\r\n    onhandleRecall:()=>void,\r\n    myWindow: any;\r\n    servicename:string,\r\n    imglocation:string,\r\n    direct_url_component: string,\r\n    open: boolean,\r\n    onClose : ()=>void,\r\n}\r\n\r\n\r\nconst ConnectionMetricsDialogCamConnection: React.FC<Cam>= ({platformid,sid,onhandleRecall,myWindow,servicename,imglocation,open,onClose,direct_url_component}) => {\r\n    const MetricsDetail = useSelector((state:RootState)=>state.metrics);\r\n    const dispatch = useDispatch();\r\n    const {authAxios} = useContext(FetchContext);\r\n\r\n    //'http://localhost:3000/auth/app/complete/success?aid=Mailchimp&uid=1'\r\n    //User can click the button to trigger a popup window to connect to their application.\r\n    const onhandleWindowpopOpen = () => {\r\n        myWindow = windowpopOpen(myWindow,`${direct_url_component}id=${sid}`);\r\n        window.DispatchService = (aid: string , uid : string) => {\r\n            const serviceConnection = async() => {\r\n                try{\r\n                    if(aid !== MetricsDetail.app){\r\n                        throw \"There is something wrong, Please try again.\"\r\n                    }\r\n                    const {data} = await authAxios.post(`platform/${platformid}/myconnection/apid/`,{\r\n                        \"apid\": uid\r\n                    })\r\n                    data.Check && dispatch({type:CONNECTION_SERVICE_SUCCESSFUL,payload:{service:uid}})\r\n                    setTimeout(()=>windowpopClose(myWindow),4000);                   \r\n                }catch(error){\r\n                    const payload = {message: error.message || error,\r\n                        explaination: ''}\r\n                    dispatch({type:PAGE_STATUS_ERROR, payload: payload});\r\n                }\r\n            }\r\n            serviceConnection()\r\n        }\r\n    }\r\n\r\n    const onWindowClose = () => {\r\n        windowpopClose(myWindow);\r\n        onClose();\r\n        \r\n    }\r\n\r\n    const size = {\r\n        width: true,\r\n    }\r\n\r\n    const data = {\r\n        title: <ConnectionMetricsDialogCamConnectionTitle servicename={servicename}/>,\r\n        content: <ConnectionMetricsDialogCamConnectionContent onhandleRecall={onhandleRecall} onWindowClose={onWindowClose} windowpopOpen={onhandleWindowpopOpen} servicename={servicename} imglocation={imglocation} direct_url_component={direct_url_component}/>,\r\n        action: <> </>\r\n    }\r\n\r\n    const dialogStatus = {\r\n        open : open ,\r\n        onClose : onWindowClose\r\n    }\r\n\r\n    const dialogSetting = {\r\n        onCloseSet : true\r\n    }\r\n    return (\r\n        <div> \r\n            <DialogCom data={data} dialogStatus={dialogStatus} dialogSetting = {dialogSetting} size={size}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default  ConnectionMetricsDialogCamConnection\r\n","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\connectionMetrics\\ConnectionMetricsDialogCamConnection\\ConnectionMetricsDialogCamConnectionTitle.tsx",["970","971","972","973"],"import React , {useState} from 'react';\r\nimport { Typography,Divider} from '@material-ui/core';\r\nimport makeStyle from '../../Connection-style';\r\n\r\ninterface title {\r\n    servicename:string\r\n}\r\n\r\nconst ConnectionMetricsDialogCamTitle: React.FC<title>= ({servicename}) => {\r\n    const classes = makeStyle();\r\n    return (\r\n        <div style={{height:'30px'}}> \r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default  ConnectionMetricsDialogCamTitle","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\connectionMetrics\\ConnectionMetricsDialogCamConnection\\ConnectionMetricsDialogCamConnectionContent.tsx",["974","975","976","977"],"import React , {useEffect, useState} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Typography, Divider, Button } from '@material-ui/core';\r\nimport makeStyle from '../../Connection-style';\r\nimport Icon from '../../../../../img/brand';\r\nimport {useDispatch,useSelector  } from 'react-redux';\r\nimport {RootState} from './../../../../../reducer';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n//import {windowpopOpen} from '../../../../../windowpop/windowpop'\r\ninterface Content{\r\n    onhandleRecall:()=>void,\r\n    onWindowClose:()=>void,\r\n    servicename:string,\r\n    imglocation:string,\r\n    direct_url_component:string,\r\n    windowpopOpen: ()=>void\r\n    \r\n}\r\n\r\nconst ConnectionMetricsDialogCamConnectionContent: React.FC<Content>= ({onhandleRecall,onWindowClose,servicename,imglocation,direct_url_component,windowpopOpen}) => {\r\n    const MetricsDetail = useSelector((state:RootState)=>state.metrics);\r\n    const classes = makeStyle();\r\n    const dispatch = useDispatch();\r\n    const [change,setChange] = useState(false)\r\n    useEffect(()=>{\r\n        if(MetricsDetail.service){\r\n            setChange(true)\r\n            //recall the onsubmit function to save the selectedMetrics\r\n            onhandleRecall();\r\n            //close the dialog\r\n            setTimeout(()=>onWindowClose(),5000);\r\n        }\r\n    },[MetricsDetail.service])\r\n    const onhandleConnection = () => {\r\n        windowpopOpen()\r\n    }\r\n\r\n    const serviceConnect =  <>\r\n                            <Grid item xs>\r\n                            <Typography variant=\"h3\" >\r\n                                <Icon name={imglocation} /> {servicename}\r\n                            </Typography>         \r\n                            <Typography variant=\"h6\">\r\n                                Please connect to <b>{servicename}</b> before getting the metrics. \r\n                            </Typography>                      \r\n                            </Grid>\r\n                            <Grid item xs >\r\n                                <Button onClick={()=>onhandleConnection()} variant=\"contained\" style={{backgroundColor:'green',color:'white'}}> Connect to {servicename}</Button>\r\n                            </Grid> \r\n                            </>\r\n    const serviceLoading = <> <CircularProgress /> <br/> Loading... </>\r\n    return (\r\n        <div> \r\n            <Grid container spacing={0} direction=\"column\"   justify=\"center\" alignItems=\"center\" style={{height:'300px', color:'black',textAlign:'center'}}>\r\n                {!change && serviceConnect}\r\n                {change && serviceLoading}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default  ConnectionMetricsDialogCamConnectionContent","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\connectionMetrics\\redux\\ConnectionMetricsReducer.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\connection\\connectionMetrics\\redux\\ConnectionMetricsConstant.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\visualization\\template\\TemplateBox.tsx",["978","979","980"],"import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {useStyles} from './TemplateBox-style';\r\nimport OpenWithIcon from '@material-ui/icons/OpenWith';\r\nimport clsx from 'clsx';\r\nimport { Typography, Button ,IconButton} from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport {Scoreline} from './../scoreline/Scoreline';\r\nimport {SortableHandle} from 'react-sortable-hoc';\r\ninterface TemplateBoxI{\r\n    itemId?:string,\r\n    body: React.ElementType\r\n}\r\nconst TemplateBox : React.FC<TemplateBoxI> = ({itemId,body}) => {\r\n    //draghandle\r\n    const DragHandle = SortableHandle(()=>(\r\n        <IconButton className={clsx(classes.position,classes.topleft,classes.button)}  >\r\n            <OpenWithIcon/>   \r\n        </IconButton>\r\n    ))\r\n    //<Scoreline chartData={chartData} Date={minmaxDate} Y={Y}/>\r\n    const chartData = [\r\n        { x: new Date(2016,5,1), y: 100  },\r\n        { x: new  Date(2016,5,2), y: 150  },\r\n        { x: new Date(2016,5,3), y: 152  },\r\n        { x: new  Date(2016,5,4), y: 125  },\r\n        { x: new Date(2016,5,5), y: 175  },\r\n        { x: new  Date(2016,5,6), y: 200  },\r\n        { x: new  Date(2016,5,7), y: 300  },\r\n        ]\r\n    const  minmaxDate = {\r\n            minDate : new Date(2016,5,1),\r\n            maxDate : new  Date(2016,5,7),\r\n        }\r\n    const  Y = {\r\n            minY : 100,\r\n            maxY : 300\r\n        }\r\n    const bodyT = <body />\r\n    const classes = useStyles();\r\n    const ButtonChoose =  <Button variant=\"contained\" className={classes.subtitleButton} >\r\n                        <span className={classes.subtitleButtontext}>\r\n                            All Automation\r\n                        </span>\r\n                        <span>\r\n                            <ExpandMoreIcon fontSize=\"small\" className={classes.subtitleButtonicon}/>\r\n                        </span>\r\n                    </Button>  \r\n    return  (\r\n        <div >\r\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" className={classes.margin} >\r\n                <Paper className={clsx(classes.paper,classes.relative)} >   \r\n                    <Grid item xs={12} className={clsx(classes.size,classes.padding)}>\r\n                        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" className={classes.relative}>\r\n                            <Grid item xs={2} >\r\n                                <DragHandle />\r\n                            </Grid>\r\n                            <Grid item xs={8} >\r\n                                <Typography align='center' className={classes.title}>\r\n                                    Click Rate {itemId}\r\n                                </Typography>\r\n                                <Typography align='center' className={classes.subtitle} >\r\n                                    {ButtonChoose}\r\n                                </Typography>   \r\n                            </Grid>\r\n                            <Grid item xs={2} >\r\n                                <IconButton className={clsx(classes.position,classes.topright,classes.button)}>\r\n                                    <MoreVertIcon />\r\n                                </IconButton>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} >\r\n                        <Paper className={clsx(classes.bottom)} >\r\n                            <Scoreline chartData={chartData} />\r\n                        </Paper>\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(TemplateBox)","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\visualization\\template\\TemplateBox-style.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\visualization\\template\\TemplateBoxChart.tsx",["981","982","983","984","985","986","987","988"],"C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\visualization\\template\\TemplateDate.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\visualization\\template\\TemplateMinMax.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\visualization\\application\\Application.tsx",["989"],"import React,{useEffect} from 'react';\r\nimport {DashboardGrid} from '../../dashboard/DashboardGrid';\r\nimport {ApplicationSection} from './ApplicationSection';\r\n\r\nexport const Application  :React.FC = () => {\r\n    const title=\"Application\"\r\n\r\n    return(\r\n        <>\r\n            <DashboardGrid title={title} prop={<ApplicationSection /> }/>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\visualization\\application\\ApplicationSection.tsx",["990","991","992"],"import React,{useEffect ,useState ,useCallback} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport makeStyle from './Application-style';\r\nimport clsx from 'clsx';\r\nimport TemplateBox from './../../../../utility/visualization/template/TemplateBox';\r\nimport {SortableContainer,SortableElement,SortableHandle} from 'react-sortable-hoc';\r\nimport {Scoreline} from './../../../../utility/visualization/scoreline/Scoreline';\r\nimport arrayMove from 'array-move';\r\n\r\nexport const ApplicationSection  :React.FC = () => {\r\n\r\n    /*  <Grid item xs={12} sm={6} md={4}  lg={3} >\r\n                    <TemplateBox />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3} >\r\n                    <TemplateBox />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3} >\r\n                    <TemplateBox />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}md={4} lg={3} >\r\n                    <TemplateBox />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4}  lg={3} >\r\n                    <TemplateBox />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3} >\r\n                    <TemplateBox />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4} lg={3} >\r\n                    <TemplateBox />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}md={4} lg={3} >\r\n                    <TemplateBox />\r\n                    </Grid>*/\r\n                    /*                        {\r\n                          id: 2,\r\n                          position:2,\r\n                          component: Scoreline \r\n                        },\r\n                        {\r\n                          id: 3,\r\n                          position:3,\r\n                          component: Scoreline \r\n                        },\r\n                        {\r\n                          id: 4,\r\n                          position:4,\r\n                          component: Scoreline \r\n                        },\r\n                        {\r\n                          id: 5,\r\n                          position:5,\r\n                          component: Scoreline \r\n                        },\r\n                        {\r\n                          id: 6,\r\n                          position:6,\r\n                          component: Scoreline \r\n                        },\r\n                        {\r\n                          id: 7,\r\n                          position:7,\r\n                          component: Scoreline \r\n                        },\r\n                        {\r\n                          id: 8,\r\n                          position:8,\r\n                          component: Scoreline \r\n                        },\r\n                        {\r\n                          id: 9,\r\n                          position:9,\r\n                          component:Scoreline \r\n                        },\r\n                        {\r\n                          id: 10,\r\n                          position:10,\r\n                          component: Scoreline \r\n                        }*/\r\n                    const finalSpaceCharacters = [\r\n                        {\r\n                          id: 1,\r\n                          position:1,\r\n                          component: Scoreline \r\n                        },\r\n\r\n                      ]\r\n    const [listData, setListData] = useState(finalSpaceCharacters);\r\n    const classes = makeStyle();\r\n\r\n    const SortableItem = SortableElement(({ value, index }:any) => (\r\n        <Grid item xs={12} sm={6}md={4} lg={3} >\r\n            <TemplateBox itemId={value.id} body={value.component} />   \r\n        </Grid>\r\n      ));\r\n    \r\n      const SortableList = SortableContainer(({ items }:any) => {\r\n        return (\r\n        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n            {items\r\n              .sort((a:any, b:any) => a.position - b.position)\r\n              .map((value:any, index:any) => (\r\n                <SortableItem value={value} index={index} key={value.id} />\r\n              ))}\r\n          </Grid>\r\n        );\r\n      });\r\n    \r\n      const onSortEnd = ({ oldIndex, newIndex }:any) => {\r\n        let arr = arrayMove(listData, oldIndex, newIndex);\r\n        console.log('onSortEnd')\r\n        for (let i = 0; i < arr.length; i++) {\r\n          arr[i].position = i;\r\n        }\r\n        setListData(arr);\r\n      };\r\n    return(\r\n        <>\r\n        <Grid item xs={12} >               \r\n            <Paper className={clsx(classes.paper,classes.paperPadding)} elevation={0} >\r\n                <SortableList items={listData} onSortEnd={onSortEnd} axis=\"xy\" useDragHandle/>\r\n            </Paper>\r\n        </Grid>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\exb\\bsupkit\\frontend\\src\\view\\feature\\visualization\\application\\Application-style.tsx",["993"],"import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n  grid:{\r\n    margin:'5px',\r\n  },\r\n  paper:{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n  },\r\n  paperPadding:{\r\n    padding: theme.spacing(3)\r\n  },\r\n  paperMargin:{\r\n    margin: theme.spacing(1),\r\n  },\r\n  paperRelative:{\r\n    position:'relative',\r\n  },\r\n  paperAbsolute:{\r\n    position:'absolute'\r\n  },\r\n  papertitle:{\r\n    fontSize:'20px',\r\n  },\r\n  paperBorder:{\r\n    borderColor:'green'\r\n  },\r\n  item:{\r\n      margin: 'auto',\r\n      height:\"70px\",\r\n  },\r\n  icon:{\r\n    margin:'auto',\r\n  },\r\n  appdetail:{\r\n      height: '100%'\r\n  },\r\n  appn:{\r\n      fontWeight:'bold',\r\n      fontSize:'17px'\r\n  },\r\n  appd:{\r\n    fontSize:'12px',\r\n    color:'grey'   \r\n  },\r\n  appstatus:{\r\n      paddingTop:'12px'\r\n  },\r\n  appstatustext:{\r\n      fontSize:'10px',\r\n      fontWeight:'bold'\r\n  },\r\n  buttonWidth:{\r\n    backgroundColor: 'transparent',\r\n    width:'100%'\r\n  },\r\n  buttonMargin:{\r\n    marginTop:'10px',\r\n    marginBottom:'30px'\r\n  },\r\n  buttonDetail: {\r\n    fontSize:'10px',\r\n    margin: theme.spacing(0.2)\r\n  },\r\n  buttonHeight:{\r\n    height:'100px'\r\n  },\r\n  buttonPadding: {\r\n    position:'relative',\r\n    padding: theme.spacing(0.5)\r\n  },\r\n  buttonGrid:{\r\n    textAlign:'left',\r\n  },\r\n  buttonIcon:{\r\n    margin:theme.spacing(0.5),\r\n    position:'absolute',\r\n  },\r\n  buttonApp:{\r\n    top:'0',\r\n    left:'0',    \r\n  },\r\n  buttonMetrics:{\r\n    '&:hover $buttonMark':{\r\n      display: 'inline',\r\n    }\r\n  },\r\n  buttonMetricsActive:{\r\n    borderWidth:'medium',\r\n    borderColor:'green'\r\n  },\r\n  buttonMark:{\r\n    backgroundColor:'transparent',\r\n    display:'none',\r\n    color:'grey',\r\n    top:'0',\r\n    right:'0',\r\n    '&:hover':{\r\n      color:'orange',\r\n    }\r\n  },\r\n  buttonMarkDetail:{\r\n    padding: 0 ,\r\n    backgroundColor: 'transparent' \r\n  },\r\n  buttonCorrect:{\r\n    color:'green',\r\n    bottom:'0',\r\n    right:'0',\r\n  },\r\n  serviceList:{\r\n    lineHeight: 'normal',\r\n    fontSize:'12px',\r\n    fontWeight:'bold',\r\n    letterSpacing:'0px',\r\n    textTransform:'none',\r\n  },\r\n  dialogTitle:{\r\n    marginBottom: theme.spacing(1)\r\n  },\r\n  dialogContent:{\r\n    color:'black',\r\n    fontWeight:'bold',\r\n  },\r\n  chartIcon:{\r\n    color:'white',\r\n    backgroundColor:'purple',\r\n    borderRadius:'4px'\r\n  },\r\n  connectionStatus:{\r\n    fontSize:'10px',\r\n    paddingLeft: theme.spacing(1.5),\r\n    paddingRight: theme.spacing(1.5),\r\n    borderTopRightRadius:'2px',\r\n    borderBottomRightRadius:'2px',\r\n    backgroundColor:'green',\r\n    color:'white'\r\n  }\r\n\r\n\r\n\r\n  }));\r\n\r\nexport default useStyles","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\visualization\\scoreline\\Scoreline.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\visualization\\line\\Line.tsx",["994"],"import React from 'react';\r\nimport {LineChart,ScorelineI} from './LineChart';\r\nimport {useStyles} from './../template/TemplateBox-style';\r\nconst Line : React.FC<ScorelineI> = ({chartData}) => {\r\n    const classes = useStyles();\r\n    return(\r\n        <>\r\n            <LineChart chartData={chartData}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Line","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\visualization\\line\\LineFlyout.tsx",[],"C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\visualization\\score\\Score.tsx",["995","996"],"import React from 'react';\r\nimport {useStyles} from './../template/TemplateBox-style';\r\nimport clsx from 'clsx';\r\nimport {ScoreChart} from './ScoreChart';\r\n\r\n//to have customized classes\r\nconst Score : React.FC = () => {\r\n    const classes = useStyles();\r\n    return(\r\n        <>\r\n            <ScoreChart />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Score","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\visualization\\score\\ScoreChart.tsx",["997"],"import React from 'react';\r\nimport {useStyles} from './../template/TemplateBox-style';\r\nimport clsx from 'clsx';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\nexport const ScoreChart : React.FC = () => {\r\n    const classes = useStyles();\r\n    return(\r\n        <>\r\n            <span className={classes.figure}>\r\n              230 <span className={classes.figureUnit}> c/p </span>\r\n            </span>\r\n            <div className={clsx(classes.figurePercent,classes.green)}>\r\n              <span ><ArrowDropUpIcon className={clsx(classes.icon)}/> </span>\r\n              <span >23% (+2450)</span>\r\n            </div>\r\n        </>\r\n    )\r\n}","C:\\Users\\exb\\bsupkit\\frontend\\src\\utility\\visualization\\line\\LineChart.tsx",["998","999"],"import React from 'react';\r\nimport { VictoryLine ,VictoryTooltip ,VictoryChart,VictoryVoronoiContainer,VictoryContainer,VictoryArea, VictoryAxis ,VictoryLabel} from 'victory';\r\nimport {LineFlyout,sansSerif} from './LineFlyout';\r\nimport {findMinMaxY, findMinMaxDate} from './../template/TemplateMinMax';\r\n\r\ninterface XYaxisI{\r\n    x: any,\r\n    y:number\r\n}\r\n\r\nexport interface ScorelineI {\r\n    chartData : Array<XYaxisI>,\r\n}\r\n\r\nconst baseLabelStyles = {\r\n    fontFamily: sansSerif,\r\n    fontSize : 14,\r\n    letterSpacing : \"normal\",\r\n    padding: 15,\r\n    stroke: \"transparent\"\r\n  };\r\n\r\nconst chartTheme = {\r\n    axis: {\r\n      style: {\r\n        axis: {\r\n            stroke: 'transparent',               \r\n        },\r\n        tickLabels: baseLabelStyles,\r\n        grid: {\r\n            fill: \"none\",\r\n            stroke: \"none\",\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\nexport const LineChart : React.FC<ScorelineI> = ({chartData}) => {\r\n    const [minY,maxY] = findMinMaxY(chartData)\r\n    const [minDate,maxDate]= findMinMaxDate(chartData) \r\n    return(\r\n        <VictoryChart \r\n        scale={{ x: \"time\" }}\r\n                    domain={{ x:[minDate,maxDate],y: [minY-30,maxY+30] }}\r\n                    height={300}\r\n                    width={400}\r\n                    theme={ chartTheme }\r\n                    containerComponent={\r\n                        <VictoryVoronoiContainer/>\r\n                    }\r\n                    >\r\n                    <VictoryAxis     \r\n                            dependentAxis={true}\r\n                            fixLabelOverlap={true}\r\n                            axisLabelComponent={<VictoryLabel />}\r\n                            style={{\r\n                            grid: { stroke: \"grey\",strokeWidth:0.5 },\r\n                            tickLabels: {\r\n                                fontSize: 20,\r\n                              }\r\n                            }}\r\n                    />\r\n                     <VictoryAxis tickFormat={(x) => `${x.getDate()}/${x.getMonth()}`}/>\r\n                    <VictoryLine style={{\r\n                        data: { stroke: \"black\" , strokeWidth:5 },parent: { border: \"1px solid #ccc\"}\r\n                        }}\r\n                        \r\n                        labels={({ datum }) => ``}\r\n                        labelComponent={\r\n                        <VictoryTooltip\r\n                            flyoutComponent={<LineFlyout />}\r\n                        />}\r\n                        data={chartData}/>\r\n                </VictoryChart>\r\n    )\r\n}\r\n",{"ruleId":"1000","replacedBy":"1001"},{"ruleId":"1002","replacedBy":"1003"},{"ruleId":"1004","severity":1,"message":"1005","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":25},{"ruleId":"1004","severity":1,"message":"1008","line":1,"column":27,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":36},{"ruleId":"1000","replacedBy":"1001"},{"ruleId":"1002","replacedBy":"1003"},{"ruleId":"1000","replacedBy":"1009"},{"ruleId":"1002","replacedBy":"1010"},{"ruleId":"1004","severity":1,"message":"1008","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1011","line":17,"column":9,"nodeType":"1006","messageId":"1007","endLine":17,"endColumn":15},{"ruleId":"1004","severity":1,"message":"1005","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":25},{"ruleId":"1004","severity":1,"message":"1012","line":8,"column":8,"nodeType":"1006","messageId":"1007","endLine":8,"endColumn":19},{"ruleId":"1004","severity":1,"message":"1005","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":25},{"ruleId":"1004","severity":1,"message":"1008","line":1,"column":27,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":36},{"ruleId":"1004","severity":1,"message":"1013","line":1,"column":38,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":46},{"ruleId":"1004","severity":1,"message":"1014","line":10,"column":8,"nodeType":"1006","messageId":"1007","endLine":10,"endColumn":14},{"ruleId":"1004","severity":1,"message":"1015","line":11,"column":8,"nodeType":"1006","messageId":"1007","endLine":11,"endColumn":22},{"ruleId":"1004","severity":1,"message":"1016","line":20,"column":45,"nodeType":"1006","messageId":"1007","endLine":20,"endColumn":53},{"ruleId":"1004","severity":1,"message":"1017","line":22,"column":12,"nodeType":"1006","messageId":"1007","endLine":22,"endColumn":21},{"ruleId":"1004","severity":1,"message":"1018","line":23,"column":12,"nodeType":"1006","messageId":"1007","endLine":23,"endColumn":21},{"ruleId":"1004","severity":1,"message":"1019","line":31,"column":13,"nodeType":"1006","messageId":"1007","endLine":31,"endColumn":30},{"ruleId":"1004","severity":1,"message":"1005","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":25},{"ruleId":"1004","severity":1,"message":"1013","line":1,"column":28,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":36},{"ruleId":"1004","severity":1,"message":"1020","line":21,"column":11,"nodeType":"1006","messageId":"1007","endLine":21,"endColumn":27},{"ruleId":"1004","severity":1,"message":"1021","line":5,"column":8,"nodeType":"1006","messageId":"1007","endLine":5,"endColumn":22},{"ruleId":"1004","severity":1,"message":"1022","line":3,"column":8,"nodeType":"1006","messageId":"1007","endLine":3,"endColumn":21},{"ruleId":"1004","severity":1,"message":"1023","line":4,"column":8,"nodeType":"1006","messageId":"1007","endLine":4,"endColumn":16},{"ruleId":"1004","severity":1,"message":"1024","line":12,"column":9,"nodeType":"1006","messageId":"1007","endLine":12,"endColumn":16},{"ruleId":"1004","severity":1,"message":"1005","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":25},{"ruleId":"1004","severity":1,"message":"1013","line":1,"column":29,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":37},{"ruleId":"1004","severity":1,"message":"1025","line":26,"column":19,"nodeType":"1006","messageId":"1007","endLine":26,"endColumn":24},{"ruleId":"1004","severity":1,"message":"1013","line":1,"column":26,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":34},{"ruleId":"1026","severity":1,"message":"1027","line":17,"column":7,"nodeType":"1028","endLine":17,"endColumn":9,"suggestions":"1029"},{"ruleId":"1004","severity":1,"message":"1030","line":1,"column":11,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":24},{"ruleId":"1004","severity":1,"message":"1031","line":3,"column":10,"nodeType":"1006","messageId":"1007","endLine":3,"endColumn":20},{"ruleId":"1004","severity":1,"message":"1014","line":2,"column":8,"nodeType":"1006","messageId":"1007","endLine":2,"endColumn":14},{"ruleId":"1004","severity":1,"message":"1032","line":8,"column":8,"nodeType":"1006","messageId":"1007","endLine":8,"endColumn":17},{"ruleId":"1004","severity":1,"message":"1033","line":9,"column":10,"nodeType":"1006","messageId":"1007","endLine":9,"endColumn":14},{"ruleId":"1004","severity":1,"message":"1034","line":11,"column":10,"nodeType":"1006","messageId":"1007","endLine":11,"endColumn":22},{"ruleId":"1004","severity":1,"message":"1035","line":11,"column":24,"nodeType":"1006","messageId":"1007","endLine":11,"endColumn":29},{"ruleId":"1004","severity":1,"message":"1031","line":3,"column":10,"nodeType":"1006","messageId":"1007","endLine":3,"endColumn":20},{"ruleId":"1004","severity":1,"message":"1036","line":3,"column":8,"nodeType":"1006","messageId":"1007","endLine":3,"endColumn":17},{"ruleId":"1000","replacedBy":"1037"},{"ruleId":"1002","replacedBy":"1038"},{"ruleId":"1004","severity":1,"message":"1008","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1039","line":11,"column":8,"nodeType":"1006","messageId":"1007","endLine":11,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1040","line":12,"column":10,"nodeType":"1006","messageId":"1007","endLine":12,"endColumn":21},{"ruleId":"1004","severity":1,"message":"1041","line":13,"column":9,"nodeType":"1006","messageId":"1007","endLine":13,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1012","line":14,"column":8,"nodeType":"1006","messageId":"1007","endLine":14,"endColumn":19},{"ruleId":"1004","severity":1,"message":"1042","line":15,"column":8,"nodeType":"1006","messageId":"1007","endLine":15,"endColumn":17},{"ruleId":"1004","severity":1,"message":"1043","line":16,"column":8,"nodeType":"1006","messageId":"1007","endLine":16,"endColumn":19},{"ruleId":"1004","severity":1,"message":"1044","line":17,"column":9,"nodeType":"1006","messageId":"1007","endLine":17,"endColumn":16},{"ruleId":"1004","severity":1,"message":"1045","line":33,"column":15,"nodeType":"1006","messageId":"1007","endLine":33,"endColumn":19},{"ruleId":"1004","severity":1,"message":"1046","line":1,"column":8,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1047","line":2,"column":8,"nodeType":"1006","messageId":"1007","endLine":2,"endColumn":14},{"ruleId":"1004","severity":1,"message":"1048","line":31,"column":11,"nodeType":"1006","messageId":"1007","endLine":31,"endColumn":18},{"ruleId":"1026","severity":1,"message":"1027","line":74,"column":7,"nodeType":"1028","endLine":74,"endColumn":18,"suggestions":"1049"},{"ruleId":"1026","severity":1,"message":"1050","line":28,"column":7,"nodeType":"1028","endLine":28,"endColumn":9,"suggestions":"1051"},{"ruleId":"1004","severity":1,"message":"1013","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":25},{"ruleId":"1004","severity":1,"message":"1014","line":3,"column":8,"nodeType":"1006","messageId":"1007","endLine":3,"endColumn":14},{"ruleId":"1004","severity":1,"message":"1048","line":10,"column":11,"nodeType":"1006","messageId":"1007","endLine":10,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1005","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":25},{"ruleId":"1004","severity":1,"message":"1052","line":5,"column":8,"nodeType":"1006","messageId":"1007","endLine":5,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1053","line":6,"column":8,"nodeType":"1006","messageId":"1007","endLine":6,"endColumn":11},{"ruleId":"1004","severity":1,"message":"1054","line":12,"column":9,"nodeType":"1006","messageId":"1007","endLine":12,"endColumn":27},{"ruleId":"1026","severity":1,"message":"1055","line":47,"column":5,"nodeType":"1028","endLine":47,"endColumn":14,"suggestions":"1056"},{"ruleId":"1004","severity":1,"message":"1057","line":3,"column":7,"nodeType":"1006","messageId":"1007","endLine":3,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1005","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":25},{"ruleId":"1004","severity":1,"message":"1008","line":1,"column":27,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":36},{"ruleId":"1004","severity":1,"message":"1013","line":1,"column":38,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":46},{"ruleId":"1004","severity":1,"message":"1058","line":5,"column":8,"nodeType":"1006","messageId":"1007","endLine":5,"endColumn":16},{"ruleId":"1004","severity":1,"message":"1059","line":8,"column":9,"nodeType":"1006","messageId":"1007","endLine":8,"endColumn":16},{"ruleId":"1004","severity":1,"message":"1015","line":9,"column":8,"nodeType":"1006","messageId":"1007","endLine":9,"endColumn":22},{"ruleId":"1004","severity":1,"message":"1060","line":12,"column":8,"nodeType":"1006","messageId":"1007","endLine":12,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1017","line":18,"column":12,"nodeType":"1006","messageId":"1007","endLine":18,"endColumn":21},{"ruleId":"1004","severity":1,"message":"1018","line":19,"column":12,"nodeType":"1006","messageId":"1007","endLine":19,"endColumn":21},{"ruleId":"1004","severity":1,"message":"1005","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":25},{"ruleId":"1004","severity":1,"message":"1013","line":1,"column":27,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":35},{"ruleId":"1004","severity":1,"message":"1061","line":1,"column":38,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":48},{"ruleId":"1004","severity":1,"message":"1062","line":2,"column":8,"nodeType":"1006","messageId":"1007","endLine":2,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1052","line":5,"column":8,"nodeType":"1006","messageId":"1007","endLine":5,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1053","line":6,"column":8,"nodeType":"1006","messageId":"1007","endLine":6,"endColumn":11},{"ruleId":"1004","severity":1,"message":"1063","line":9,"column":10,"nodeType":"1006","messageId":"1007","endLine":9,"endColumn":24},{"ruleId":"1004","severity":1,"message":"1031","line":10,"column":8,"nodeType":"1006","messageId":"1007","endLine":10,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1014","line":12,"column":8,"nodeType":"1006","messageId":"1007","endLine":12,"endColumn":14},{"ruleId":"1004","severity":1,"message":"1064","line":13,"column":10,"nodeType":"1006","messageId":"1007","endLine":13,"endColumn":17},{"ruleId":"1004","severity":1,"message":"1065","line":14,"column":8,"nodeType":"1006","messageId":"1007","endLine":14,"endColumn":15},{"ruleId":"1004","severity":1,"message":"1012","line":17,"column":8,"nodeType":"1006","messageId":"1007","endLine":17,"endColumn":19},{"ruleId":"1004","severity":1,"message":"1042","line":18,"column":8,"nodeType":"1006","messageId":"1007","endLine":18,"endColumn":17},{"ruleId":"1004","severity":1,"message":"1011","line":22,"column":9,"nodeType":"1006","messageId":"1007","endLine":22,"endColumn":15},{"ruleId":"1004","severity":1,"message":"1057","line":3,"column":7,"nodeType":"1006","messageId":"1007","endLine":3,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1005","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":25},{"ruleId":"1004","severity":1,"message":"1066","line":4,"column":8,"nodeType":"1006","messageId":"1007","endLine":4,"endColumn":24},{"ruleId":"1004","severity":1,"message":"1067","line":5,"column":8,"nodeType":"1006","messageId":"1007","endLine":5,"endColumn":16},{"ruleId":"1004","severity":1,"message":"1068","line":16,"column":11,"nodeType":"1006","messageId":"1007","endLine":16,"endColumn":22},{"ruleId":"1004","severity":1,"message":"1069","line":1,"column":10,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":21},{"ruleId":"1004","severity":1,"message":"1013","line":1,"column":16,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":24},{"ruleId":"1004","severity":1,"message":"1008","line":1,"column":27,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":36},{"ruleId":"1004","severity":1,"message":"1070","line":3,"column":28,"nodeType":"1006","messageId":"1007","endLine":3,"endColumn":42},{"ruleId":"1004","severity":1,"message":"1062","line":5,"column":8,"nodeType":"1006","messageId":"1007","endLine":5,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1047","line":8,"column":8,"nodeType":"1006","messageId":"1007","endLine":8,"endColumn":14},{"ruleId":"1004","severity":1,"message":"1005","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":25},{"ruleId":"1004","severity":1,"message":"1008","line":1,"column":27,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":36},{"ruleId":"1004","severity":1,"message":"1013","line":1,"column":38,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":46},{"ruleId":"1004","severity":1,"message":"1061","line":1,"column":48,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":58},{"ruleId":"1004","severity":1,"message":"1062","line":2,"column":8,"nodeType":"1006","messageId":"1007","endLine":2,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1057","line":3,"column":7,"nodeType":"1006","messageId":"1007","endLine":3,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1005","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":25},{"ruleId":"1004","severity":1,"message":"1013","line":1,"column":27,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":35},{"ruleId":"1004","severity":1,"message":"1061","line":1,"column":38,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":48},{"ruleId":"1004","severity":1,"message":"1011","line":14,"column":9,"nodeType":"1006","messageId":"1007","endLine":14,"endColumn":15},{"ruleId":"1004","severity":1,"message":"1057","line":3,"column":7,"nodeType":"1006","messageId":"1007","endLine":3,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1013","line":1,"column":16,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":24},{"ruleId":"1004","severity":1,"message":"1008","line":1,"column":27,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":36},{"ruleId":"1004","severity":1,"message":"1071","line":15,"column":8,"nodeType":"1006","messageId":"1007","endLine":15,"endColumn":22},{"ruleId":"1004","severity":1,"message":"1072","line":16,"column":8,"nodeType":"1006","messageId":"1007","endLine":16,"endColumn":23},{"ruleId":"1004","severity":1,"message":"1060","line":17,"column":8,"nodeType":"1006","messageId":"1007","endLine":17,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1073","line":18,"column":8,"nodeType":"1006","messageId":"1007","endLine":18,"endColumn":15},{"ruleId":"1004","severity":1,"message":"1074","line":19,"column":10,"nodeType":"1006","messageId":"1007","endLine":19,"endColumn":20},{"ruleId":"1004","severity":1,"message":"1034","line":19,"column":22,"nodeType":"1006","messageId":"1007","endLine":19,"endColumn":34},{"ruleId":"1004","severity":1,"message":"1035","line":19,"column":36,"nodeType":"1006","messageId":"1007","endLine":19,"endColumn":41},{"ruleId":"1004","severity":1,"message":"1046","line":2,"column":8,"nodeType":"1006","messageId":"1007","endLine":2,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1075","line":6,"column":7,"nodeType":"1006","messageId":"1007","endLine":6,"endColumn":14},{"ruleId":"1004","severity":1,"message":"1076","line":7,"column":7,"nodeType":"1006","messageId":"1007","endLine":7,"endColumn":17},{"ruleId":"1004","severity":1,"message":"1077","line":1,"column":8,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1013","line":1,"column":16,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":24},{"ruleId":"1004","severity":1,"message":"1008","line":1,"column":27,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":36},{"ruleId":"1004","severity":1,"message":"1061","line":1,"column":39,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":49},{"ruleId":"1004","severity":1,"message":"1046","line":3,"column":8,"nodeType":"1006","messageId":"1007","endLine":3,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1078","line":9,"column":8,"nodeType":"1006","messageId":"1007","endLine":9,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1079","line":16,"column":3,"nodeType":"1006","messageId":"1007","endLine":16,"endColumn":11},{"ruleId":"1004","severity":1,"message":"1080","line":89,"column":5,"nodeType":"1006","messageId":"1007","endLine":89,"endColumn":10},{"ruleId":"1004","severity":1,"message":"1005","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":25},{"ruleId":"1004","severity":1,"message":"1008","line":1,"column":27,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":36},{"ruleId":"1004","severity":1,"message":"1013","line":1,"column":38,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":46},{"ruleId":"1004","severity":1,"message":"1061","line":1,"column":48,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":58},{"ruleId":"1004","severity":1,"message":"1062","line":2,"column":8,"nodeType":"1006","messageId":"1007","endLine":2,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1059","line":4,"column":9,"nodeType":"1006","messageId":"1007","endLine":4,"endColumn":16},{"ruleId":"1004","severity":1,"message":"1047","line":11,"column":8,"nodeType":"1006","messageId":"1007","endLine":11,"endColumn":14},{"ruleId":"1004","severity":1,"message":"1005","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":25},{"ruleId":"1004","severity":1,"message":"1062","line":6,"column":8,"nodeType":"1006","messageId":"1007","endLine":6,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1033","line":11,"column":8,"nodeType":"1006","messageId":"1007","endLine":11,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1052","line":12,"column":8,"nodeType":"1006","messageId":"1007","endLine":12,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1053","line":15,"column":8,"nodeType":"1006","messageId":"1007","endLine":15,"endColumn":11},{"ruleId":"1004","severity":1,"message":"1014","line":16,"column":8,"nodeType":"1006","messageId":"1007","endLine":16,"endColumn":14},{"ruleId":"1004","severity":1,"message":"1081","line":18,"column":8,"nodeType":"1006","messageId":"1007","endLine":18,"endColumn":19},{"ruleId":"1004","severity":1,"message":"1063","line":19,"column":10,"nodeType":"1006","messageId":"1007","endLine":19,"endColumn":24},{"ruleId":"1004","severity":1,"message":"1082","line":20,"column":9,"nodeType":"1006","messageId":"1007","endLine":20,"endColumn":21},{"ruleId":"1004","severity":1,"message":"1047","line":22,"column":8,"nodeType":"1006","messageId":"1007","endLine":22,"endColumn":14},{"ruleId":"1004","severity":1,"message":"1083","line":24,"column":3,"nodeType":"1006","messageId":"1007","endLine":24,"endColumn":7},{"ruleId":"1004","severity":1,"message":"1079","line":25,"column":3,"nodeType":"1006","messageId":"1007","endLine":25,"endColumn":11},{"ruleId":"1004","severity":1,"message":"1084","line":26,"column":3,"nodeType":"1006","messageId":"1007","endLine":26,"endColumn":8},{"ruleId":"1004","severity":1,"message":"1085","line":27,"column":3,"nodeType":"1006","messageId":"1007","endLine":27,"endColumn":9},{"ruleId":"1004","severity":1,"message":"1086","line":28,"column":3,"nodeType":"1006","messageId":"1007","endLine":28,"endColumn":16},{"ruleId":"1004","severity":1,"message":"1087","line":38,"column":10,"nodeType":"1006","messageId":"1007","endLine":38,"endColumn":15},{"ruleId":"1004","severity":1,"message":"1088","line":38,"column":16,"nodeType":"1006","messageId":"1007","endLine":38,"endColumn":24},{"ruleId":"1004","severity":1,"message":"1089","line":42,"column":10,"nodeType":"1006","messageId":"1007","endLine":42,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1090","line":48,"column":9,"nodeType":"1006","messageId":"1007","endLine":48,"endColumn":23},{"ruleId":"1026","severity":1,"message":"1091","line":54,"column":6,"nodeType":"1028","endLine":54,"endColumn":8,"suggestions":"1092"},{"ruleId":"1026","severity":1,"message":"1093","line":64,"column":4,"nodeType":"1028","endLine":64,"endColumn":23,"suggestions":"1094"},{"ruleId":"1004","severity":1,"message":"1077","line":1,"column":8,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1013","line":1,"column":16,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":24},{"ruleId":"1004","severity":1,"message":"1008","line":1,"column":27,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":36},{"ruleId":"1004","severity":1,"message":"1061","line":1,"column":39,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":49},{"ruleId":"1004","severity":1,"message":"1046","line":3,"column":8,"nodeType":"1006","messageId":"1007","endLine":3,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1077","line":1,"column":8,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1083","line":5,"column":5,"nodeType":"1006","messageId":"1007","endLine":5,"endColumn":9},{"ruleId":"1004","severity":1,"message":"1079","line":6,"column":5,"nodeType":"1006","messageId":"1007","endLine":6,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1052","line":3,"column":8,"nodeType":"1006","messageId":"1007","endLine":3,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1057","line":3,"column":7,"nodeType":"1006","messageId":"1007","endLine":3,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1057","line":3,"column":7,"nodeType":"1006","messageId":"1007","endLine":3,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1095","line":19,"column":22,"nodeType":"1006","messageId":"1007","endLine":19,"endColumn":34},{"ruleId":"1004","severity":1,"message":"1096","line":3,"column":8,"nodeType":"1006","messageId":"1007","endLine":3,"endColumn":17},{"ruleId":"1004","severity":1,"message":"1081","line":4,"column":8,"nodeType":"1006","messageId":"1007","endLine":4,"endColumn":19},{"ruleId":"1004","severity":1,"message":"1024","line":9,"column":11,"nodeType":"1006","messageId":"1007","endLine":9,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1089","line":20,"column":12,"nodeType":"1006","messageId":"1007","endLine":20,"endColumn":20},{"ruleId":"1097","severity":1,"message":"1098","line":41,"column":17,"nodeType":"1099","messageId":"1100","endLine":41,"endColumn":40},{"ruleId":"1004","severity":1,"message":"1101","line":2,"column":8,"nodeType":"1006","messageId":"1007","endLine":2,"endColumn":22},{"ruleId":"1004","severity":1,"message":"1096","line":3,"column":8,"nodeType":"1006","messageId":"1007","endLine":3,"endColumn":17},{"ruleId":"1004","severity":1,"message":"1081","line":4,"column":8,"nodeType":"1006","messageId":"1007","endLine":4,"endColumn":19},{"ruleId":"1004","severity":1,"message":"1046","line":10,"column":8,"nodeType":"1006","messageId":"1007","endLine":10,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1024","line":20,"column":11,"nodeType":"1006","messageId":"1007","endLine":20,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1102","line":21,"column":24,"nodeType":"1006","messageId":"1007","endLine":21,"endColumn":30},{"ruleId":"1004","severity":1,"message":"1103","line":23,"column":11,"nodeType":"1006","messageId":"1007","endLine":23,"endColumn":16},{"ruleId":"1026","severity":1,"message":"1027","line":44,"column":7,"nodeType":"1028","endLine":44,"endColumn":9,"suggestions":"1104"},{"ruleId":"1004","severity":1,"message":"1008","line":1,"column":16,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":25},{"ruleId":"1004","severity":1,"message":"1081","line":6,"column":8,"nodeType":"1006","messageId":"1007","endLine":6,"endColumn":19},{"ruleId":"1004","severity":1,"message":"1105","line":7,"column":8,"nodeType":"1006","messageId":"1007","endLine":7,"endColumn":21},{"ruleId":"1004","severity":1,"message":"1106","line":8,"column":8,"nodeType":"1006","messageId":"1007","endLine":8,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1107","line":9,"column":10,"nodeType":"1006","messageId":"1007","endLine":9,"endColumn":19},{"ruleId":"1026","severity":1,"message":"1108","line":29,"column":7,"nodeType":"1028","endLine":29,"endColumn":9,"suggestions":"1109"},{"ruleId":"1004","severity":1,"message":"1008","line":1,"column":16,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":25},{"ruleId":"1004","severity":1,"message":"1081","line":6,"column":8,"nodeType":"1006","messageId":"1007","endLine":6,"endColumn":19},{"ruleId":"1004","severity":1,"message":"1105","line":7,"column":8,"nodeType":"1006","messageId":"1007","endLine":7,"endColumn":21},{"ruleId":"1004","severity":1,"message":"1106","line":8,"column":8,"nodeType":"1006","messageId":"1007","endLine":8,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1107","line":9,"column":10,"nodeType":"1006","messageId":"1007","endLine":9,"endColumn":19},{"ruleId":"1004","severity":1,"message":"1008","line":1,"column":15,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":24},{"ruleId":"1004","severity":1,"message":"1033","line":2,"column":8,"nodeType":"1006","messageId":"1007","endLine":2,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1052","line":3,"column":8,"nodeType":"1006","messageId":"1007","endLine":3,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1110","line":4,"column":8,"nodeType":"1006","messageId":"1007","endLine":4,"endColumn":17},{"ruleId":"1004","severity":1,"message":"1062","line":5,"column":8,"nodeType":"1006","messageId":"1007","endLine":5,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1111","line":8,"column":9,"nodeType":"1006","messageId":"1007","endLine":8,"endColumn":24},{"ruleId":"1004","severity":1,"message":"1062","line":5,"column":8,"nodeType":"1006","messageId":"1007","endLine":5,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1112","line":6,"column":9,"nodeType":"1006","messageId":"1007","endLine":6,"endColumn":22},{"ruleId":"1004","severity":1,"message":"1113","line":9,"column":9,"nodeType":"1006","messageId":"1007","endLine":9,"endColumn":19},{"ruleId":"1026","severity":1,"message":"1114","line":40,"column":7,"nodeType":"1028","endLine":40,"endColumn":18,"suggestions":"1115"},{"ruleId":"1004","severity":1,"message":"1052","line":3,"column":8,"nodeType":"1006","messageId":"1007","endLine":3,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1112","line":7,"column":9,"nodeType":"1006","messageId":"1007","endLine":7,"endColumn":22},{"ruleId":"1004","severity":1,"message":"1116","line":13,"column":11,"nodeType":"1006","messageId":"1007","endLine":13,"endColumn":16},{"ruleId":"1004","severity":1,"message":"1117","line":6,"column":9,"nodeType":"1006","messageId":"1007","endLine":6,"endColumn":40},{"ruleId":"1004","severity":1,"message":"1118","line":12,"column":8,"nodeType":"1006","messageId":"1007","endLine":12,"endColumn":24},{"ruleId":"1004","severity":1,"message":"1031","line":14,"column":10,"nodeType":"1006","messageId":"1007","endLine":14,"endColumn":20},{"ruleId":"1004","severity":1,"message":"1119","line":24,"column":12,"nodeType":"1006","messageId":"1007","endLine":24,"endColumn":19},{"ruleId":"1026","severity":1,"message":"1120","line":38,"column":7,"nodeType":"1028","endLine":38,"endColumn":9,"suggestions":"1121"},{"ruleId":"1004","severity":1,"message":"1033","line":2,"column":8,"nodeType":"1006","messageId":"1007","endLine":2,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1052","line":3,"column":8,"nodeType":"1006","messageId":"1007","endLine":3,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1122","line":7,"column":9,"nodeType":"1006","messageId":"1007","endLine":7,"endColumn":22},{"ruleId":"1004","severity":1,"message":"1024","line":15,"column":11,"nodeType":"1006","messageId":"1007","endLine":15,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1123","line":38,"column":11,"nodeType":"1006","messageId":"1007","endLine":38,"endColumn":15},{"ruleId":"1004","severity":1,"message":"1024","line":42,"column":11,"nodeType":"1006","messageId":"1007","endLine":42,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1024","line":66,"column":11,"nodeType":"1006","messageId":"1007","endLine":66,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1024","line":95,"column":11,"nodeType":"1006","messageId":"1007","endLine":95,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1008","line":1,"column":27,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":36},{"ruleId":"1004","severity":1,"message":"1124","line":12,"column":22,"nodeType":"1006","messageId":"1007","endLine":12,"endColumn":33},{"ruleId":"1004","severity":1,"message":"1025","line":21,"column":11,"nodeType":"1006","messageId":"1007","endLine":21,"endColumn":16},{"ruleId":"1004","severity":1,"message":"1125","line":31,"column":21,"nodeType":"1006","messageId":"1007","endLine":31,"endColumn":29},{"ruleId":"1004","severity":1,"message":"1126","line":31,"column":63,"nodeType":"1006","messageId":"1007","endLine":31,"endColumn":68},{"ruleId":"1004","severity":1,"message":"1124","line":12,"column":22,"nodeType":"1006","messageId":"1007","endLine":12,"endColumn":33},{"ruleId":"1004","severity":1,"message":"1025","line":23,"column":11,"nodeType":"1006","messageId":"1007","endLine":23,"endColumn":16},{"ruleId":"1004","severity":1,"message":"1127","line":27,"column":12,"nodeType":"1006","messageId":"1007","endLine":27,"endColumn":19},{"ruleId":"1004","severity":1,"message":"1125","line":40,"column":21,"nodeType":"1006","messageId":"1007","endLine":40,"endColumn":29},{"ruleId":"1004","severity":1,"message":"1128","line":65,"column":11,"nodeType":"1006","messageId":"1007","endLine":65,"endColumn":23},{"ruleId":"1004","severity":1,"message":"1129","line":72,"column":11,"nodeType":"1006","messageId":"1007","endLine":72,"endColumn":30},{"ruleId":"1026","severity":1,"message":"1130","line":96,"column":7,"nodeType":"1028","endLine":96,"endColumn":18,"suggestions":"1131"},{"ruleId":"1004","severity":1,"message":"1046","line":2,"column":8,"nodeType":"1006","messageId":"1007","endLine":2,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1075","line":6,"column":7,"nodeType":"1006","messageId":"1007","endLine":6,"endColumn":14},{"ruleId":"1004","severity":1,"message":"1076","line":7,"column":7,"nodeType":"1006","messageId":"1007","endLine":7,"endColumn":17},{"ruleId":"1004","severity":1,"message":"1046","line":2,"column":8,"nodeType":"1006","messageId":"1007","endLine":2,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1075","line":6,"column":7,"nodeType":"1006","messageId":"1007","endLine":6,"endColumn":14},{"ruleId":"1004","severity":1,"message":"1076","line":7,"column":7,"nodeType":"1006","messageId":"1007","endLine":7,"endColumn":17},{"ruleId":"1004","severity":1,"message":"1005","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":25},{"ruleId":"1004","severity":1,"message":"1008","line":1,"column":27,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":36},{"ruleId":"1004","severity":1,"message":"1014","line":4,"column":8,"nodeType":"1006","messageId":"1007","endLine":4,"endColumn":14},{"ruleId":"1004","severity":1,"message":"1083","line":6,"column":8,"nodeType":"1006","messageId":"1007","endLine":6,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1033","line":7,"column":8,"nodeType":"1006","messageId":"1007","endLine":7,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1047","line":12,"column":8,"nodeType":"1006","messageId":"1007","endLine":12,"endColumn":14},{"ruleId":"1004","severity":1,"message":"1053","line":13,"column":8,"nodeType":"1006","messageId":"1007","endLine":13,"endColumn":11},{"ruleId":"1004","severity":1,"message":"1132","line":15,"column":10,"nodeType":"1006","messageId":"1007","endLine":15,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1133","line":15,"column":28,"nodeType":"1006","messageId":"1007","endLine":15,"endColumn":38},{"ruleId":"1004","severity":1,"message":"1134","line":15,"column":39,"nodeType":"1006","messageId":"1007","endLine":15,"endColumn":47},{"ruleId":"1004","severity":1,"message":"1005","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":25},{"ruleId":"1004","severity":1,"message":"1135","line":2,"column":9,"nodeType":"1006","messageId":"1007","endLine":2,"endColumn":23},{"ruleId":"1004","severity":1,"message":"1066","line":4,"column":8,"nodeType":"1006","messageId":"1007","endLine":4,"endColumn":24},{"ruleId":"1004","severity":1,"message":"1067","line":5,"column":8,"nodeType":"1006","messageId":"1007","endLine":5,"endColumn":16},{"ruleId":"1004","severity":1,"message":"1136","line":11,"column":9,"nodeType":"1006","messageId":"1007","endLine":11,"endColumn":15},{"ruleId":"1004","severity":1,"message":"1068","line":20,"column":11,"nodeType":"1006","messageId":"1007","endLine":20,"endColumn":22},{"ruleId":"1004","severity":1,"message":"1137","line":22,"column":11,"nodeType":"1006","messageId":"1007","endLine":22,"endColumn":19},{"ruleId":"1004","severity":1,"message":"1069","line":1,"column":10,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":21},{"ruleId":"1004","severity":1,"message":"1005","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":25},{"ruleId":"1004","severity":1,"message":"1008","line":1,"column":27,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":36},{"ruleId":"1004","severity":1,"message":"1008","line":1,"column":15,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":24},{"ruleId":"1004","severity":1,"message":"1033","line":2,"column":8,"nodeType":"1006","messageId":"1007","endLine":2,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1052","line":3,"column":8,"nodeType":"1006","messageId":"1007","endLine":3,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1110","line":4,"column":8,"nodeType":"1006","messageId":"1007","endLine":4,"endColumn":17},{"ruleId":"1004","severity":1,"message":"1062","line":5,"column":8,"nodeType":"1006","messageId":"1007","endLine":5,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1112","line":8,"column":9,"nodeType":"1006","messageId":"1007","endLine":8,"endColumn":22},{"ruleId":"1004","severity":1,"message":"1113","line":10,"column":9,"nodeType":"1006","messageId":"1007","endLine":10,"endColumn":19},{"ruleId":"1004","severity":1,"message":"1138","line":14,"column":82,"nodeType":"1006","messageId":"1007","endLine":14,"endColumn":105},{"ruleId":"1004","severity":1,"message":"1139","line":14,"column":137,"nodeType":"1006","messageId":"1007","endLine":14,"endColumn":160},{"ruleId":"1004","severity":1,"message":"1053","line":21,"column":8,"nodeType":"1006","messageId":"1007","endLine":21,"endColumn":11},{"ruleId":"1004","severity":1,"message":"1140","line":28,"column":11,"nodeType":"1006","messageId":"1007","endLine":28,"endColumn":20},{"ruleId":"1141","severity":1,"message":"1142","line":129,"column":53,"nodeType":"1143","messageId":"1144","endLine":129,"endColumn":55},{"ruleId":"1026","severity":1,"message":"1145","line":147,"column":7,"nodeType":"1028","endLine":147,"endColumn":18,"suggestions":"1146"},{"ruleId":"1097","severity":1,"message":"1098","line":160,"column":21,"nodeType":"1099","messageId":"1100","endLine":160,"endColumn":57},{"ruleId":"1026","severity":1,"message":"1147","line":197,"column":7,"nodeType":"1028","endLine":197,"endColumn":15,"suggestions":"1148"},{"ruleId":"1004","severity":1,"message":"1008","line":1,"column":16,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":25},{"ruleId":"1004","severity":1,"message":"1072","line":7,"column":8,"nodeType":"1006","messageId":"1007","endLine":7,"endColumn":23},{"ruleId":"1004","severity":1,"message":"1018","line":26,"column":12,"nodeType":"1006","messageId":"1007","endLine":26,"endColumn":21},{"ruleId":"1004","severity":1,"message":"1013","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":25},{"ruleId":"1004","severity":1,"message":"1149","line":1,"column":26,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":36},{"ruleId":"1004","severity":1,"message":"1013","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":25},{"ruleId":"1004","severity":1,"message":"1013","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":25},{"ruleId":"1004","severity":1,"message":"1064","line":3,"column":22,"nodeType":"1006","messageId":"1007","endLine":3,"endColumn":29},{"ruleId":"1004","severity":1,"message":"1150","line":6,"column":9,"nodeType":"1006","messageId":"1007","endLine":6,"endColumn":19},{"ruleId":"1004","severity":1,"message":"1151","line":7,"column":9,"nodeType":"1006","messageId":"1007","endLine":7,"endColumn":22},{"ruleId":"1004","severity":1,"message":"1152","line":8,"column":9,"nodeType":"1006","messageId":"1007","endLine":8,"endColumn":22},{"ruleId":"1004","severity":1,"message":"1013","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":25},{"ruleId":"1004","severity":1,"message":"1008","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":26},{"ruleId":"1004","severity":1,"message":"1111","line":5,"column":24,"nodeType":"1006","messageId":"1007","endLine":5,"endColumn":39},{"ruleId":"1097","severity":1,"message":"1098","line":39,"column":25,"nodeType":"1099","messageId":"1100","endLine":39,"endColumn":76},{"ruleId":"1004","severity":1,"message":"1013","line":1,"column":17,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":25},{"ruleId":"1004","severity":1,"message":"1031","line":2,"column":10,"nodeType":"1006","messageId":"1007","endLine":2,"endColumn":20},{"ruleId":"1004","severity":1,"message":"1064","line":2,"column":21,"nodeType":"1006","messageId":"1007","endLine":2,"endColumn":28},{"ruleId":"1004","severity":1,"message":"1024","line":10,"column":11,"nodeType":"1006","messageId":"1007","endLine":10,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1064","line":3,"column":22,"nodeType":"1006","messageId":"1007","endLine":3,"endColumn":29},{"ruleId":"1004","severity":1,"message":"1024","line":23,"column":11,"nodeType":"1006","messageId":"1007","endLine":23,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1137","line":24,"column":11,"nodeType":"1006","messageId":"1007","endLine":24,"endColumn":19},{"ruleId":"1026","severity":1,"message":"1153","line":34,"column":7,"nodeType":"1028","endLine":34,"endColumn":30,"suggestions":"1154"},{"ruleId":"1004","severity":1,"message":"1155","line":33,"column":12,"nodeType":"1006","messageId":"1007","endLine":33,"endColumn":22},{"ruleId":"1004","severity":1,"message":"1156","line":37,"column":12,"nodeType":"1006","messageId":"1007","endLine":37,"endColumn":13},{"ruleId":"1004","severity":1,"message":"1157","line":41,"column":11,"nodeType":"1006","messageId":"1007","endLine":41,"endColumn":16},{"ruleId":"1004","severity":1,"message":"1013","line":1,"column":16,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":24},{"ruleId":"1004","severity":1,"message":"1008","line":1,"column":25,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":34},{"ruleId":"1004","severity":1,"message":"1158","line":1,"column":35,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":46},{"ruleId":"1004","severity":1,"message":"1159","line":1,"column":47,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":54},{"ruleId":"1004","severity":1,"message":"1160","line":40,"column":16,"nodeType":"1006","messageId":"1007","endLine":40,"endColumn":20},{"ruleId":"1004","severity":1,"message":"1161","line":40,"column":21,"nodeType":"1006","messageId":"1007","endLine":40,"endColumn":25},{"ruleId":"1004","severity":1,"message":"1162","line":41,"column":16,"nodeType":"1006","messageId":"1007","endLine":41,"endColumn":23},{"ruleId":"1004","severity":1,"message":"1163","line":41,"column":24,"nodeType":"1006","messageId":"1007","endLine":41,"endColumn":31},{"ruleId":"1004","severity":1,"message":"1008","line":1,"column":15,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":24},{"ruleId":"1004","severity":1,"message":"1008","line":1,"column":15,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":24},{"ruleId":"1004","severity":1,"message":"1158","line":1,"column":36,"nodeType":"1006","messageId":"1007","endLine":1,"endColumn":47},{"ruleId":"1004","severity":1,"message":"1164","line":7,"column":43,"nodeType":"1006","messageId":"1007","endLine":7,"endColumn":57},{"ruleId":"1004","severity":1,"message":"1057","line":3,"column":7,"nodeType":"1006","messageId":"1007","endLine":3,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1024","line":5,"column":11,"nodeType":"1006","messageId":"1007","endLine":5,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1062","line":3,"column":8,"nodeType":"1006","messageId":"1007","endLine":3,"endColumn":12},{"ruleId":"1004","severity":1,"message":"1024","line":8,"column":11,"nodeType":"1006","messageId":"1007","endLine":8,"endColumn":18},{"ruleId":"1004","severity":1,"message":"1165","line":4,"column":8,"nodeType":"1006","messageId":"1007","endLine":4,"endColumn":25},{"ruleId":"1004","severity":1,"message":"1166","line":2,"column":76,"nodeType":"1006","messageId":"1007","endLine":2,"endColumn":92},{"ruleId":"1004","severity":1,"message":"1167","line":2,"column":93,"nodeType":"1006","messageId":"1007","endLine":2,"endColumn":104},"no-native-reassign",["1168"],"no-negated-in-lhs",["1169"],"@typescript-eslint/no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.",["1168"],["1169"],"'status' is assigned a value but never used.","'LoadingPage' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'LinearProgress' is defined but never used.","'platform' is assigned a value but never used.","'authState' is assigned a value but never used.","'authAxios' is assigned a value but never used.","'handleDrawerClose' is assigned a value but never used.","'handleDrawerOpen' is assigned a value but never used.","'AssignmentIcon' is defined but never used.","'DashboardIcon' is defined but never used.","'StarIcon' is defined but never used.","'classes' is assigned a value but never used.","'email' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["1170"],"'DialogComSize' is defined but never used.","'Typography' is defined but never used.","'useStyles' is defined but never used.","'Grid' is defined but never used.","'createStyles' is defined but never used.","'Theme' is defined but never used.","'ClearIcon' is defined but never used.",["1168"],["1169"],"'SignupForm' is defined but never used.","'useSelector' is defined but never used.","'RootState' is defined but never used.","'Errorpage' is defined but never used.","'Successpage' is defined but never used.","'success' is defined but never used.","'data' is assigned a value but never used.","'axios' is defined but never used.","'config' is defined but never used.","'history' is assigned a value but never used.",["1171"],"React Hook useEffect has a missing dependency: 'authAxios'. Either include it or remove the dependency array.",["1172"],"'Paper' is defined but never used.","'Box' is defined but never used.","'PlatformItemAccess' is defined but never used.","React Hook useEffect has missing dependencies: 'authAxios', 'authData.userInfo.email', and 'dispatch'. Either include them or remove the dependency array.",["1173"],"'drawerWidth' is assigned a value but never used.","'MenuIcon' is defined but never used.","'NavTopI' is defined but never used.","'IconButton' is defined but never used.","'useContext' is defined but never used.","'clsx' is defined but never used.","'SetStateAction' is defined but never used.","'Divider' is defined but never used.","'AddIcon' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'authContext' is assigned a value but never used.","'yupResolver' is defined but never used.","'RegisterStatus' is defined but never used.","'InputAdornment' is defined but never used.","'HelpOutlineIcon' is defined but never used.","'Popover' is defined but never used.","'makeStyles' is defined but never used.","'API_URL' is assigned a value but never used.","'API_CLIENT' is assigned a value but never used.","'React' is defined but never used.","'blue' is defined but never used.","'Redirect' is defined but never used.","'index' is assigned a value but never used.","'CssBaseline' is defined but never used.","'FeatureRoute' is defined but never used.","'Link' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'useRouteMatch' is defined but never used.","'width' is assigned a value but never used.","'setWidth' is assigned a value but never used.","'authData' is assigned a value but never used.","'PlatformDetail' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'authAxios', 'dispatch', and 'platformid'. Either include them or remove the dependency array.",["1174"],"React Hook useEffect has an unnecessary dependency: 'window.innerWidth'. Either exclude it or remove the dependency array. Outer scope values like 'window.innerWidth' aren't valid dependencies because mutating them doesn't re-render the component.",["1175"],"'handleSubmit' is assigned a value but never used.","'Container' is defined but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'ZohoPeopleForm' is defined but never used.","'domain' is assigned a value but never used.","'param' is assigned a value but never used.",["1176"],"'useStylesForm' is defined but never used.","'WrapperApp' is defined but never used.","'useParams' is defined but never used.","React Hook useEffect has a missing dependency: 'call'. Either include it or remove the dependency array.",["1177"],"'makeStyle' is defined but never used.","'windowpopStatus' is defined but never used.","'DashboardGrid' is defined but never used.","'useHistory' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'platformid'. Either include them or remove the dependency array.",["1178"],"'title' is assigned a value but never used.","'ConnectionSectionItemListStatus' is defined but never used.","'CircularProgress' is defined but never used.","'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'authAxios', 'id', and 'platformid'. Either include them or remove the dependency array.",["1179"],"'windowpopOpen' is defined but never used.","'CMDI' is defined but never used.","'FormControl' is defined but never used.","'register' is assigned a value but never used.","'watch' is assigned a value but never used.","'country' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'handleChangeCountry' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'authData.userInfo.email', 'dispatch', 'reset', and 'userDetail'. Either include them or remove the dependency array. You can also do a functional update 'setUserDetail(u => ...)' if you only need 'userDetail' in the 'setUserDetail' call.",["1180"],"'FaFacebookSquare' is defined but never used.","'FaLinkedin' is defined but never used.","'FaGoogle' is defined but never used.","'FormInputLogin' is defined but never used.","'RLogin' is defined but never used.","'dispatch' is assigned a value but never used.","'CONNECTION_SERVICE_FAIL' is defined but never used.","'CONNECTION_METRICS_FAIL' is defined but never used.","'Locations' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'dispatch', 'platformid', 'selectedMetrics', 'serviceId', and 'state'. Either include them or remove the dependency array. You can also do a functional update 'setSelectedMetrics(s => ...)' if you only need 'selectedMetrics' in the 'setSelectedMetrics' call.",["1181"],"React Hook useEffect has a missing dependency: 'onSubmit'. Either include it or remove the dependency array.",["1182"],"'MouseEvent' is defined but never used.","'GiPieChart' is defined but never used.","'BiPieChartAlt' is defined but never used.","'FaRegChartBar' is defined but never used.","React Hook useEffect has missing dependencies: 'onWindowClose' and 'onhandleRecall'. Either include them or remove the dependency array. If 'onhandleRecall' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1183"],"'minmaxDate' is assigned a value but never used.","'Y' is assigned a value but never used.","'bodyT' is assigned a value but never used.","'useCallback' is defined but never used.","'useMemo' is defined but never used.","'minY' is assigned a value but never used.","'maxY' is assigned a value but never used.","'minDate' is assigned a value but never used.","'maxDate' is assigned a value but never used.","'SortableHandle' is defined but never used.","'ArrowDropDownIcon' is defined but never used.","'VictoryContainer' is defined but never used.","'VictoryArea' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"1184","fix":"1185"},{"desc":"1186","fix":"1187"},{"desc":"1188","fix":"1189"},{"desc":"1190","fix":"1191"},{"desc":"1192","fix":"1193"},{"desc":"1194","fix":"1195"},{"desc":"1184","fix":"1196"},{"desc":"1197","fix":"1198"},{"desc":"1192","fix":"1199"},{"desc":"1200","fix":"1201"},{"desc":"1202","fix":"1203"},{"desc":"1204","fix":"1205"},{"desc":"1206","fix":"1207"},{"desc":"1208","fix":"1209"},"Update the dependencies array to be: [dispatch]",{"range":"1210","text":"1211"},"Update the dependencies array to be: [authAxios, dispatch]",{"range":"1212","text":"1213"},"Update the dependencies array to be: [authAxios]",{"range":"1214","text":"1215"},"Update the dependencies array to be: [authAxios, authData.userInfo.email, dispatch, loading]",{"range":"1216","text":"1217"},"Update the dependencies array to be: [authAxios, dispatch, platformid]",{"range":"1218","text":"1219"},"Update the dependencies array to be: []",{"range":"1220","text":"1221"},{"range":"1222","text":"1211"},"Update the dependencies array to be: [call]",{"range":"1223","text":"1224"},{"range":"1225","text":"1219"},"Update the dependencies array to be: [authAxios, id, platformid]",{"range":"1226","text":"1227"},"Update the dependencies array to be: [authAxios, authData.userInfo.email, dispatch, reset, userDetail]",{"range":"1228","text":"1229"},"Update the dependencies array to be: [authAxios, dispatch, platformid, selectedMetrics, serviceId, state]",{"range":"1230","text":"1231"},"Update the dependencies array to be: [onSubmit, recall]",{"range":"1232","text":"1233"},"Update the dependencies array to be: [MetricsDetail.service, onWindowClose, onhandleRecall]",{"range":"1234","text":"1235"},[766,768],"[dispatch]",[2212,2223],"[authAxios, dispatch]",[747,749],"[authAxios]",[2019,2028],"[authAxios, authData.userInfo.email, dispatch, loading]",[1910,1912],"[authAxios, dispatch, platformid]",[2095,2114],"[]",[1532,1534],[944,946],"[call]",[1625,1636],[1660,1662],"[authAxios, id, platformid]",[3908,3919],"[authAxios, authData.userInfo.email, dispatch, reset, userDetail]",[5793,5804],"[authAxios, dispatch, platformid, selectedMetrics, serviceId, state]",[7944,7952],"[onSubmit, recall]",[1357,1380],"[MetricsDetail.service, onWindowClose, onhandleRecall]"]